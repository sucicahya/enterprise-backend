{"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Source MT XXVII\\\\BOOTCAMP\\\\ENTERPRISE\\\\ENTERPRISE-BACKEND\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Source MT XXVII\\\\BOOTCAMP\\\\ENTERPRISE\\\\ENTERPRISE-BACKEND\",\"filename\":\"D:\\\\Source MT XXVII\\\\BOOTCAMP\\\\ENTERPRISE\\\\ENTERPRISE-BACKEND\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Source MT XXVII\\\\BOOTCAMP\\\\ENTERPRISE\\\\ENTERPRISE-BACKEND\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-duplicate-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"CallExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.25.2:development":{"value":{"code":"\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n// import express from \"express\";\n// import bodyParser from \"body-parser\";\n// import cors from \"cors\";\n// const port = process.env.PORT || 3000;\n// const app = express();\n// app.use(bodyParser.json());\n// app.use(bodyParser.urlencoded({ extended: true }));\n// app.use(cors());\n// app.get(\"/*\", (req, res) => {\n//     res.status(200).json({ message: \"Hello-world\" });\n// });\n// app.listen(port, () => {\n//     console.log('Server-running on port 3000');\n// });\n\nvar express = require('express');\nvar bcrypt = require('bcrypt');\nvar jwt = require('jsonwebtoken');\nvar sql = require('msnodesqlv8');\nvar cors = require('cors');\nvar app = express();\nvar port = 5000;\nvar md5 = require('md5');\nvar connectionString = \"Driver={ODBC Driver 17 for SQL Server};Server=40005-MP1PWS22;Database=enterprise;Trusted_Connection=yes;\";\n\n// sql.open(connectionString, (err, conn) => {\n//   if (err) {\n//     console.error('Error occurred:', err);\n//     return;\n//   }\n\n//   const query = 'SELECT * FROM produk'; // Replace with your table name\n\n//   conn.query(query, (err, results) => {\n//     if (err) {\n//       console.error('Error executing query:', err);\n//     } else {\n//       console.log(results);\n//     }\n\n//     conn.close();\n//   });\n// });\n\n// Middleware\napp.use(cors());\napp.use(express.json());\nvar jwtkey = \"secret\";\nvar saltRounds = 12;\n\n// Fungsi untuk meng-hash password\nvar hashPassword = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(password) {\n    var hashedPassword;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return bcrypt.hash(password, saltRounds);\n        case 3:\n          hashedPassword = _context.sent;\n          return _context.abrupt(\"return\", hashedPassword);\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.error('Error hashing password:', _context.t0);\n          throw new Error('Error hashing password');\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n  return function hashPassword(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar comparePassword = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(plainPassword, hashedPassword) {\n    var match;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return bcrypt.compare(plainPassword, hashedPassword);\n        case 3:\n          match = _context2.sent;\n          return _context2.abrupt(\"return\", match);\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error('Error comparing passwords:', _context2.t0);\n          throw new Error('Error comparing passwords');\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[0, 7]]);\n  }));\n  return function comparePassword(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\n// API Endpoint\napp.post('/login-sim', function (req, res) {\n  var _req$body = req.body,\n    USERNAME = _req$body.USERNAME,\n    PASS = _req$body.PASS;\n  sql.open(connectionString, function (err, conn) {\n    if (err) {\n      console.error('Error occurred:', err);\n      res.status(500).send('Database connection error');\n      return;\n    }\n    var query = \"SELECT * FROM karyawan WHERE USERNAME = '\".concat(USERNAME, \"';\");\n    conn.query(query, /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(err, results) {\n        var hashedPassword, match, payload, options, token;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!err) {\n                _context3.next = 5;\n                break;\n              }\n              console.error('Error executing query:', err);\n              conn.close();\n              res.status(500).send('Query execution error');\n              return _context3.abrupt(\"return\");\n            case 5:\n              if (!(results.length === 0)) {\n                _context3.next = 9;\n                break;\n              }\n              conn.close();\n              res.status(401).send('Invalid username or password');\n              return _context3.abrupt(\"return\");\n            case 9:\n              hashedPassword = results[0].PASS; // Password yang ter-hash dari database\n              _context3.prev = 10;\n              _context3.next = 13;\n              return bcrypt.compare(PASS, hashedPassword);\n            case 13:\n              match = _context3.sent;\n              if (match) {\n                payload = {\n                  userId: results[0].ID,\n                  username: results[0].USERNAME\n                };\n                options = {\n                  expiresIn: '1h' // Token berlaku selama 1 jam\n                };\n                token = jwt.sign(payload, jwtkey, options);\n                res.json({\n                  success: true,\n                  token: token\n                });\n              } else {\n                res.status(401).send('Invalid username or password');\n              }\n              _context3.next = 21;\n              break;\n            case 17:\n              _context3.prev = 17;\n              _context3.t0 = _context3[\"catch\"](10);\n              console.error('Error comparing passwords:', _context3.t0);\n              res.status(500).send('Error comparing passwords');\n            case 21:\n              conn.close();\n            case 22:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[10, 17]]);\n      }));\n      return function (_x4, _x5) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n  });\n});\napp.get('/main-table', function (req, res) {\n  sql.open(connectionString, function (err, conn) {\n    if (err) {\n      console.error('Error occurred:', err);\n      res.status(500).send('Database connection error');\n      return;\n    }\n    var query = \"\\n    SELECT produk.ID_PRODUK, \\n    produk.NAMA_PRODUK, \\n    produk_detail.URL, \\n    spec_server.IP_SERVER, \\n    karyawan.NAMA, \\n    status.NAMA_STATUS \\n    FROM produk \\n    INNER JOIN produk_detail ON produk.ID_PRODUK = produk_detail.PRODUK_ID \\n    INNER JOIN spec_server ON produk_detail.SERVER = spec_server.ID_SPEC_SERVER \\n    INNER JOIN karyawan ON produk_detail.PIC_NIPPOS = karyawan.NIPPOS \\n    INNER JOIN status ON produk.FLAG_STATUS = status.ID_STATUS\";\n    conn.query(query, function (err, results) {\n      if (err) {\n        console.error('Error executing query:', err);\n        res.status(500).send('Query execution error', err);\n      } else {\n        res.json(results);\n      }\n      conn.close();\n    });\n  });\n});\napp.get('/penempatan-cloud', function (req, res) {\n  sql.open(connectionString, function (err, conn) {\n    if (err) {\n      console.error('Error occurred:', err);\n      res.status(500).send('Database connection error');\n      return;\n    }\n    var query = \"\\n    SELECT penempatan.NAMA_PENEMPATAN AS penempatan, \\n    COUNT(produk.NAMA_PRODUK) AS total \\n    FROM penempatan \\n    LEFT JOIN produk_detail ON penempatan.ID_PENEMPATAN = produk_detail.PENEMPATAN \\n    LEFT JOIN produk ON produk.ID_PRODUK = produk_detail.PRODUK_ID \\n    WHERE penempatan.NAMA_PENEMPATAN = 'Cloud' \\n    GROUP BY penempatan.NAMA_PENEMPATAN;\";\n    conn.query(query, function (err, results) {\n      if (err) {\n        console.error('Error executing query:', err);\n        res.status(500).send('Query execution error', err);\n      } else {\n        res.json(results);\n      }\n      conn.close();\n    });\n  });\n});\napp.get('/penempatan-onprem', function (req, res) {\n  sql.open(connectionString, function (err, conn) {\n    if (err) {\n      console.error('Error occurred:', err);\n      res.status(500).send('Database connection error');\n      return;\n    }\n    var query = \"\\n    SELECT penempatan.NAMA_PENEMPATAN AS penempatan, \\n    COUNT(produk.NAMA_PRODUK) AS total \\n    FROM penempatan \\n    LEFT JOIN produk_detail ON penempatan.ID_PENEMPATAN = produk_detail.PENEMPATAN \\n    LEFT JOIN produk ON produk.ID_PRODUK = produk_detail.PRODUK_ID \\n    WHERE penempatan.NAMA_PENEMPATAN = 'On-Premise' \\n    GROUP BY penempatan.NAMA_PENEMPATAN;\";\n    conn.query(query, function (err, results) {\n      if (err) {\n        console.error('Error executing query:', err);\n        res.status(500).send('Query execution error', err);\n      } else {\n        res.json(results);\n      }\n      conn.close();\n    });\n  });\n});\napp.get('/status-aktif', function (req, res) {\n  sql.open(connectionString, function (err, conn) {\n    if (err) {\n      console.error('Error occurred:', err);\n      res.status(500).send('Database connection error');\n      return;\n    }\n    var query = \"\\n    SELECT status.NAMA_STATUS AS status, \\n    COUNT(produk.NAMA_PRODUK) AS total \\n    FROM status \\n    LEFT JOIN produk ON produk.FLAG_STATUS = status.ID_STATUS \\n    WHERE status.NAMA_STATUS = 'Aktif' \\n    GROUP BY status.NAMA_STATUS;\";\n    conn.query(query, function (err, results) {\n      if (err) {\n        console.error('Error executing query:', err);\n        res.status(500).send('Query execution error', err);\n      } else {\n        res.json(results);\n      }\n      conn.close();\n    });\n  });\n});\napp.get('/status-nonaktif', function (req, res) {\n  sql.open(connectionString, function (err, conn) {\n    if (err) {\n      console.error('Error occurred:', err);\n      res.status(500).send('Database connection error');\n      return;\n    }\n    var query = \"\\n    SELECT status.NAMA_STATUS AS status, \\n    COUNT(produk.NAMA_PRODUK) AS total \\n    FROM status \\n    LEFT JOIN produk ON produk.FLAG_STATUS = status.ID_STATUS \\n    WHERE status.NAMA_STATUS = 'Non-Aktif' \\n    GROUP BY status.NAMA_STATUS;\";\n    conn.query(query, function (err, results) {\n      if (err) {\n        console.error('Error executing query:', err);\n        res.status(500).send('Query execution error', err);\n      } else {\n        res.json(results);\n      }\n      conn.close();\n    });\n  });\n});\napp.get('/total', function (req, res) {\n  sql.open(connectionString, function (err, conn) {\n    if (err) {\n      console.error('Error occurred:', err);\n      res.status(500).send('Database connection error');\n      return;\n    }\n    var query = \"SELECT COUNT(NAMA_PRODUK) AS total FROM produk;\";\n    conn.query(query, function (err, results) {\n      if (err) {\n        console.error('Error executing query:', err);\n        res.status(500).send('Query execution error', err);\n      } else {\n        res.json(results);\n      }\n      conn.close();\n    });\n  });\n});\napp.get('/produk-masuk', function (req, res) {\n  sql.open(connectionString, function (err, conn) {\n    if (err) {\n      console.error('Error occurred:', err);\n      res.status(500).send('Database connection error');\n      return;\n    }\n    var query = \"\\n    SELECT COUNT(produk.NAMA_PRODUK) AS total \\n    FROM produk \\n    LEFT JOIN produk_detail ON produk.ID_PRODUK = produk_detail.PRODUK_ID \\n    WHERE DATEPART(MONTH, produk_detail.TANGGAL_DEPLOY) = DATEPART(MONTH, GETDATE()) \\n    AND DATEPART(YEAR, produk_detail.TANGGAL_DEPLOY) = DATEPART(YEAR, GETDATE());\";\n    conn.query(query, function (err, results) {\n      if (err) {\n        console.error('Error executing query:', err);\n        res.status(500).send('Query execution error', err);\n      } else {\n        res.json(results);\n      }\n      conn.close();\n    });\n  });\n});\napp.get('/jenis-database', function (req, res) {\n  sql.open(connectionString, function (err, conn) {\n    if (err) {\n      console.error('Error occurred:', err);\n      res.status(500).send('Database connection error');\n      return;\n    }\n    var query = \"\\n    SELECT produk_detail.JENIS_DATABASE AS db, \\nCOUNT(produk.NAMA_PRODUK) AS total \\nFROM produk_detail  \\nLEFT JOIN produk ON produk.ID_PRODUK = produk_detail.PRODUK_ID\\nGROUP BY produk_detail.JENIS_DATABASE;\";\n    conn.query(query, function (err, results) {\n      if (err) {\n        console.error('Error executing query:', err);\n        res.status(500).send('Query execution error', err);\n      } else {\n        res.json(results);\n      }\n      conn.close();\n    });\n  });\n});\napp.get('/pilih-penempatan', function (req, res) {\n  sql.open(connectionString, function (err, conn) {\n    if (err) {\n      console.error('Error occurred:', err);\n      res.status(500).send('Database connection error');\n      return;\n    }\n    var query = \"SELECT * FROM penempatan\";\n    conn.query(query, function (err, results) {\n      if (err) {\n        console.error('Error executing query:', err);\n        res.status(500).send('Query execution error', err);\n      } else {\n        res.json(results);\n      }\n      conn.close();\n    });\n  });\n});\napp.get('/pilih-karyawan', function (req, res) {\n  sql.open(connectionString, function (err, conn) {\n    if (err) {\n      console.error('Error occurred:', err);\n      res.status(500).send('Database connection error');\n      return;\n    }\n    var query = \"SELECT * FROM karyawan\";\n    conn.query(query, function (err, results) {\n      if (err) {\n        console.error('Error executing query:', err);\n        res.status(500).send('Query execution error', err);\n      } else {\n        res.json(results);\n      }\n      conn.close();\n    });\n  });\n});\napp.get('/pilih-akses', function (req, res) {\n  sql.open(connectionString, function (err, conn) {\n    if (err) {\n      console.error('Error occurred:', err);\n      res.status(500).send('Database connection error');\n      return;\n    }\n    var query = \"SELECT * FROM akses\";\n    conn.query(query, function (err, results) {\n      if (err) {\n        console.error('Error executing query:', err);\n        res.status(500).send('Query execution error', err);\n      } else {\n        res.json(results);\n      }\n      conn.close();\n    });\n  });\n});\napp.get('/pilih-developer', function (req, res) {\n  sql.open(connectionString, function (err, conn) {\n    if (err) {\n      console.error('Error occurred:', err);\n      res.status(500).send('Database connection error');\n      return;\n    }\n    var query = \"SELECT * FROM developer\";\n    conn.query(query, function (err, results) {\n      if (err) {\n        console.error('Error executing query:', err);\n        res.status(500).send('Query execution error', err);\n      } else {\n        res.json(results);\n      }\n      conn.close();\n    });\n  });\n});\napp.get('/pilih-status', function (req, res) {\n  sql.open(connectionString, function (err, conn) {\n    if (err) {\n      console.error('Error occurred:', err);\n      res.status(500).send('Database connection error');\n      return;\n    }\n    var query = \"SELECT * FROM status\";\n    conn.query(query, function (err, results) {\n      if (err) {\n        console.error('Error executing query:', err);\n        res.status(500).send('Query execution error', err);\n      } else {\n        res.json(results);\n      }\n      conn.close();\n    });\n  });\n});\napp.get('/pilih-server', function (req, res) {\n  sql.open(connectionString, function (err, conn) {\n    if (err) {\n      console.error('Error occurred:', err);\n      res.status(500).send('Database connection error');\n      return;\n    }\n    var query = \"SELECT * FROM web_server\";\n    conn.query(query, function (err, results) {\n      if (err) {\n        console.error('Error executing query:', err);\n        res.status(500).send('Query execution error', err);\n      } else {\n        res.json(results);\n      }\n      conn.close();\n    });\n  });\n});\napp.post('/full-detail', function (req, res) {\n  sql.open(connectionString, function (err, conn) {\n    var id = req.body.id; // Mengambil id dari objek req.body\n    // console.log('Received ID:', id);\n    if (err) {\n      console.error('Error occurred:', err);\n      res.status(500).send('Database connection error');\n      return;\n    }\n    var query = \"\\n    SELECT produk.ID_PRODUK, \\n    produk.NAMA_PRODUK, \\n    produk.DESKRIPSI_PRODUK, \\n    produk.FLAG_STATUS,\\n\\n    akses.NAMA_AKSES, \\n    akses.ID_AKSES,\\n\\n    developer.ID_DEVELOPER,\\n    developer.NAMA_DEVELOPER, \\n    \\n    karyawan.NAMA, \\n    karyawan.TELEPON, \\n    karyawan.NIPPOS,\\n    karyawan.USERNAME,\\n    karyawan.PASS,\\n\\n    penempatan.NAMA_PENEMPATAN, \\n    penempatan.ID_PENEMPATAN,\\n\\n    status.NAMA_STATUS, \\n    status.ID_STATUS,\\n\\n    produk_detail.ID_PRODUK_DETAIL,\\n    produk_detail.PRODUK_ID,\\n    produk_detail.PENEMPATAN,\\n    produk_detail.PIC_NIPPOS, \\n    produk_detail.AKSES,\\n    produk_detail.DEVELOPER,\\n    produk_detail.SERVER,\\n    produk_detail.BUSINESS_OWNER, \\n    produk_detail.WAKTU_OPERASIONAL, \\n    produk_detail.URL, \\n    produk_detail.PORT, \\n    produk_detail.FRAMEWORK, \\n    produk_detail.VER_FRAMEWORK, \\n    produk_detail.JENIS_DATABASE, \\n    produk_detail.TANGGAL_LIVE, \\n    produk_detail.TANGGAL_AKHIR_UPDATE, \\n    produk_detail.TANGGAL_TUTUP, \\n    produk_detail.TANGGAL_DEPLOY, \\n    produk_detail.BA_DEPLOY, \\n    produk_detail.REQ_DEPLOY, \\n\\n    spec_server.ID_SPEC_SERVER,\\n    spec_server.WEB_SERVER_ID,\\n    spec_server.IP_SERVER, \\n    spec_server.CPU, \\n    spec_server.RAM, \\n    spec_server.STORAGE, \\n\\n    web_server.ID_WEB_SERVER,\\n    web_server.NAMA_WEB_SERVER \\n\\n    FROM produk_detail \\n    INNER JOIN produk ON produk.ID_PRODUK = produk_detail.PRODUK_ID \\n    INNER JOIN status ON produk.FLAG_STATUS = status.ID_STATUS \\n    INNER JOIN akses ON produk_detail.AKSES = akses.ID_AKSES \\n    INNER JOIN developer ON produk_detail.DEVELOPER = developer.ID_DEVELOPER \\n    INNER JOIN karyawan ON karyawan.NIPPOS = produk_detail.PIC_NIPPOS \\n    INNER JOIN penempatan ON produk_detail.PENEMPATAN = penempatan.ID_PENEMPATAN \\n    INNER JOIN spec_server ON produk_detail.SERVER = spec_server.ID_SPEC_SERVER \\n    INNER JOIN web_server ON spec_server.WEB_SERVER_ID = web_server.ID_WEB_SERVER \\n    WHERE produk.ID_PRODUK = \".concat(id, \";\");\n\n    // console.log('Received ID:', query);\n    conn.query(query, function (err, results) {\n      if (err) {\n        console.error('Error executing query:', err);\n        res.status(500).send('Query execution error', err);\n      } else {\n        // console.log('Query Results:', results);\n        res.json(results);\n      }\n      conn.close();\n    });\n  });\n\n  // const { id } = req.body; // Mengambil id dari objek req.body\n  // console.log('Received ID:', id);\n  // if (!id) {\n  //   return res.status(400).send('ID is required');\n  // }\n\n  // sql.open(connectionString, (err, conn) => {\n  //   if (err) {\n  //     console.error('Error occurred:', err);\n  //     res.status(500).send('Database connection error');\n  //     return;\n  //   }\n\n  //   const query = `SELECT produk.NAMA_PRODUK, produk.DESKRIPSI_PRODUK, account.USERNAME, account.PASS, account.TANGGAL_CREATE, account.TANGGAL_UPDATE, account.EXP_DATE_PASSWORD, account.JENIS_AKUN, akses.NAMA_AKSES, developer.NAMA_DEVELOPER, karyawan.NAMA, karyawan.TELEPON, penempatan.NAMA_PENEMPATAN, status.NAMA_STATUS, produk_detail.PIC_NIPPOS, produk_detail.BUSINESS_OWNER, produk_detail.WAKTU_OPERASIONAL, produk_detail.URL, produk_detail.PORT, produk_detail.FRAMEWORK, produk_detail.VER_FRAMEWORK, produk_detail.JENIS_DATABASE, produk_detail.TANGGAL_LIVE, produk_detail.TANGGAL_AKHIR_UPDATE, produk_detail.TANGGAL_TUTUP, produk_detail.TANGGAL_DEPLOY, produk_detail.BA_DEPLOY, produk_detail.REQ_DEPLOY, spec_server.IP_SERVER, spec_server.CPU, spec_server.RAM, spec_server.STORAGE, web_server.NAMA_WEB_SERVER FROM produk_detail INNER JOIN produk ON produk.ID_PRODUK = produk_detail.PRODUK_ID INNER JOIN status ON produk.FLAG_STATUS = status.ID_STATUS INNER JOIN account ON produk.ID_PRODUK = account.PRODUK_ID INNER JOIN akses ON produk_detail.AKSES = akses.ID_AKSES INNER JOIN developer ON produk_detail.DEVELOPER = developer.ID_DEVELOPER INNER JOIN karyawan ON karyawan.NIPPOS = produk_detail.PIC_NIPPOS INNER JOIN penempatan ON produk_detail.PENEMPATAN = penempatan.ID_PENEMPATAN INNER JOIN spec_server ON produk_detail.SERVER = spec_server.ID_SPEC_SERVER INNER JOIN web_server ON spec_server.WEB_SERVER_ID = web_server.ID_WEB_SERVER WHERE produk_detail.ID_PRODUK_DETAIL = ${id};`;\n  //   console.log('Received ID:', query);\n  //   conn.query(query, [id], (err, results) => {\n  //     if (err) {\n  //       console.error('Error executing query:', err);\n  //       res.status(500).send('Query execution error', err);\n  //     } else {\n  //       res.json(results);\n  //     }\n\n  //     conn.close();\n  // });\n  // });\n});\napp.post('/full-account', function (req, res) {\n  sql.open(connectionString, function (err, conn) {\n    var id = req.body.id; // Mengambil id dari objek req.body\n    // console.log('Received ID:', id);\n    if (err) {\n      console.error('Error occurred:', err);\n      res.status(500).send('Database connection error');\n      return;\n    }\n    var query = \"\\n    SELECT account.ID_ACCOUNT, \\n    account.USERNAME, \\n    account.PASS, \\n    account.EXP_DATE_PASSWORD, \\n    account.JENIS_AKUN FROM account \\n    WHERE account.PRODUK_ID = \".concat(id, \";\");\n    // console.log('Received ID:', query);\n    conn.query(query, function (err, results) {\n      if (err) {\n        console.error('Error executing query:', err);\n        res.status(500).send('Query execution error', err);\n      } else {\n        // console.log('Query Results:', results);\n        res.json(results);\n      }\n      conn.close();\n    });\n  });\n});\napp.post('/update-all', function (req, res) {\n  sql.open(connectionString, function (err, conn) {\n    console.log('pppp', req.body);\n    var ID_PRODUK = Number(req.body.ID_PRODUK); // Mengambil id dari objek req.body\n    var NAMA_PRODUK = req.body.NAMA_PRODUK;\n    var DESKRIPSI_PRODUK = req.body.DESKRIPSI_PRODUK;\n    console.log('pppp', _typeof(ID_PRODUK));\n    console.log('pppp', _typeof(NAMA_PRODUK));\n    console.log('pppp', _typeof(DESKRIPSI_PRODUK));\n    var URL = req.body.URL;\n    var IP_SERVER = req.body.IP_SERVER;\n    var PENEMPATAN = Number(req.body.PENEMPATAN);\n    var AKSES = Number(req.body.AKSES);\n    var CPU = req.body.CPU;\n    var RAM = req.body.RAM;\n    var STORAGE = req.body.STORAGE;\n    var SERVER = Number(req.body.SERVER);\n    var JENIS_DATABASE = req.body.JENIS_DATABASE;\n    var FRAMEWORK = req.body.FRAMEWORK;\n    var VER_FRAMEWORK = req.body.VER_FRAMEWORK;\n    var WAKTU_OPERASIONAL = req.body.WAKTU_OPERASIONAL;\n    var DEVELOPER = req.body.DEVELOPER;\n    var BUSINESS_OWNER = req.body.BUSINESS_OWNER;\n    var PIC_NIPPOS = req.body.PIC_NIPPOS;\n    // const { TELEPON } = req.body.TELEPON;\n    var PORT = req.body.PORT;\n    var NAMA_STATUS = Number(req.body.NAMA_STATUS);\n    var WEB_SERVER_ID = Number(req.body.WEB_SERVER_ID);\n    var TANGGAL_LIVE = req.body.TANGGAL_LIVE;\n    var TANGGAL_DEPLOY = req.body.TANGGAL_DEPLOY;\n    var TANGGAL_AKHIR_UPDATE = req.body.TANGGAL_AKHIR_UPDATE;\n    var TANGGAL_TUTUP = req.body.TANGGAL_TUTUP;\n    var ID_ACCOUNT = req.body.ID_ACCOUNT;\n    var JENIS_AKUN = req.body.JENIS_AKUN;\n    var USERNAME = req.body.USERNAME;\n    var PASS = req.body.PASS;\n    var EXP_DATE_PASSWORD = req.body.EXP_DATE_PASSWORD;\n    var LENGTH_ACCOUNT = Number(req.body.LENGTH_ACCOUNT);\n    var TANGGAL_UPDATE = new Date().toISOString().split('T')[0];\n    console.log('Received ID:', ID_ACCOUNT);\n    console.log('Received ID:', JENIS_AKUN);\n    console.log('Received ID:', USERNAME);\n    console.log('Received ID:', PASS);\n    console.log('Received ID:', _typeof(EXP_DATE_PASSWORD[0]));\n    console.log('Received ID:', _typeof(TANGGAL_LIVE));\n    console.log('Received ID:', LENGTH_ACCOUNT);\n    if (err) {\n      console.error('Error occurred:', err);\n      res.status(500).send('Database connection error');\n      return;\n    }\n    var query1 = \"UPDATE produk_detail SET\\n    PIC_NIPPOS = '\".concat(PIC_NIPPOS, \"',\\n    PENEMPATAN = \").concat(PENEMPATAN, \",\\n    AKSES = \").concat(AKSES, \",\\n    DEVELOPER = \").concat(DEVELOPER, \",\\n    SERVER = \").concat(SERVER, \",\\n    BUSINESS_OWNER = '\").concat(BUSINESS_OWNER, \"',\\n    WAKTU_OPERASIONAL = '\").concat(WAKTU_OPERASIONAL, \"',\\n    URL = '\").concat(URL, \"',\\n    PORT = '\").concat(PORT, \"',\\n    FRAMEWORK = '\").concat(FRAMEWORK, \"',\\n    VER_FRAMEWORK = '\").concat(VER_FRAMEWORK, \"',\\n    JENIS_DATABASE = '\").concat(JENIS_DATABASE, \"',\\n    TANGGAL_LIVE = CAST(NULLIF('\").concat(TANGGAL_LIVE, \"', '') AS DATE),\\n    TANGGAL_AKHIR_UPDATE = CAST(NULLIF('\").concat(TANGGAL_AKHIR_UPDATE, \"', '') AS DATE),\\n    TANGGAL_TUTUP = CAST(NULLIF('\").concat(TANGGAL_TUTUP, \"', '') AS DATE),\\n    TANGGAL_DEPLOY = CAST(NULLIF('\").concat(TANGGAL_DEPLOY, \"', '') AS DATE)\\n    WHERE PRODUK_ID = \").concat(ID_PRODUK, \";\");\n    var query2 = \"UPDATE produk SET \\n    NAMA_PRODUK = '\".concat(NAMA_PRODUK, \"',\\n    DESKRIPSI_PRODUK = '\").concat(DESKRIPSI_PRODUK, \"' \\n    WHERE ID_PRODUK = \").concat(ID_PRODUK, \";\");\n    var query3 = \"UPDATE spec_server SET\\n    WEB_SERVER_ID = \".concat(WEB_SERVER_ID, \",\\n    IP_SERVER = '\").concat(IP_SERVER, \"',\\n    CPU = '\").concat(CPU, \"',\\n    RAM = '\").concat(RAM, \"',\\n    STORAGE = '\").concat(STORAGE, \"'\\n    WHERE ID_SPEC_SERVER = \").concat(SERVER, \";\\n    \");\n    var query4 = '';\n    for (var i = 0; i < LENGTH_ACCOUNT; i++) {\n      query4 += \"UPDATE account SET\\n        JENIS_AKUN = '\".concat(JENIS_AKUN[i], \"',\\n        USERNAME = '\").concat(USERNAME[i], \"',\\n        PASS = '\").concat(PASS[i], \"',\\n        EXP_DATE_PASSWORD = '\").concat(EXP_DATE_PASSWORD[i], \"',\\n        TANGGAL_UPDATE = '\").concat(TANGGAL_UPDATE, \"'\\n        WHERE ID_ACCOUNT = \").concat(ID_ACCOUNT[i], \";\\n\");\n    }\n\n    // console.log('Received ID:', query);\n    conn.query(query1, function (err, results) {\n      if (err) {\n        console.error('Error executing query1:', err);\n        conn.close();\n        res.status(500).send('Query1 execution error');\n        return;\n      }\n      conn.query(query2, function (err, results) {\n        if (err) {\n          console.error('Error executing query2:', err);\n          conn.close();\n          res.status(500).send('Query2 execution error');\n          return;\n        }\n        conn.query(query3, function (err, results) {\n          if (err) {\n            console.error('Error executing query3:', err);\n            conn.close();\n            res.status(500).send('Query3 execution error');\n            return;\n          }\n          conn.query(query4, function (err, results) {\n            if (err) {\n              console.error('Error executing query3:', err);\n              conn.close();\n              res.status(500).send('Query3 execution error');\n              return;\n            }\n            res.json({\n              success: true\n            });\n            conn.close();\n          });\n        });\n      });\n    });\n\n    // conn.query(query2, (err, results) => {\n    //   if (err) {\n    //     console.error('Error executing query:', err);\n    //     res.status(500).send('Query execution error', err);\n    //   } else {\n    //     // console.log('Query Results:', results);\n    //     res.json(results);\n    //   }\n\n    //   conn.close();\n    // });\n  });\n});\napp.post('/new-penempatan', function (req, res) {\n  sql.open(connectionString, function (err, conn) {\n    var NEW_NAMA_PENEMPATAN = req.body.NEW_NAMA_PENEMPATAN;\n    // console.log('Received NEW_NAMA_PENEMPATAN:', NEW_NAMA_PENEMPATAN);\n    if (err) {\n      console.error('Error occurred:', err);\n      res.status(500).send('Database connection error');\n      return;\n    }\n    var query = \"\\n    INSERT INTO penempatan(NAMA_PENEMPATAN) VALUES ('\".concat(NEW_NAMA_PENEMPATAN, \"');\");\n    console.log(\"query\", query);\n    conn.query(query, function (err, results) {\n      if (err) {\n        console.error('Error executing query:', err);\n        res.status(500).send('Query execution error', err);\n      } else {\n        // console.log('Query Results:', results);\n        res.json(results);\n      }\n      conn.close();\n    });\n  });\n});\n\"\\n\";\napp.post('/new-akses', function (req, res) {\n  sql.open(connectionString, function (err, conn) {\n    var NEW_NAMA_AKSES = req.body.NEW_NAMA_AKSES;\n    // console.log('Received NEW_NAMA_AKSES:', NEW_NAMA_AKSES);\n    if (err) {\n      console.error('Error occurred:', err);\n      res.status(500).send('Database connection error');\n      return;\n    }\n    var query = \"\\n    INSERT INTO akses(NAMA_AKSES) VALUES ('\".concat(NEW_NAMA_AKSES, \"');\");\n    console.log(\"query\", query);\n    conn.query(query, function (err, results) {\n      if (err) {\n        console.error('Error executing query:', err);\n        res.status(500).send('Query execution error', err);\n      } else {\n        // console.log('Query Results:', results);\n        res.json(results);\n      }\n      conn.close();\n    });\n  });\n});\napp.post('/new-webserver', function (req, res) {\n  sql.open(connectionString, function (err, conn) {\n    var NEW_NAMA_WEB_SERVER = req.body.NEW_NAMA_WEB_SERVER;\n    // console.log('Received NEW_NAMA_WEB_SERVER:', NEW_NAMA_WEB_SERVER);\n    if (err) {\n      console.error('Error occurred:', err);\n      res.status(500).send('Database connection error');\n      return;\n    }\n    var query = \"\\n    INSERT INTO web_server(NAMA_WEB_SERVER) VALUES ('\".concat(NEW_NAMA_WEB_SERVER, \"');\");\n    console.log(\"query\", query);\n    conn.query(query, function (err, results) {\n      if (err) {\n        console.error('Error executing query:', err);\n        res.status(500).send('Query execution error', err);\n      } else {\n        // console.log('Query Results:', results);\n        res.json(results);\n      }\n      conn.close();\n    });\n  });\n});\napp.post('/new-developer', function (req, res) {\n  sql.open(connectionString, function (err, conn) {\n    var NEW_NAMA_DEVELOPER = req.body.NEW_NAMA_DEVELOPER;\n    // console.log('Received NEW_NAMA_DEVELOPER:', NEW_NAMA_DEVELOPER);\n    if (err) {\n      console.error('Error occurred:', err);\n      res.status(500).send('Database connection error');\n      return;\n    }\n    var query = \"\\n    INSERT INTO developer(NAMA_DEVELOPER) VALUES ('\".concat(NEW_NAMA_DEVELOPER, \"');\");\n    console.log(\"query\", query);\n    conn.query(query, function (err, results) {\n      if (err) {\n        console.error('Error executing query:', err);\n        res.status(500).send('Query execution error', err);\n      } else {\n        // console.log('Query Results:', results);\n        res.json(results);\n      }\n      conn.close();\n    });\n  });\n});\napp.post('/new-pic', function (req, res) {\n  sql.open(connectionString, function (err, conn) {\n    var NEW_NIPPOS_PIC = req.body.NEW_NIPPOS_PIC;\n    var NEW_NAMA_PIC = req.body.NEW_NAMA_PIC;\n    var NEW_TELEPON_PIC = req.body.NEW_TELEPON_PIC;\n    var NEW_USERNAME_PIC = req.body.NEW_USERNAME_PIC;\n    var NEW_PASS_PIC = req.body.NEW_PASS_PIC;\n    console.log('Received NEW_NAMA_PIC:', NEW_NAMA_PIC);\n    if (err) {\n      console.error('Error occurred:', err);\n      res.status(500).send('Database connection error');\n      return;\n    }\n    var query = \"\\n    INSERT INTO karyawan(NIPPOS, NAMA, TELEPON, USERNAME, PASS) \\n    VALUES ('\".concat(NEW_NIPPOS_PIC, \"', '\").concat(NEW_NAMA_PIC, \"', '\").concat(NEW_TELEPON_PIC, \"', '\").concat(NEW_USERNAME_PIC, \"', '\").concat(NEW_PASS_PIC, \"');\");\n    console.log(\"query\", query);\n    conn.query(query, function (err, results) {\n      if (err) {\n        console.error('Error executing query:', err);\n        res.status(500).send('Query execution error', err);\n      } else {\n        // console.log('Query Results:', results);\n        res.json(results);\n      }\n      conn.close();\n    });\n  });\n});\napp.post('/new-status', function (req, res) {\n  sql.open(connectionString, function (err, conn) {\n    var NEW_NAMA_STATUS = req.body.NEW_NAMA_STATUS;\n    // console.log('Received NEW_NAMA_STATUS:', NEW_NAMA_STATUS);\n    if (err) {\n      console.error('Error occurred:', err);\n      res.status(500).send('Database connection error');\n      return;\n    }\n    var query = \"\\n    INSERT INTO status(NAMA_STATUS) VALUES ('\".concat(NEW_NAMA_STATUS, \"');\");\n    console.log(\"query\", query);\n    conn.query(query, function (err, results) {\n      if (err) {\n        console.error('Error executing query:', err);\n        res.status(500).send('Query execution error', err);\n      } else {\n        // console.log('Query Results:', results);\n        res.json(results);\n      }\n      conn.close();\n    });\n  });\n});\napp.post('/new-produk', function (req, res) {\n  sql.open(connectionString, function (err, conn) {\n    console.log('pppp', req.body);\n    // console.log('pppp', typeof (ID_PRODUK))\n    // console.log('pppp', typeof (NAMA_PRODUK))\n    // console.log('pppp', typeof (DESKRIPSI_PRODUK))\n\n    // var ID_PRODUK = Number(req.body.ID_PRODUK); \n    var NAMA_PRODUK = req.body.NAMA_PRODUK;\n    var DESKRIPSI_PRODUK = req.body.DESKRIPSI_PRODUK;\n    var URL = Array.isArray(req.body.URL) && req.body.URL.length === 0 ? null : JSON.stringify(req.body.URL).replace(/\"/g, \"'\");\n    var IP_SERVER = Array.isArray(req.body.IP_SERVER) && req.body.IP_SERVER.length === 0 ? null : JSON.stringify(req.body.IP_SERVER).replace(/\"/g, \"'\");\n    var PENEMPATAN = Array.isArray(req.body.PENEMPATAN) && req.body.PENEMPATAN.length === 0 ? null : Number(req.body.PENEMPATAN);\n    var AKSES = Array.isArray(req.body.AKSES) && req.body.AKSES.length === 0 ? null : Number(req.body.AKSES);\n    var CPU = Array.isArray(req.body.CPU) && req.body.CPU.length === 0 ? null : JSON.stringify(req.body.CPU).replace(/\"/g, \"'\");\n    var RAM = Array.isArray(req.body.RAM) && req.body.RAM.length === 0 ? null : JSON.stringify(req.body.RAM).replace(/\"/g, \"'\");\n    var STORAGE = Array.isArray(req.body.STORAGE) && req.body.STORAGE.length === 0 ? null : JSON.stringify(req.body.STORAGE).replace(/\"/g, \"'\");\n    var SERVER = Array.isArray(req.body.SERVER) && req.body.SERVER.length === 0 ? null : Number(req.body.SERVER);\n    var JENIS_DATABASE = Array.isArray(req.body.JENIS_DATABASE) && req.body.JENIS_DATABASE.length === 0 ? null : JSON.stringify(req.body.JENIS_DATABASE).replace(/\"/g, \"'\");\n    var FRAMEWORK = Array.isArray(req.body.FRAMEWORK) && req.body.FRAMEWORK.length === 0 ? null : JSON.stringify(req.body.FRAMEWORK).replace(/\"/g, \"'\");\n    var VER_FRAMEWORK = Array.isArray(req.body.VER_FRAMEWORK) && req.body.VER_FRAMEWORK.length === 0 ? null : JSON.stringify(req.body.VER_FRAMEWORK).replace(/\"/g, \"'\");\n    var WAKTU_OPERASIONAL = Array.isArray(req.body.WAKTU_OPERASIONAL) && req.body.WAKTU_OPERASIONAL.length === 0 ? null : JSON.stringify(req.body.WAKTU_OPERASIONAL).replace(/\"/g, \"'\");\n    var DEVELOPER = Array.isArray(req.body.DEVELOPER) && req.body.DEVELOPER.length === 0 ? null : Number(req.body.DEVELOPER);\n    var BUSINESS_OWNER = Array.isArray(req.body.BUSINESS_OWNER) && req.body.BUSINESS_OWNER.length === 0 ? null : JSON.stringify(req.body.BUSINESS_OWNER).replace(/\"/g, \"'\");\n    var PIC_NIPPOS = Array.isArray(req.body.PIC_NIPPOS) && req.body.PIC_NIPPOS.length === 0 ? null : JSON.stringify(req.body.PIC_NIPPOS).replace(/\"/g, \"'\");\n    // const { TELEPON } = req.body.TELEPON;\n    var PORT = Array.isArray(req.body.PORT) && req.body.PORT.length === 0 ? null : req.body.PORT;\n    var NAMA_STATUS = Number(req.body.NAMA_STATUS);\n    var FLAG_STATUS = Number(req.body.FLAG_STATUS);\n    var WEB_SERVER_ID = Number(req.body.WEB_SERVER_ID);\n    var TANGGAL_LIVE = Array.isArray(req.body.TANGGAL_LIVE) && req.body.TANGGAL_LIVE.length === 0 ? null : JSON.stringify(req.body.TANGGAL_LIVE).replace(/\"/g, \"'\");\n    var TANGGAL_DEPLOY = Array.isArray(req.body.TANGGAL_DEPLOY) && req.body.TANGGAL_DEPLOY.length === 0 ? null : JSON.stringify(req.body.TANGGAL_DEPLOY).replace(/\"/g, \"'\");\n    var TANGGAL_AKHIR_UPDATE = Array.isArray(req.body.TANGGAL_AKHIR_UPDATE) && req.body.TANGGAL_AKHIR_UPDATE.length === 0 ? null : JSON.stringify(req.body.TANGGAL_AKHIR_UPDATE).replace(/\"/g, \"'\");\n    var TANGGAL_TUTUP = Array.isArray(req.body.TANGGAL_TUTUP) && req.body.TANGGAL_TUTUP.length === 0 ? null : JSON.stringify(req.body.TANGGAL_TUTUP).replace(/\"/g, \"'\");\n    var ID_ACCOUNT = req.body.ID_ACCOUNT;\n    var JENIS_AKUN = req.body.JENIS_AKUN;\n    var USERNAME = req.body.USERNAME;\n    var USERNAMELength = req.body.USERNAME;\n    var PASS = req.body.PASS;\n    var EXP_DATE_PASSWORD = req.body.EXP_DATE_PASSWORD;\n    var LENGTH_ACCOUNT = Number(req.body.LENGTH_ACCOUNT);\n    var TANGGAL_CREATE = new Date().toISOString().split('T')[0];\n    // console.log('Received ID:', ID_ACCOUNT);\n    // console.log('Received ID:', JENIS_AKUN);\n    // console.log('Received ID:', USERNAME);\n    // console.log('Received ID:', PASS);\n    // console.log('Received ID:', typeof (EXP_DATE_PASSWORD[0]));\n    // console.log('Received ID:', typeof (TANGGAL_LIVE));\n    // console.log('Received ID:', LENGTH_ACCOUNT);\n    if (err) {\n      console.error('Error occurred:', err);\n      res.status(500).send('Database connection error');\n      return;\n    }\n    var query1 = \"INSERT INTO produk(FLAG_STATUS, NAMA_PRODUK, DESKRIPSI_PRODUK)\\n    VALUES (1,'\".concat(NAMA_PRODUK, \"','\").concat(DESKRIPSI_PRODUK, \"');\");\n    console.log('Received ID:', query1);\n    conn.query(query1, function (err, resultsq1) {\n      if (err) {\n        console.error('Error executing query1:', err);\n        conn.close();\n        res.status(500).send('Query1 execution error');\n        return;\n      }\n      var query2 = \"INSERT INTO spec_server (WEB_SERVER_ID, IP_SERVER, CPU, RAM, STORAGE)\\n        VALUES (\".concat(SERVER, \", \").concat(IP_SERVER, \", \").concat(CPU, \", \").concat(RAM, \", \").concat(STORAGE, \")\");\n      console.log('Received ID2:', query2);\n      conn.query(query2, function (err, resultsq2) {\n        if (err) {\n          console.error('Error executing query2:', err);\n          conn.close();\n          res.status(500).send('Query2 execution error');\n          return;\n        }\n        var produkId = \"WITH LastProduct AS (\\n        SELECT TOP 1 ID_PRODUK\\n        FROM produk\\n        ORDER BY ID_PRODUK DESC\\n    ),\\n    LastSpecServer AS (\\n        SELECT TOP 1 ID_SPEC_SERVER\\n        FROM spec_server\\n        ORDER BY ID_SPEC_SERVER DESC\\n    )\\n    SELECT \\n        (SELECT ID_PRODUK FROM LastProduct) AS ID_PRODUK,\\n        (SELECT ID_SPEC_SERVER FROM LastSpecServer) AS ID_SPEC_SERVER;\\n    ;\\n      \";\n        conn.query(produkId, function (err, resultsp1) {\n          if (err) {\n            console.error('Error executing query2:', err);\n            conn.close();\n            res.status(500).send('Query2 execution error');\n            return;\n          }\n          var produkId = resultsp1[0].ID_PRODUK;\n          var specId = resultsp1[0].ID_SPEC_SERVER;\n          var query3 = \"INSERT INTO produk_detail\\n      (PRODUK_ID, PIC_NIPPOS, PENEMPATAN, AKSES, DEVELOPER, SERVER, BUSINESS_OWNER, \\n        WAKTU_OPERASIONAL, URL, PORT, FRAMEWORK, VER_FRAMEWORK, JENIS_DATABASE, \\n        TANGGAL_LIVE, TANGGAL_AKHIR_UPDATE, TANGGAL_TUTUP, TANGGAL_DEPLOY)\\n      VALUES (\".concat(produkId, \",\").concat(PIC_NIPPOS, \",\").concat(PENEMPATAN, \",\").concat(AKSES, \",\").concat(DEVELOPER, \",\").concat(specId, \",\").concat(BUSINESS_OWNER, \",\\n      \").concat(WAKTU_OPERASIONAL, \",\").concat(URL, \",\").concat(PORT, \",\").concat(FRAMEWORK, \",\").concat(VER_FRAMEWORK, \",\").concat(JENIS_DATABASE, \", \\n      \").concat(TANGGAL_LIVE, \",\").concat(TANGGAL_AKHIR_UPDATE, \",\").concat(TANGGAL_TUTUP, \",\").concat(TANGGAL_DEPLOY, \");\");\n          console.log('Received ID3:', query3);\n          conn.query(query3, function (err, resultsq3) {\n            if (err) {\n              console.error('Error executing query2:', err);\n              conn.close();\n              res.status(500).send('Query2 execution error');\n              return;\n            }\n            var produkIdd = \"SELECT TOP 1 ID_PRODUK\\n          FROM produk\\n          ORDER BY ID_PRODUK DESC\\n      ;\\n        \";\n            conn.query(produkIdd, function (err, resultsp2) {\n              if (err) {\n                console.error('Error executing query2:', err);\n                conn.close();\n                res.status(500).send('Query2 execution error');\n                return;\n              }\n              var produkId = resultsp2[0].ID_PRODUK;\n              var query4 = '';\n              for (var i = 0; i < USERNAME.length; i++) {\n                query4 += \"INSERT INTO account(PRODUK_ID, USERNAME, PASS, EXP_DATE_PASSWORD, JENIS_AKUN, FLAG_STATUS, TANGGAL_CREATE)\\n              VALUES(\".concat(produkId, \", '\").concat(USERNAME[i], \"', '\").concat(PASS[i], \"', '\").concat(EXP_DATE_PASSWORD[i], \"', '\").concat(JENIS_AKUN[i], \"', 1, '\").concat(TANGGAL_CREATE, \"')\");\n                console.log('Received ID4:', query4);\n              }\n              conn.query(query4, function (err, resultsq4) {\n                if (err) {\n                  console.error('Error executing query2:', err);\n                  conn.close();\n                  res.status(500).send('Query2 execution error');\n                  return;\n                }\n                res.json({\n                  success: true\n                });\n                conn.close();\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n});\n\n// Start Server\napp.listen(port, function () {\n  console.log(\"Server running on http://localhost:\".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVnZW5lcmF0b3JSdW50aW1lIiwiZSIsInQiLCJyIiwiT2JqZWN0IiwicHJvdG90eXBlIiwibiIsImhhc093blByb3BlcnR5IiwibyIsImRlZmluZVByb3BlcnR5IiwidmFsdWUiLCJpIiwiU3ltYm9sIiwiYSIsIml0ZXJhdG9yIiwiYyIsImFzeW5jSXRlcmF0b3IiLCJ1IiwidG9TdHJpbmdUYWciLCJkZWZpbmUiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJ3cmFwIiwiR2VuZXJhdG9yIiwiY3JlYXRlIiwiQ29udGV4dCIsIm1ha2VJbnZva2VNZXRob2QiLCJ0cnlDYXRjaCIsInR5cGUiLCJhcmciLCJjYWxsIiwiaCIsImwiLCJmIiwicyIsInkiLCJHZW5lcmF0b3JGdW5jdGlvbiIsIkdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlIiwicCIsImQiLCJnZXRQcm90b3R5cGVPZiIsInYiLCJ2YWx1ZXMiLCJnIiwiZGVmaW5lSXRlcmF0b3JNZXRob2RzIiwiZm9yRWFjaCIsIl9pbnZva2UiLCJBc3luY0l0ZXJhdG9yIiwiaW52b2tlIiwiX3R5cGVvZiIsInJlc29sdmUiLCJfX2F3YWl0IiwidGhlbiIsImNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnIiwiRXJyb3IiLCJkb25lIiwibWV0aG9kIiwiZGVsZWdhdGUiLCJtYXliZUludm9rZURlbGVnYXRlIiwic2VudCIsIl9zZW50IiwiZGlzcGF0Y2hFeGNlcHRpb24iLCJhYnJ1cHQiLCJUeXBlRXJyb3IiLCJyZXN1bHROYW1lIiwibmV4dCIsIm5leHRMb2MiLCJwdXNoVHJ5RW50cnkiLCJ0cnlMb2MiLCJjYXRjaExvYyIsImZpbmFsbHlMb2MiLCJhZnRlckxvYyIsInRyeUVudHJpZXMiLCJwdXNoIiwicmVzZXRUcnlFbnRyeSIsImNvbXBsZXRpb24iLCJyZXNldCIsImlzTmFOIiwibGVuZ3RoIiwiZGlzcGxheU5hbWUiLCJpc0dlbmVyYXRvckZ1bmN0aW9uIiwiY29uc3RydWN0b3IiLCJuYW1lIiwibWFyayIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiYXdyYXAiLCJhc3luYyIsIlByb21pc2UiLCJrZXlzIiwicmV2ZXJzZSIsInBvcCIsInByZXYiLCJjaGFyQXQiLCJzbGljZSIsInN0b3AiLCJydmFsIiwiaGFuZGxlIiwiY29tcGxldGUiLCJmaW5pc2giLCJfY2F0Y2giLCJkZWxlZ2F0ZVlpZWxkIiwiYXN5bmNHZW5lcmF0b3JTdGVwIiwiX2FzeW5jVG9HZW5lcmF0b3IiLCJhcmd1bWVudHMiLCJhcHBseSIsIl9uZXh0IiwiX3Rocm93IiwiZXhwcmVzcyIsInJlcXVpcmUiLCJiY3J5cHQiLCJqd3QiLCJzcWwiLCJjb3JzIiwiYXBwIiwicG9ydCIsIm1kNSIsImNvbm5lY3Rpb25TdHJpbmciLCJ1c2UiLCJqc29uIiwiand0a2V5Iiwic2FsdFJvdW5kcyIsImhhc2hQYXNzd29yZCIsIl9yZWYiLCJfY2FsbGVlIiwicGFzc3dvcmQiLCJoYXNoZWRQYXNzd29yZCIsIl9jYWxsZWUkIiwiX2NvbnRleHQiLCJoYXNoIiwidDAiLCJjb25zb2xlIiwiZXJyb3IiLCJfeCIsImNvbXBhcmVQYXNzd29yZCIsIl9yZWYyIiwiX2NhbGxlZTIiLCJwbGFpblBhc3N3b3JkIiwibWF0Y2giLCJfY2FsbGVlMiQiLCJfY29udGV4dDIiLCJjb21wYXJlIiwiX3gyIiwiX3gzIiwicG9zdCIsInJlcSIsInJlcyIsIl9yZXEkYm9keSIsImJvZHkiLCJVU0VSTkFNRSIsIlBBU1MiLCJvcGVuIiwiZXJyIiwiY29ubiIsInN0YXR1cyIsInNlbmQiLCJxdWVyeSIsImNvbmNhdCIsIl9yZWYzIiwiX2NhbGxlZTMiLCJyZXN1bHRzIiwicGF5bG9hZCIsIm9wdGlvbnMiLCJ0b2tlbiIsIl9jYWxsZWUzJCIsIl9jb250ZXh0MyIsImNsb3NlIiwidXNlcklkIiwiSUQiLCJ1c2VybmFtZSIsImV4cGlyZXNJbiIsInNpZ24iLCJzdWNjZXNzIiwiX3g0IiwiX3g1IiwiZ2V0IiwiaWQiLCJsb2ciLCJJRF9QUk9EVUsiLCJOdW1iZXIiLCJOQU1BX1BST0RVSyIsIkRFU0tSSVBTSV9QUk9EVUsiLCJVUkwiLCJJUF9TRVJWRVIiLCJQRU5FTVBBVEFOIiwiQUtTRVMiLCJDUFUiLCJSQU0iLCJTVE9SQUdFIiwiU0VSVkVSIiwiSkVOSVNfREFUQUJBU0UiLCJGUkFNRVdPUksiLCJWRVJfRlJBTUVXT1JLIiwiV0FLVFVfT1BFUkFTSU9OQUwiLCJERVZFTE9QRVIiLCJCVVNJTkVTU19PV05FUiIsIlBJQ19OSVBQT1MiLCJQT1JUIiwiTkFNQV9TVEFUVVMiLCJXRUJfU0VSVkVSX0lEIiwiVEFOR0dBTF9MSVZFIiwiVEFOR0dBTF9ERVBMT1kiLCJUQU5HR0FMX0FLSElSX1VQREFURSIsIlRBTkdHQUxfVFVUVVAiLCJJRF9BQ0NPVU5UIiwiSkVOSVNfQUtVTiIsIkVYUF9EQVRFX1BBU1NXT1JEIiwiTEVOR1RIX0FDQ09VTlQiLCJUQU5HR0FMX1VQREFURSIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsInNwbGl0IiwicXVlcnkxIiwicXVlcnkyIiwicXVlcnkzIiwicXVlcnk0IiwiTkVXX05BTUFfUEVORU1QQVRBTiIsIk5FV19OQU1BX0FLU0VTIiwiTkVXX05BTUFfV0VCX1NFUlZFUiIsIk5FV19OQU1BX0RFVkVMT1BFUiIsIk5FV19OSVBQT1NfUElDIiwiTkVXX05BTUFfUElDIiwiTkVXX1RFTEVQT05fUElDIiwiTkVXX1VTRVJOQU1FX1BJQyIsIk5FV19QQVNTX1BJQyIsIk5FV19OQU1BX1NUQVRVUyIsIkFycmF5IiwiaXNBcnJheSIsIkpTT04iLCJzdHJpbmdpZnkiLCJyZXBsYWNlIiwiRkxBR19TVEFUVVMiLCJVU0VSTkFNRUxlbmd0aCIsIlRBTkdHQUxfQ1JFQVRFIiwicmVzdWx0c3ExIiwicmVzdWx0c3EyIiwicHJvZHVrSWQiLCJyZXN1bHRzcDEiLCJzcGVjSWQiLCJJRF9TUEVDX1NFUlZFUiIsInJlc3VsdHNxMyIsInByb2R1a0lkZCIsInJlc3VsdHNwMiIsInJlc3VsdHNxNCIsImxpc3RlbiJdLCJzb3VyY2VSb290IjoiRDpcXFNvdXJjZSBNVCBYWFZJSVxcQk9PVENBTVBcXEVOVEVSUFJJU0VcXEVOVEVSUFJJU0UtQkFDS0VORFxcIiwic291cmNlcyI6WyJpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiO1xyXG4vLyBpbXBvcnQgYm9keVBhcnNlciBmcm9tIFwiYm9keS1wYXJzZXJcIjtcclxuLy8gaW1wb3J0IGNvcnMgZnJvbSBcImNvcnNcIjtcclxuLy8gY29uc3QgcG9ydCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMDtcclxuLy8gY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG4vLyBhcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcclxuLy8gYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoeyBleHRlbmRlZDogdHJ1ZSB9KSk7XHJcbi8vIGFwcC51c2UoY29ycygpKTtcclxuLy8gYXBwLmdldChcIi8qXCIsIChyZXEsIHJlcykgPT4ge1xyXG4vLyAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oeyBtZXNzYWdlOiBcIkhlbGxvLXdvcmxkXCIgfSk7XHJcbi8vIH0pO1xyXG4vLyBhcHAubGlzdGVuKHBvcnQsICgpID0+IHtcclxuLy8gICAgIGNvbnNvbGUubG9nKCdTZXJ2ZXItcnVubmluZyBvbiBwb3J0IDMwMDAnKTtcclxuLy8gfSk7XHJcblxyXG5cclxuY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcclxuY29uc3QgYmNyeXB0ID0gcmVxdWlyZSgnYmNyeXB0Jyk7XHJcbmNvbnN0IGp3dCA9IHJlcXVpcmUoJ2pzb253ZWJ0b2tlbicpO1xyXG5jb25zdCBzcWwgPSByZXF1aXJlKCdtc25vZGVzcWx2OCcpO1xyXG5jb25zdCBjb3JzID0gcmVxdWlyZSgnY29ycycpO1xyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcbmNvbnN0IHBvcnQgPSA1MDAwO1xyXG5jb25zdCBtZDUgPSByZXF1aXJlKCdtZDUnKTtcclxuXHJcbmNvbnN0IGNvbm5lY3Rpb25TdHJpbmcgPSBgRHJpdmVyPXtPREJDIERyaXZlciAxNyBmb3IgU1FMIFNlcnZlcn07U2VydmVyPTQwMDA1LU1QMVBXUzIyO0RhdGFiYXNlPWVudGVycHJpc2U7VHJ1c3RlZF9Db25uZWN0aW9uPXllcztgO1xyXG5cclxuLy8gc3FsLm9wZW4oY29ubmVjdGlvblN0cmluZywgKGVyciwgY29ubikgPT4ge1xyXG4vLyAgIGlmIChlcnIpIHtcclxuLy8gICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIG9jY3VycmVkOicsIGVycik7XHJcbi8vICAgICByZXR1cm47XHJcbi8vICAgfVxyXG5cclxuLy8gICBjb25zdCBxdWVyeSA9ICdTRUxFQ1QgKiBGUk9NIHByb2R1ayc7IC8vIFJlcGxhY2Ugd2l0aCB5b3VyIHRhYmxlIG5hbWVcclxuXHJcbi8vICAgY29ubi5xdWVyeShxdWVyeSwgKGVyciwgcmVzdWx0cykgPT4ge1xyXG4vLyAgICAgaWYgKGVycikge1xyXG4vLyAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBleGVjdXRpbmcgcXVlcnk6JywgZXJyKTtcclxuLy8gICAgIH0gZWxzZSB7XHJcbi8vICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdHMpO1xyXG4vLyAgICAgfVxyXG5cclxuLy8gICAgIGNvbm4uY2xvc2UoKTtcclxuLy8gICB9KTtcclxuLy8gfSk7XHJcblxyXG4vLyBNaWRkbGV3YXJlXHJcbmFwcC51c2UoY29ycygpKTtcclxuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XHJcblxyXG5jb25zdCBqd3RrZXk9IFwic2VjcmV0XCI7XHJcblxyXG5jb25zdCBzYWx0Um91bmRzID0gMTI7XHJcblxyXG4vLyBGdW5nc2kgdW50dWsgbWVuZy1oYXNoIHBhc3N3b3JkXHJcbmNvbnN0IGhhc2hQYXNzd29yZCA9IGFzeW5jIChwYXNzd29yZCkgPT4ge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCBoYXNoZWRQYXNzd29yZCA9IGF3YWl0IGJjcnlwdC5oYXNoKHBhc3N3b3JkLCBzYWx0Um91bmRzKTtcclxuICAgIHJldHVybiBoYXNoZWRQYXNzd29yZDtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgaGFzaGluZyBwYXNzd29yZDonLCBlcnJvcik7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0Vycm9yIGhhc2hpbmcgcGFzc3dvcmQnKTtcclxuICB9XHJcbn07XHJcblxyXG5jb25zdCBjb21wYXJlUGFzc3dvcmQgPSBhc3luYyAocGxhaW5QYXNzd29yZCwgaGFzaGVkUGFzc3dvcmQpID0+IHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgbWF0Y2ggPSBhd2FpdCBiY3J5cHQuY29tcGFyZShwbGFpblBhc3N3b3JkLCBoYXNoZWRQYXNzd29yZCk7XHJcbiAgICByZXR1cm4gbWF0Y2g7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGNvbXBhcmluZyBwYXNzd29yZHM6JywgZXJyb3IpO1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKCdFcnJvciBjb21wYXJpbmcgcGFzc3dvcmRzJyk7XHJcbiAgfVxyXG59O1xyXG5cclxuXHJcbi8vIEFQSSBFbmRwb2ludFxyXG5hcHAucG9zdCgnL2xvZ2luLXNpbScsKHJlcSwgcmVzKSA9PiB7XHJcbiAgY29uc3QgeyBVU0VSTkFNRSwgUEFTUyB9ID0gcmVxLmJvZHk7XHJcblxyXG4gIHNxbC5vcGVuKGNvbm5lY3Rpb25TdHJpbmcsIChlcnIsIGNvbm4pID0+IHtcclxuICAgIGlmIChlcnIpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignRXJyb3Igb2NjdXJyZWQ6JywgZXJyKTtcclxuICAgICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoJ0RhdGFiYXNlIGNvbm5lY3Rpb24gZXJyb3InKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHF1ZXJ5ID0gYFNFTEVDVCAqIEZST00ga2FyeWF3YW4gV0hFUkUgVVNFUk5BTUUgPSAnJHtVU0VSTkFNRX0nO2A7XHJcblxyXG4gICAgY29ubi5xdWVyeShxdWVyeSwgYXN5bmMgKGVyciwgcmVzdWx0cykgPT4ge1xyXG4gICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZXhlY3V0aW5nIHF1ZXJ5OicsIGVycik7XHJcbiAgICAgICAgY29ubi5jbG9zZSgpO1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKCdRdWVyeSBleGVjdXRpb24gZXJyb3InKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmIChyZXN1bHRzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgIGNvbm4uY2xvc2UoKTtcclxuICAgICAgICByZXMuc3RhdHVzKDQwMSkuc2VuZCgnSW52YWxpZCB1c2VybmFtZSBvciBwYXNzd29yZCcpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG5cclxuICAgICAgY29uc3QgaGFzaGVkUGFzc3dvcmQgPSByZXN1bHRzWzBdLlBBU1M7IC8vIFBhc3N3b3JkIHlhbmcgdGVyLWhhc2ggZGFyaSBkYXRhYmFzZVxyXG5cclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBtYXRjaCA9IGF3YWl0IGJjcnlwdC5jb21wYXJlKFBBU1MsIGhhc2hlZFBhc3N3b3JkKTtcclxuICAgICAgICBpZiAobWF0Y2gpIHtcclxuICAgICAgICAgIGNvbnN0IHBheWxvYWQgPSB7XHJcbiAgICAgICAgICAgIHVzZXJJZDogcmVzdWx0c1swXS5JRCxcclxuICAgICAgICAgICAgdXNlcm5hbWU6IHJlc3VsdHNbMF0uVVNFUk5BTUVcclxuICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgY29uc3Qgb3B0aW9ucyA9IHtcclxuICAgICAgICAgICAgZXhwaXJlc0luOiAnMWgnIC8vIFRva2VuIGJlcmxha3Ugc2VsYW1hIDEgamFtXHJcbiAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgIGNvbnN0IHRva2VuID0gand0LnNpZ24ocGF5bG9hZCwgand0a2V5LCBvcHRpb25zKTtcclxuXHJcbiAgICAgICAgICByZXMuanNvbih7XHJcbiAgICAgICAgICAgIHN1Y2Nlc3M6IHRydWUsXHJcbiAgICAgICAgICAgIHRva2VuOiB0b2tlblxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHJlcy5zdGF0dXMoNDAxKS5zZW5kKCdJbnZhbGlkIHVzZXJuYW1lIG9yIHBhc3N3b3JkJyk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGNvbXBhcmluZyBwYXNzd29yZHM6JywgZXJyb3IpO1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKCdFcnJvciBjb21wYXJpbmcgcGFzc3dvcmRzJyk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGNvbm4uY2xvc2UoKTtcclxuICAgIH0pO1xyXG4gIH0pO1xyXG59KTtcclxuXHJcblxyXG5hcHAuZ2V0KCcvbWFpbi10YWJsZScsIChyZXEsIHJlcykgPT4ge1xyXG4gIHNxbC5vcGVuKGNvbm5lY3Rpb25TdHJpbmcsIChlcnIsIGNvbm4pID0+IHtcclxuICAgIGlmIChlcnIpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignRXJyb3Igb2NjdXJyZWQ6JywgZXJyKTtcclxuICAgICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoJ0RhdGFiYXNlIGNvbm5lY3Rpb24gZXJyb3InKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHF1ZXJ5ID0gYFxyXG4gICAgU0VMRUNUIHByb2R1ay5JRF9QUk9EVUssIFxyXG4gICAgcHJvZHVrLk5BTUFfUFJPRFVLLCBcclxuICAgIHByb2R1a19kZXRhaWwuVVJMLCBcclxuICAgIHNwZWNfc2VydmVyLklQX1NFUlZFUiwgXHJcbiAgICBrYXJ5YXdhbi5OQU1BLCBcclxuICAgIHN0YXR1cy5OQU1BX1NUQVRVUyBcclxuICAgIEZST00gcHJvZHVrIFxyXG4gICAgSU5ORVIgSk9JTiBwcm9kdWtfZGV0YWlsIE9OIHByb2R1ay5JRF9QUk9EVUsgPSBwcm9kdWtfZGV0YWlsLlBST0RVS19JRCBcclxuICAgIElOTkVSIEpPSU4gc3BlY19zZXJ2ZXIgT04gcHJvZHVrX2RldGFpbC5TRVJWRVIgPSBzcGVjX3NlcnZlci5JRF9TUEVDX1NFUlZFUiBcclxuICAgIElOTkVSIEpPSU4ga2FyeWF3YW4gT04gcHJvZHVrX2RldGFpbC5QSUNfTklQUE9TID0ga2FyeWF3YW4uTklQUE9TIFxyXG4gICAgSU5ORVIgSk9JTiBzdGF0dXMgT04gcHJvZHVrLkZMQUdfU1RBVFVTID0gc3RhdHVzLklEX1NUQVRVU2A7XHJcblxyXG4gICAgY29ubi5xdWVyeShxdWVyeSwgKGVyciwgcmVzdWx0cykgPT4ge1xyXG4gICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZXhlY3V0aW5nIHF1ZXJ5OicsIGVycik7XHJcbiAgICAgICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoJ1F1ZXJ5IGV4ZWN1dGlvbiBlcnJvcicsIGVycik7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmVzLmpzb24ocmVzdWx0cyk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGNvbm4uY2xvc2UoKTtcclxuICAgIH0pO1xyXG4gIH0pO1xyXG59KTtcclxuXHJcbmFwcC5nZXQoJy9wZW5lbXBhdGFuLWNsb3VkJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgc3FsLm9wZW4oY29ubmVjdGlvblN0cmluZywgKGVyciwgY29ubikgPT4ge1xyXG4gICAgaWYgKGVycikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBvY2N1cnJlZDonLCBlcnIpO1xyXG4gICAgICByZXMuc3RhdHVzKDUwMCkuc2VuZCgnRGF0YWJhc2UgY29ubmVjdGlvbiBlcnJvcicpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgcXVlcnkgPSBgXHJcbiAgICBTRUxFQ1QgcGVuZW1wYXRhbi5OQU1BX1BFTkVNUEFUQU4gQVMgcGVuZW1wYXRhbiwgXHJcbiAgICBDT1VOVChwcm9kdWsuTkFNQV9QUk9EVUspIEFTIHRvdGFsIFxyXG4gICAgRlJPTSBwZW5lbXBhdGFuIFxyXG4gICAgTEVGVCBKT0lOIHByb2R1a19kZXRhaWwgT04gcGVuZW1wYXRhbi5JRF9QRU5FTVBBVEFOID0gcHJvZHVrX2RldGFpbC5QRU5FTVBBVEFOIFxyXG4gICAgTEVGVCBKT0lOIHByb2R1ayBPTiBwcm9kdWsuSURfUFJPRFVLID0gcHJvZHVrX2RldGFpbC5QUk9EVUtfSUQgXHJcbiAgICBXSEVSRSBwZW5lbXBhdGFuLk5BTUFfUEVORU1QQVRBTiA9ICdDbG91ZCcgXHJcbiAgICBHUk9VUCBCWSBwZW5lbXBhdGFuLk5BTUFfUEVORU1QQVRBTjtgO1xyXG5cclxuICAgIGNvbm4ucXVlcnkocXVlcnksIChlcnIsIHJlc3VsdHMpID0+IHtcclxuICAgICAgaWYgKGVycikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGV4ZWN1dGluZyBxdWVyeTonLCBlcnIpO1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKCdRdWVyeSBleGVjdXRpb24gZXJyb3InLCBlcnIpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJlcy5qc29uKHJlc3VsdHMpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBjb25uLmNsb3NlKCk7XHJcbiAgICB9KTtcclxuICB9KTtcclxufSk7XHJcblxyXG5hcHAuZ2V0KCcvcGVuZW1wYXRhbi1vbnByZW0nLCAocmVxLCByZXMpID0+IHtcclxuICBzcWwub3Blbihjb25uZWN0aW9uU3RyaW5nLCAoZXJyLCBjb25uKSA9PiB7XHJcbiAgICBpZiAoZXJyKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIG9jY3VycmVkOicsIGVycik7XHJcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKCdEYXRhYmFzZSBjb25uZWN0aW9uIGVycm9yJyk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBxdWVyeSA9IGBcclxuICAgIFNFTEVDVCBwZW5lbXBhdGFuLk5BTUFfUEVORU1QQVRBTiBBUyBwZW5lbXBhdGFuLCBcclxuICAgIENPVU5UKHByb2R1ay5OQU1BX1BST0RVSykgQVMgdG90YWwgXHJcbiAgICBGUk9NIHBlbmVtcGF0YW4gXHJcbiAgICBMRUZUIEpPSU4gcHJvZHVrX2RldGFpbCBPTiBwZW5lbXBhdGFuLklEX1BFTkVNUEFUQU4gPSBwcm9kdWtfZGV0YWlsLlBFTkVNUEFUQU4gXHJcbiAgICBMRUZUIEpPSU4gcHJvZHVrIE9OIHByb2R1ay5JRF9QUk9EVUsgPSBwcm9kdWtfZGV0YWlsLlBST0RVS19JRCBcclxuICAgIFdIRVJFIHBlbmVtcGF0YW4uTkFNQV9QRU5FTVBBVEFOID0gJ09uLVByZW1pc2UnIFxyXG4gICAgR1JPVVAgQlkgcGVuZW1wYXRhbi5OQU1BX1BFTkVNUEFUQU47YDtcclxuXHJcbiAgICBjb25uLnF1ZXJ5KHF1ZXJ5LCAoZXJyLCByZXN1bHRzKSA9PiB7XHJcbiAgICAgIGlmIChlcnIpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBleGVjdXRpbmcgcXVlcnk6JywgZXJyKTtcclxuICAgICAgICByZXMuc3RhdHVzKDUwMCkuc2VuZCgnUXVlcnkgZXhlY3V0aW9uIGVycm9yJywgZXJyKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICByZXMuanNvbihyZXN1bHRzKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgY29ubi5jbG9zZSgpO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcbn0pO1xyXG5cclxuYXBwLmdldCgnL3N0YXR1cy1ha3RpZicsIChyZXEsIHJlcykgPT4ge1xyXG4gIHNxbC5vcGVuKGNvbm5lY3Rpb25TdHJpbmcsIChlcnIsIGNvbm4pID0+IHtcclxuICAgIGlmIChlcnIpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignRXJyb3Igb2NjdXJyZWQ6JywgZXJyKTtcclxuICAgICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoJ0RhdGFiYXNlIGNvbm5lY3Rpb24gZXJyb3InKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHF1ZXJ5ID0gYFxyXG4gICAgU0VMRUNUIHN0YXR1cy5OQU1BX1NUQVRVUyBBUyBzdGF0dXMsIFxyXG4gICAgQ09VTlQocHJvZHVrLk5BTUFfUFJPRFVLKSBBUyB0b3RhbCBcclxuICAgIEZST00gc3RhdHVzIFxyXG4gICAgTEVGVCBKT0lOIHByb2R1ayBPTiBwcm9kdWsuRkxBR19TVEFUVVMgPSBzdGF0dXMuSURfU1RBVFVTIFxyXG4gICAgV0hFUkUgc3RhdHVzLk5BTUFfU1RBVFVTID0gJ0FrdGlmJyBcclxuICAgIEdST1VQIEJZIHN0YXR1cy5OQU1BX1NUQVRVUztgO1xyXG5cclxuICAgIGNvbm4ucXVlcnkocXVlcnksIChlcnIsIHJlc3VsdHMpID0+IHtcclxuICAgICAgaWYgKGVycikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGV4ZWN1dGluZyBxdWVyeTonLCBlcnIpO1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKCdRdWVyeSBleGVjdXRpb24gZXJyb3InLCBlcnIpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJlcy5qc29uKHJlc3VsdHMpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBjb25uLmNsb3NlKCk7XHJcbiAgICB9KTtcclxuICB9KTtcclxufSk7XHJcblxyXG5hcHAuZ2V0KCcvc3RhdHVzLW5vbmFrdGlmJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgc3FsLm9wZW4oY29ubmVjdGlvblN0cmluZywgKGVyciwgY29ubikgPT4ge1xyXG4gICAgaWYgKGVycikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBvY2N1cnJlZDonLCBlcnIpO1xyXG4gICAgICByZXMuc3RhdHVzKDUwMCkuc2VuZCgnRGF0YWJhc2UgY29ubmVjdGlvbiBlcnJvcicpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgcXVlcnkgPSBgXHJcbiAgICBTRUxFQ1Qgc3RhdHVzLk5BTUFfU1RBVFVTIEFTIHN0YXR1cywgXHJcbiAgICBDT1VOVChwcm9kdWsuTkFNQV9QUk9EVUspIEFTIHRvdGFsIFxyXG4gICAgRlJPTSBzdGF0dXMgXHJcbiAgICBMRUZUIEpPSU4gcHJvZHVrIE9OIHByb2R1ay5GTEFHX1NUQVRVUyA9IHN0YXR1cy5JRF9TVEFUVVMgXHJcbiAgICBXSEVSRSBzdGF0dXMuTkFNQV9TVEFUVVMgPSAnTm9uLUFrdGlmJyBcclxuICAgIEdST1VQIEJZIHN0YXR1cy5OQU1BX1NUQVRVUztgO1xyXG5cclxuICAgIGNvbm4ucXVlcnkocXVlcnksIChlcnIsIHJlc3VsdHMpID0+IHtcclxuICAgICAgaWYgKGVycikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGV4ZWN1dGluZyBxdWVyeTonLCBlcnIpO1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKCdRdWVyeSBleGVjdXRpb24gZXJyb3InLCBlcnIpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJlcy5qc29uKHJlc3VsdHMpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBjb25uLmNsb3NlKCk7XHJcbiAgICB9KTtcclxuICB9KTtcclxufSk7XHJcblxyXG5hcHAuZ2V0KCcvdG90YWwnLCAocmVxLCByZXMpID0+IHtcclxuICBzcWwub3Blbihjb25uZWN0aW9uU3RyaW5nLCAoZXJyLCBjb25uKSA9PiB7XHJcbiAgICBpZiAoZXJyKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIG9jY3VycmVkOicsIGVycik7XHJcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKCdEYXRhYmFzZSBjb25uZWN0aW9uIGVycm9yJyk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBxdWVyeSA9IGBTRUxFQ1QgQ09VTlQoTkFNQV9QUk9EVUspIEFTIHRvdGFsIEZST00gcHJvZHVrO2A7XHJcbiAgICBjb25uLnF1ZXJ5KHF1ZXJ5LCAoZXJyLCByZXN1bHRzKSA9PiB7XHJcbiAgICAgIGlmIChlcnIpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBleGVjdXRpbmcgcXVlcnk6JywgZXJyKTtcclxuICAgICAgICByZXMuc3RhdHVzKDUwMCkuc2VuZCgnUXVlcnkgZXhlY3V0aW9uIGVycm9yJywgZXJyKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICByZXMuanNvbihyZXN1bHRzKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgY29ubi5jbG9zZSgpO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcbn0pO1xyXG5cclxuYXBwLmdldCgnL3Byb2R1ay1tYXN1aycsIChyZXEsIHJlcykgPT4ge1xyXG4gIHNxbC5vcGVuKGNvbm5lY3Rpb25TdHJpbmcsIChlcnIsIGNvbm4pID0+IHtcclxuICAgIGlmIChlcnIpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignRXJyb3Igb2NjdXJyZWQ6JywgZXJyKTtcclxuICAgICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoJ0RhdGFiYXNlIGNvbm5lY3Rpb24gZXJyb3InKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHF1ZXJ5ID0gYFxyXG4gICAgU0VMRUNUIENPVU5UKHByb2R1ay5OQU1BX1BST0RVSykgQVMgdG90YWwgXHJcbiAgICBGUk9NIHByb2R1ayBcclxuICAgIExFRlQgSk9JTiBwcm9kdWtfZGV0YWlsIE9OIHByb2R1ay5JRF9QUk9EVUsgPSBwcm9kdWtfZGV0YWlsLlBST0RVS19JRCBcclxuICAgIFdIRVJFIERBVEVQQVJUKE1PTlRILCBwcm9kdWtfZGV0YWlsLlRBTkdHQUxfREVQTE9ZKSA9IERBVEVQQVJUKE1PTlRILCBHRVREQVRFKCkpIFxyXG4gICAgQU5EIERBVEVQQVJUKFlFQVIsIHByb2R1a19kZXRhaWwuVEFOR0dBTF9ERVBMT1kpID0gREFURVBBUlQoWUVBUiwgR0VUREFURSgpKTtgO1xyXG5cclxuICAgIGNvbm4ucXVlcnkocXVlcnksIChlcnIsIHJlc3VsdHMpID0+IHtcclxuICAgICAgaWYgKGVycikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGV4ZWN1dGluZyBxdWVyeTonLCBlcnIpO1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKCdRdWVyeSBleGVjdXRpb24gZXJyb3InLCBlcnIpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJlcy5qc29uKHJlc3VsdHMpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBjb25uLmNsb3NlKCk7XHJcbiAgICB9KTtcclxuICB9KTtcclxufSk7XHJcblxyXG5hcHAuZ2V0KCcvamVuaXMtZGF0YWJhc2UnLCAocmVxLCByZXMpID0+IHtcclxuICBzcWwub3Blbihjb25uZWN0aW9uU3RyaW5nLCAoZXJyLCBjb25uKSA9PiB7XHJcbiAgICBpZiAoZXJyKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIG9jY3VycmVkOicsIGVycik7XHJcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKCdEYXRhYmFzZSBjb25uZWN0aW9uIGVycm9yJyk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBxdWVyeSA9IGBcclxuICAgIFNFTEVDVCBwcm9kdWtfZGV0YWlsLkpFTklTX0RBVEFCQVNFIEFTIGRiLCBcclxuQ09VTlQocHJvZHVrLk5BTUFfUFJPRFVLKSBBUyB0b3RhbCBcclxuRlJPTSBwcm9kdWtfZGV0YWlsICBcclxuTEVGVCBKT0lOIHByb2R1ayBPTiBwcm9kdWsuSURfUFJPRFVLID0gcHJvZHVrX2RldGFpbC5QUk9EVUtfSURcclxuR1JPVVAgQlkgcHJvZHVrX2RldGFpbC5KRU5JU19EQVRBQkFTRTtgO1xyXG5cclxuICAgIGNvbm4ucXVlcnkocXVlcnksIChlcnIsIHJlc3VsdHMpID0+IHtcclxuICAgICAgaWYgKGVycikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGV4ZWN1dGluZyBxdWVyeTonLCBlcnIpO1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKCdRdWVyeSBleGVjdXRpb24gZXJyb3InLCBlcnIpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJlcy5qc29uKHJlc3VsdHMpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBjb25uLmNsb3NlKCk7XHJcbiAgICB9KTtcclxuICB9KTtcclxufSk7XHJcblxyXG5hcHAuZ2V0KCcvcGlsaWgtcGVuZW1wYXRhbicsIChyZXEsIHJlcykgPT4ge1xyXG4gIHNxbC5vcGVuKGNvbm5lY3Rpb25TdHJpbmcsIChlcnIsIGNvbm4pID0+IHtcclxuICAgIGlmIChlcnIpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignRXJyb3Igb2NjdXJyZWQ6JywgZXJyKTtcclxuICAgICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoJ0RhdGFiYXNlIGNvbm5lY3Rpb24gZXJyb3InKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHF1ZXJ5ID0gYFNFTEVDVCAqIEZST00gcGVuZW1wYXRhbmA7XHJcbiAgICBjb25uLnF1ZXJ5KHF1ZXJ5LCAoZXJyLCByZXN1bHRzKSA9PiB7XHJcbiAgICAgIGlmIChlcnIpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBleGVjdXRpbmcgcXVlcnk6JywgZXJyKTtcclxuICAgICAgICByZXMuc3RhdHVzKDUwMCkuc2VuZCgnUXVlcnkgZXhlY3V0aW9uIGVycm9yJywgZXJyKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICByZXMuanNvbihyZXN1bHRzKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgY29ubi5jbG9zZSgpO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcbn0pO1xyXG5cclxuYXBwLmdldCgnL3BpbGloLWthcnlhd2FuJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgc3FsLm9wZW4oY29ubmVjdGlvblN0cmluZywgKGVyciwgY29ubikgPT4ge1xyXG4gICAgaWYgKGVycikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBvY2N1cnJlZDonLCBlcnIpO1xyXG4gICAgICByZXMuc3RhdHVzKDUwMCkuc2VuZCgnRGF0YWJhc2UgY29ubmVjdGlvbiBlcnJvcicpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgcXVlcnkgPSBgU0VMRUNUICogRlJPTSBrYXJ5YXdhbmA7XHJcbiAgICBjb25uLnF1ZXJ5KHF1ZXJ5LCAoZXJyLCByZXN1bHRzKSA9PiB7XHJcbiAgICAgIGlmIChlcnIpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBleGVjdXRpbmcgcXVlcnk6JywgZXJyKTtcclxuICAgICAgICByZXMuc3RhdHVzKDUwMCkuc2VuZCgnUXVlcnkgZXhlY3V0aW9uIGVycm9yJywgZXJyKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICByZXMuanNvbihyZXN1bHRzKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgY29ubi5jbG9zZSgpO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcbn0pO1xyXG5cclxuYXBwLmdldCgnL3BpbGloLWFrc2VzJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgc3FsLm9wZW4oY29ubmVjdGlvblN0cmluZywgKGVyciwgY29ubikgPT4ge1xyXG4gICAgaWYgKGVycikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBvY2N1cnJlZDonLCBlcnIpO1xyXG4gICAgICByZXMuc3RhdHVzKDUwMCkuc2VuZCgnRGF0YWJhc2UgY29ubmVjdGlvbiBlcnJvcicpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgcXVlcnkgPSBgU0VMRUNUICogRlJPTSBha3Nlc2A7XHJcbiAgICBjb25uLnF1ZXJ5KHF1ZXJ5LCAoZXJyLCByZXN1bHRzKSA9PiB7XHJcbiAgICAgIGlmIChlcnIpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBleGVjdXRpbmcgcXVlcnk6JywgZXJyKTtcclxuICAgICAgICByZXMuc3RhdHVzKDUwMCkuc2VuZCgnUXVlcnkgZXhlY3V0aW9uIGVycm9yJywgZXJyKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICByZXMuanNvbihyZXN1bHRzKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgY29ubi5jbG9zZSgpO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcbn0pO1xyXG5cclxuYXBwLmdldCgnL3BpbGloLWRldmVsb3BlcicsIChyZXEsIHJlcykgPT4ge1xyXG4gIHNxbC5vcGVuKGNvbm5lY3Rpb25TdHJpbmcsIChlcnIsIGNvbm4pID0+IHtcclxuICAgIGlmIChlcnIpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignRXJyb3Igb2NjdXJyZWQ6JywgZXJyKTtcclxuICAgICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoJ0RhdGFiYXNlIGNvbm5lY3Rpb24gZXJyb3InKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHF1ZXJ5ID0gYFNFTEVDVCAqIEZST00gZGV2ZWxvcGVyYDtcclxuICAgIGNvbm4ucXVlcnkocXVlcnksIChlcnIsIHJlc3VsdHMpID0+IHtcclxuICAgICAgaWYgKGVycikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGV4ZWN1dGluZyBxdWVyeTonLCBlcnIpO1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKCdRdWVyeSBleGVjdXRpb24gZXJyb3InLCBlcnIpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJlcy5qc29uKHJlc3VsdHMpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBjb25uLmNsb3NlKCk7XHJcbiAgICB9KTtcclxuICB9KTtcclxufSk7XHJcblxyXG5hcHAuZ2V0KCcvcGlsaWgtc3RhdHVzJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgc3FsLm9wZW4oY29ubmVjdGlvblN0cmluZywgKGVyciwgY29ubikgPT4ge1xyXG4gICAgaWYgKGVycikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBvY2N1cnJlZDonLCBlcnIpO1xyXG4gICAgICByZXMuc3RhdHVzKDUwMCkuc2VuZCgnRGF0YWJhc2UgY29ubmVjdGlvbiBlcnJvcicpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgcXVlcnkgPSBgU0VMRUNUICogRlJPTSBzdGF0dXNgO1xyXG4gICAgY29ubi5xdWVyeShxdWVyeSwgKGVyciwgcmVzdWx0cykgPT4ge1xyXG4gICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZXhlY3V0aW5nIHF1ZXJ5OicsIGVycik7XHJcbiAgICAgICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoJ1F1ZXJ5IGV4ZWN1dGlvbiBlcnJvcicsIGVycik7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmVzLmpzb24ocmVzdWx0cyk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGNvbm4uY2xvc2UoKTtcclxuICAgIH0pO1xyXG4gIH0pO1xyXG59KTtcclxuXHJcbmFwcC5nZXQoJy9waWxpaC1zZXJ2ZXInLCAocmVxLCByZXMpID0+IHtcclxuICBzcWwub3Blbihjb25uZWN0aW9uU3RyaW5nLCAoZXJyLCBjb25uKSA9PiB7XHJcbiAgICBpZiAoZXJyKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIG9jY3VycmVkOicsIGVycik7XHJcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKCdEYXRhYmFzZSBjb25uZWN0aW9uIGVycm9yJyk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBxdWVyeSA9IGBTRUxFQ1QgKiBGUk9NIHdlYl9zZXJ2ZXJgO1xyXG4gICAgY29ubi5xdWVyeShxdWVyeSwgKGVyciwgcmVzdWx0cykgPT4ge1xyXG4gICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZXhlY3V0aW5nIHF1ZXJ5OicsIGVycik7XHJcbiAgICAgICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoJ1F1ZXJ5IGV4ZWN1dGlvbiBlcnJvcicsIGVycik7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmVzLmpzb24ocmVzdWx0cyk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGNvbm4uY2xvc2UoKTtcclxuICAgIH0pO1xyXG4gIH0pO1xyXG59KTtcclxuXHJcblxyXG5cclxuXHJcblxyXG5hcHAucG9zdCgnL2Z1bGwtZGV0YWlsJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgc3FsLm9wZW4oY29ubmVjdGlvblN0cmluZywgKGVyciwgY29ubikgPT4ge1xyXG4gICAgY29uc3QgeyBpZCB9ID0gcmVxLmJvZHk7IC8vIE1lbmdhbWJpbCBpZCBkYXJpIG9iamVrIHJlcS5ib2R5XHJcbiAgICAvLyBjb25zb2xlLmxvZygnUmVjZWl2ZWQgSUQ6JywgaWQpO1xyXG4gICAgaWYgKGVycikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBvY2N1cnJlZDonLCBlcnIpO1xyXG4gICAgICByZXMuc3RhdHVzKDUwMCkuc2VuZCgnRGF0YWJhc2UgY29ubmVjdGlvbiBlcnJvcicpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgcXVlcnkgPSBgXHJcbiAgICBTRUxFQ1QgcHJvZHVrLklEX1BST0RVSywgXHJcbiAgICBwcm9kdWsuTkFNQV9QUk9EVUssIFxyXG4gICAgcHJvZHVrLkRFU0tSSVBTSV9QUk9EVUssIFxyXG4gICAgcHJvZHVrLkZMQUdfU1RBVFVTLFxyXG5cclxuICAgIGFrc2VzLk5BTUFfQUtTRVMsIFxyXG4gICAgYWtzZXMuSURfQUtTRVMsXHJcblxyXG4gICAgZGV2ZWxvcGVyLklEX0RFVkVMT1BFUixcclxuICAgIGRldmVsb3Blci5OQU1BX0RFVkVMT1BFUiwgXHJcbiAgICBcclxuICAgIGthcnlhd2FuLk5BTUEsIFxyXG4gICAga2FyeWF3YW4uVEVMRVBPTiwgXHJcbiAgICBrYXJ5YXdhbi5OSVBQT1MsXHJcbiAgICBrYXJ5YXdhbi5VU0VSTkFNRSxcclxuICAgIGthcnlhd2FuLlBBU1MsXHJcblxyXG4gICAgcGVuZW1wYXRhbi5OQU1BX1BFTkVNUEFUQU4sIFxyXG4gICAgcGVuZW1wYXRhbi5JRF9QRU5FTVBBVEFOLFxyXG5cclxuICAgIHN0YXR1cy5OQU1BX1NUQVRVUywgXHJcbiAgICBzdGF0dXMuSURfU1RBVFVTLFxyXG5cclxuICAgIHByb2R1a19kZXRhaWwuSURfUFJPRFVLX0RFVEFJTCxcclxuICAgIHByb2R1a19kZXRhaWwuUFJPRFVLX0lELFxyXG4gICAgcHJvZHVrX2RldGFpbC5QRU5FTVBBVEFOLFxyXG4gICAgcHJvZHVrX2RldGFpbC5QSUNfTklQUE9TLCBcclxuICAgIHByb2R1a19kZXRhaWwuQUtTRVMsXHJcbiAgICBwcm9kdWtfZGV0YWlsLkRFVkVMT1BFUixcclxuICAgIHByb2R1a19kZXRhaWwuU0VSVkVSLFxyXG4gICAgcHJvZHVrX2RldGFpbC5CVVNJTkVTU19PV05FUiwgXHJcbiAgICBwcm9kdWtfZGV0YWlsLldBS1RVX09QRVJBU0lPTkFMLCBcclxuICAgIHByb2R1a19kZXRhaWwuVVJMLCBcclxuICAgIHByb2R1a19kZXRhaWwuUE9SVCwgXHJcbiAgICBwcm9kdWtfZGV0YWlsLkZSQU1FV09SSywgXHJcbiAgICBwcm9kdWtfZGV0YWlsLlZFUl9GUkFNRVdPUkssIFxyXG4gICAgcHJvZHVrX2RldGFpbC5KRU5JU19EQVRBQkFTRSwgXHJcbiAgICBwcm9kdWtfZGV0YWlsLlRBTkdHQUxfTElWRSwgXHJcbiAgICBwcm9kdWtfZGV0YWlsLlRBTkdHQUxfQUtISVJfVVBEQVRFLCBcclxuICAgIHByb2R1a19kZXRhaWwuVEFOR0dBTF9UVVRVUCwgXHJcbiAgICBwcm9kdWtfZGV0YWlsLlRBTkdHQUxfREVQTE9ZLCBcclxuICAgIHByb2R1a19kZXRhaWwuQkFfREVQTE9ZLCBcclxuICAgIHByb2R1a19kZXRhaWwuUkVRX0RFUExPWSwgXHJcblxyXG4gICAgc3BlY19zZXJ2ZXIuSURfU1BFQ19TRVJWRVIsXHJcbiAgICBzcGVjX3NlcnZlci5XRUJfU0VSVkVSX0lELFxyXG4gICAgc3BlY19zZXJ2ZXIuSVBfU0VSVkVSLCBcclxuICAgIHNwZWNfc2VydmVyLkNQVSwgXHJcbiAgICBzcGVjX3NlcnZlci5SQU0sIFxyXG4gICAgc3BlY19zZXJ2ZXIuU1RPUkFHRSwgXHJcblxyXG4gICAgd2ViX3NlcnZlci5JRF9XRUJfU0VSVkVSLFxyXG4gICAgd2ViX3NlcnZlci5OQU1BX1dFQl9TRVJWRVIgXHJcblxyXG4gICAgRlJPTSBwcm9kdWtfZGV0YWlsIFxyXG4gICAgSU5ORVIgSk9JTiBwcm9kdWsgT04gcHJvZHVrLklEX1BST0RVSyA9IHByb2R1a19kZXRhaWwuUFJPRFVLX0lEIFxyXG4gICAgSU5ORVIgSk9JTiBzdGF0dXMgT04gcHJvZHVrLkZMQUdfU1RBVFVTID0gc3RhdHVzLklEX1NUQVRVUyBcclxuICAgIElOTkVSIEpPSU4gYWtzZXMgT04gcHJvZHVrX2RldGFpbC5BS1NFUyA9IGFrc2VzLklEX0FLU0VTIFxyXG4gICAgSU5ORVIgSk9JTiBkZXZlbG9wZXIgT04gcHJvZHVrX2RldGFpbC5ERVZFTE9QRVIgPSBkZXZlbG9wZXIuSURfREVWRUxPUEVSIFxyXG4gICAgSU5ORVIgSk9JTiBrYXJ5YXdhbiBPTiBrYXJ5YXdhbi5OSVBQT1MgPSBwcm9kdWtfZGV0YWlsLlBJQ19OSVBQT1MgXHJcbiAgICBJTk5FUiBKT0lOIHBlbmVtcGF0YW4gT04gcHJvZHVrX2RldGFpbC5QRU5FTVBBVEFOID0gcGVuZW1wYXRhbi5JRF9QRU5FTVBBVEFOIFxyXG4gICAgSU5ORVIgSk9JTiBzcGVjX3NlcnZlciBPTiBwcm9kdWtfZGV0YWlsLlNFUlZFUiA9IHNwZWNfc2VydmVyLklEX1NQRUNfU0VSVkVSIFxyXG4gICAgSU5ORVIgSk9JTiB3ZWJfc2VydmVyIE9OIHNwZWNfc2VydmVyLldFQl9TRVJWRVJfSUQgPSB3ZWJfc2VydmVyLklEX1dFQl9TRVJWRVIgXHJcbiAgICBXSEVSRSBwcm9kdWsuSURfUFJPRFVLID0gJHtpZH07YDtcclxuXHJcbiAgICAvLyBjb25zb2xlLmxvZygnUmVjZWl2ZWQgSUQ6JywgcXVlcnkpO1xyXG4gICAgY29ubi5xdWVyeShxdWVyeSwgKGVyciwgcmVzdWx0cykgPT4ge1xyXG4gICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZXhlY3V0aW5nIHF1ZXJ5OicsIGVycik7XHJcbiAgICAgICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoJ1F1ZXJ5IGV4ZWN1dGlvbiBlcnJvcicsIGVycik7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ1F1ZXJ5IFJlc3VsdHM6JywgcmVzdWx0cyk7XHJcbiAgICAgICAgcmVzLmpzb24ocmVzdWx0cyk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGNvbm4uY2xvc2UoKTtcclxuICAgIH0pO1xyXG4gIH0pO1xyXG5cclxuXHJcblxyXG5cclxuXHJcbiAgLy8gY29uc3QgeyBpZCB9ID0gcmVxLmJvZHk7IC8vIE1lbmdhbWJpbCBpZCBkYXJpIG9iamVrIHJlcS5ib2R5XHJcbiAgLy8gY29uc29sZS5sb2coJ1JlY2VpdmVkIElEOicsIGlkKTtcclxuICAvLyBpZiAoIWlkKSB7XHJcbiAgLy8gICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLnNlbmQoJ0lEIGlzIHJlcXVpcmVkJyk7XHJcbiAgLy8gfVxyXG5cclxuICAvLyBzcWwub3Blbihjb25uZWN0aW9uU3RyaW5nLCAoZXJyLCBjb25uKSA9PiB7XHJcbiAgLy8gICBpZiAoZXJyKSB7XHJcbiAgLy8gICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIG9jY3VycmVkOicsIGVycik7XHJcbiAgLy8gICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKCdEYXRhYmFzZSBjb25uZWN0aW9uIGVycm9yJyk7XHJcbiAgLy8gICAgIHJldHVybjtcclxuICAvLyAgIH1cclxuXHJcbiAgLy8gICBjb25zdCBxdWVyeSA9IGBTRUxFQ1QgcHJvZHVrLk5BTUFfUFJPRFVLLCBwcm9kdWsuREVTS1JJUFNJX1BST0RVSywgYWNjb3VudC5VU0VSTkFNRSwgYWNjb3VudC5QQVNTLCBhY2NvdW50LlRBTkdHQUxfQ1JFQVRFLCBhY2NvdW50LlRBTkdHQUxfVVBEQVRFLCBhY2NvdW50LkVYUF9EQVRFX1BBU1NXT1JELCBhY2NvdW50LkpFTklTX0FLVU4sIGFrc2VzLk5BTUFfQUtTRVMsIGRldmVsb3Blci5OQU1BX0RFVkVMT1BFUiwga2FyeWF3YW4uTkFNQSwga2FyeWF3YW4uVEVMRVBPTiwgcGVuZW1wYXRhbi5OQU1BX1BFTkVNUEFUQU4sIHN0YXR1cy5OQU1BX1NUQVRVUywgcHJvZHVrX2RldGFpbC5QSUNfTklQUE9TLCBwcm9kdWtfZGV0YWlsLkJVU0lORVNTX09XTkVSLCBwcm9kdWtfZGV0YWlsLldBS1RVX09QRVJBU0lPTkFMLCBwcm9kdWtfZGV0YWlsLlVSTCwgcHJvZHVrX2RldGFpbC5QT1JULCBwcm9kdWtfZGV0YWlsLkZSQU1FV09SSywgcHJvZHVrX2RldGFpbC5WRVJfRlJBTUVXT1JLLCBwcm9kdWtfZGV0YWlsLkpFTklTX0RBVEFCQVNFLCBwcm9kdWtfZGV0YWlsLlRBTkdHQUxfTElWRSwgcHJvZHVrX2RldGFpbC5UQU5HR0FMX0FLSElSX1VQREFURSwgcHJvZHVrX2RldGFpbC5UQU5HR0FMX1RVVFVQLCBwcm9kdWtfZGV0YWlsLlRBTkdHQUxfREVQTE9ZLCBwcm9kdWtfZGV0YWlsLkJBX0RFUExPWSwgcHJvZHVrX2RldGFpbC5SRVFfREVQTE9ZLCBzcGVjX3NlcnZlci5JUF9TRVJWRVIsIHNwZWNfc2VydmVyLkNQVSwgc3BlY19zZXJ2ZXIuUkFNLCBzcGVjX3NlcnZlci5TVE9SQUdFLCB3ZWJfc2VydmVyLk5BTUFfV0VCX1NFUlZFUiBGUk9NIHByb2R1a19kZXRhaWwgSU5ORVIgSk9JTiBwcm9kdWsgT04gcHJvZHVrLklEX1BST0RVSyA9IHByb2R1a19kZXRhaWwuUFJPRFVLX0lEIElOTkVSIEpPSU4gc3RhdHVzIE9OIHByb2R1ay5GTEFHX1NUQVRVUyA9IHN0YXR1cy5JRF9TVEFUVVMgSU5ORVIgSk9JTiBhY2NvdW50IE9OIHByb2R1ay5JRF9QUk9EVUsgPSBhY2NvdW50LlBST0RVS19JRCBJTk5FUiBKT0lOIGFrc2VzIE9OIHByb2R1a19kZXRhaWwuQUtTRVMgPSBha3Nlcy5JRF9BS1NFUyBJTk5FUiBKT0lOIGRldmVsb3BlciBPTiBwcm9kdWtfZGV0YWlsLkRFVkVMT1BFUiA9IGRldmVsb3Blci5JRF9ERVZFTE9QRVIgSU5ORVIgSk9JTiBrYXJ5YXdhbiBPTiBrYXJ5YXdhbi5OSVBQT1MgPSBwcm9kdWtfZGV0YWlsLlBJQ19OSVBQT1MgSU5ORVIgSk9JTiBwZW5lbXBhdGFuIE9OIHByb2R1a19kZXRhaWwuUEVORU1QQVRBTiA9IHBlbmVtcGF0YW4uSURfUEVORU1QQVRBTiBJTk5FUiBKT0lOIHNwZWNfc2VydmVyIE9OIHByb2R1a19kZXRhaWwuU0VSVkVSID0gc3BlY19zZXJ2ZXIuSURfU1BFQ19TRVJWRVIgSU5ORVIgSk9JTiB3ZWJfc2VydmVyIE9OIHNwZWNfc2VydmVyLldFQl9TRVJWRVJfSUQgPSB3ZWJfc2VydmVyLklEX1dFQl9TRVJWRVIgV0hFUkUgcHJvZHVrX2RldGFpbC5JRF9QUk9EVUtfREVUQUlMID0gJHtpZH07YDtcclxuICAvLyAgIGNvbnNvbGUubG9nKCdSZWNlaXZlZCBJRDonLCBxdWVyeSk7XHJcbiAgLy8gICBjb25uLnF1ZXJ5KHF1ZXJ5LCBbaWRdLCAoZXJyLCByZXN1bHRzKSA9PiB7XHJcbiAgLy8gICAgIGlmIChlcnIpIHtcclxuICAvLyAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBleGVjdXRpbmcgcXVlcnk6JywgZXJyKTtcclxuICAvLyAgICAgICByZXMuc3RhdHVzKDUwMCkuc2VuZCgnUXVlcnkgZXhlY3V0aW9uIGVycm9yJywgZXJyKTtcclxuICAvLyAgICAgfSBlbHNlIHtcclxuICAvLyAgICAgICByZXMuanNvbihyZXN1bHRzKTtcclxuICAvLyAgICAgfVxyXG5cclxuICAvLyAgICAgY29ubi5jbG9zZSgpO1xyXG4gIC8vIH0pO1xyXG4gIC8vIH0pO1xyXG59KTtcclxuXHJcbmFwcC5wb3N0KCcvZnVsbC1hY2NvdW50JywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgc3FsLm9wZW4oY29ubmVjdGlvblN0cmluZywgKGVyciwgY29ubikgPT4ge1xyXG4gICAgY29uc3QgeyBpZCB9ID0gcmVxLmJvZHk7IC8vIE1lbmdhbWJpbCBpZCBkYXJpIG9iamVrIHJlcS5ib2R5XHJcbiAgICAvLyBjb25zb2xlLmxvZygnUmVjZWl2ZWQgSUQ6JywgaWQpO1xyXG4gICAgaWYgKGVycikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBvY2N1cnJlZDonLCBlcnIpO1xyXG4gICAgICByZXMuc3RhdHVzKDUwMCkuc2VuZCgnRGF0YWJhc2UgY29ubmVjdGlvbiBlcnJvcicpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgcXVlcnkgPSBgXHJcbiAgICBTRUxFQ1QgYWNjb3VudC5JRF9BQ0NPVU5ULCBcclxuICAgIGFjY291bnQuVVNFUk5BTUUsIFxyXG4gICAgYWNjb3VudC5QQVNTLCBcclxuICAgIGFjY291bnQuRVhQX0RBVEVfUEFTU1dPUkQsIFxyXG4gICAgYWNjb3VudC5KRU5JU19BS1VOIEZST00gYWNjb3VudCBcclxuICAgIFdIRVJFIGFjY291bnQuUFJPRFVLX0lEID0gJHtpZH07YDtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdSZWNlaXZlZCBJRDonLCBxdWVyeSk7XHJcbiAgICBjb25uLnF1ZXJ5KHF1ZXJ5LCAoZXJyLCByZXN1bHRzKSA9PiB7XHJcbiAgICAgIGlmIChlcnIpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBleGVjdXRpbmcgcXVlcnk6JywgZXJyKTtcclxuICAgICAgICByZXMuc3RhdHVzKDUwMCkuc2VuZCgnUXVlcnkgZXhlY3V0aW9uIGVycm9yJywgZXJyKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZygnUXVlcnkgUmVzdWx0czonLCByZXN1bHRzKTtcclxuICAgICAgICByZXMuanNvbihyZXN1bHRzKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgY29ubi5jbG9zZSgpO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcbn0pO1xyXG5cclxuYXBwLnBvc3QoJy91cGRhdGUtYWxsJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgc3FsLm9wZW4oY29ubmVjdGlvblN0cmluZywgKGVyciwgY29ubikgPT4ge1xyXG4gICAgY29uc29sZS5sb2coJ3BwcHAnLCByZXEuYm9keSlcclxuICAgIHZhciBJRF9QUk9EVUsgPSBOdW1iZXIocmVxLmJvZHkuSURfUFJPRFVLKTsgLy8gTWVuZ2FtYmlsIGlkIGRhcmkgb2JqZWsgcmVxLmJvZHlcclxuICAgIHZhciBOQU1BX1BST0RVSyA9IHJlcS5ib2R5Lk5BTUFfUFJPRFVLO1xyXG4gICAgdmFyIERFU0tSSVBTSV9QUk9EVUsgPSByZXEuYm9keS5ERVNLUklQU0lfUFJPRFVLO1xyXG4gICAgY29uc29sZS5sb2coJ3BwcHAnLCB0eXBlb2YgKElEX1BST0RVSykpXHJcbiAgICBjb25zb2xlLmxvZygncHBwcCcsIHR5cGVvZiAoTkFNQV9QUk9EVUspKVxyXG4gICAgY29uc29sZS5sb2coJ3BwcHAnLCB0eXBlb2YgKERFU0tSSVBTSV9QUk9EVUspKVxyXG4gICAgdmFyIFVSTCA9IHJlcS5ib2R5LlVSTDtcclxuICAgIHZhciBJUF9TRVJWRVIgPSByZXEuYm9keS5JUF9TRVJWRVI7XHJcbiAgICB2YXIgUEVORU1QQVRBTiA9IE51bWJlcihyZXEuYm9keS5QRU5FTVBBVEFOKTtcclxuICAgIHZhciBBS1NFUyA9IE51bWJlcihyZXEuYm9keS5BS1NFUyk7XHJcbiAgICB2YXIgQ1BVID0gcmVxLmJvZHkuQ1BVO1xyXG4gICAgdmFyIFJBTSA9IHJlcS5ib2R5LlJBTTtcclxuICAgIHZhciBTVE9SQUdFID0gcmVxLmJvZHkuU1RPUkFHRTtcclxuICAgIHZhciBTRVJWRVIgPSBOdW1iZXIocmVxLmJvZHkuU0VSVkVSKTtcclxuICAgIHZhciBKRU5JU19EQVRBQkFTRSA9IHJlcS5ib2R5LkpFTklTX0RBVEFCQVNFO1xyXG4gICAgdmFyIEZSQU1FV09SSyA9IHJlcS5ib2R5LkZSQU1FV09SSztcclxuICAgIHZhciBWRVJfRlJBTUVXT1JLID0gcmVxLmJvZHkuVkVSX0ZSQU1FV09SSztcclxuICAgIHZhciBXQUtUVV9PUEVSQVNJT05BTCA9IHJlcS5ib2R5LldBS1RVX09QRVJBU0lPTkFMO1xyXG4gICAgdmFyIERFVkVMT1BFUiA9IHJlcS5ib2R5LkRFVkVMT1BFUjtcclxuICAgIHZhciBCVVNJTkVTU19PV05FUiA9IHJlcS5ib2R5LkJVU0lORVNTX09XTkVSO1xyXG4gICAgdmFyIFBJQ19OSVBQT1MgPSByZXEuYm9keS5QSUNfTklQUE9TO1xyXG4gICAgLy8gY29uc3QgeyBURUxFUE9OIH0gPSByZXEuYm9keS5URUxFUE9OO1xyXG4gICAgdmFyIFBPUlQgPSByZXEuYm9keS5QT1JUO1xyXG4gICAgdmFyIE5BTUFfU1RBVFVTID0gTnVtYmVyKHJlcS5ib2R5Lk5BTUFfU1RBVFVTKTtcclxuXHJcbiAgICB2YXIgV0VCX1NFUlZFUl9JRCA9IE51bWJlcihyZXEuYm9keS5XRUJfU0VSVkVSX0lEKVxyXG4gICAgdmFyIFRBTkdHQUxfTElWRSA9IHJlcS5ib2R5LlRBTkdHQUxfTElWRTtcclxuICAgIHZhciBUQU5HR0FMX0RFUExPWSA9IHJlcS5ib2R5LlRBTkdHQUxfREVQTE9ZO1xyXG4gICAgdmFyIFRBTkdHQUxfQUtISVJfVVBEQVRFID0gcmVxLmJvZHkuVEFOR0dBTF9BS0hJUl9VUERBVEU7XHJcbiAgICB2YXIgVEFOR0dBTF9UVVRVUCA9IHJlcS5ib2R5LlRBTkdHQUxfVFVUVVA7XHJcblxyXG4gICAgdmFyIElEX0FDQ09VTlQgPSByZXEuYm9keS5JRF9BQ0NPVU5UO1xyXG4gICAgdmFyIEpFTklTX0FLVU4gPSByZXEuYm9keS5KRU5JU19BS1VOO1xyXG4gICAgdmFyIFVTRVJOQU1FID0gcmVxLmJvZHkuVVNFUk5BTUU7XHJcbiAgICB2YXIgUEFTUyA9IHJlcS5ib2R5LlBBU1M7XHJcbiAgICB2YXIgRVhQX0RBVEVfUEFTU1dPUkQgPSByZXEuYm9keS5FWFBfREFURV9QQVNTV09SRDtcclxuICAgIHZhciBMRU5HVEhfQUNDT1VOVCA9IE51bWJlcihyZXEuYm9keS5MRU5HVEhfQUNDT1VOVClcclxuICAgIHZhciBUQU5HR0FMX1VQREFURSA9IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKS5zcGxpdCgnVCcpWzBdO1xyXG4gICAgY29uc29sZS5sb2coJ1JlY2VpdmVkIElEOicsIElEX0FDQ09VTlQpO1xyXG4gICAgY29uc29sZS5sb2coJ1JlY2VpdmVkIElEOicsIEpFTklTX0FLVU4pO1xyXG4gICAgY29uc29sZS5sb2coJ1JlY2VpdmVkIElEOicsIFVTRVJOQU1FKTtcclxuICAgIGNvbnNvbGUubG9nKCdSZWNlaXZlZCBJRDonLCBQQVNTKTtcclxuICAgIGNvbnNvbGUubG9nKCdSZWNlaXZlZCBJRDonLCB0eXBlb2YgKEVYUF9EQVRFX1BBU1NXT1JEWzBdKSk7XHJcbiAgICBjb25zb2xlLmxvZygnUmVjZWl2ZWQgSUQ6JywgdHlwZW9mIChUQU5HR0FMX0xJVkUpKTtcclxuICAgIGNvbnNvbGUubG9nKCdSZWNlaXZlZCBJRDonLCBMRU5HVEhfQUNDT1VOVCk7XHJcbiAgICBpZiAoZXJyKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIG9jY3VycmVkOicsIGVycik7XHJcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKCdEYXRhYmFzZSBjb25uZWN0aW9uIGVycm9yJyk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBxdWVyeTEgPSBgVVBEQVRFIHByb2R1a19kZXRhaWwgU0VUXHJcbiAgICBQSUNfTklQUE9TID0gJyR7UElDX05JUFBPU30nLFxyXG4gICAgUEVORU1QQVRBTiA9ICR7UEVORU1QQVRBTn0sXHJcbiAgICBBS1NFUyA9ICR7QUtTRVN9LFxyXG4gICAgREVWRUxPUEVSID0gJHtERVZFTE9QRVJ9LFxyXG4gICAgU0VSVkVSID0gJHtTRVJWRVJ9LFxyXG4gICAgQlVTSU5FU1NfT1dORVIgPSAnJHtCVVNJTkVTU19PV05FUn0nLFxyXG4gICAgV0FLVFVfT1BFUkFTSU9OQUwgPSAnJHtXQUtUVV9PUEVSQVNJT05BTH0nLFxyXG4gICAgVVJMID0gJyR7VVJMfScsXHJcbiAgICBQT1JUID0gJyR7UE9SVH0nLFxyXG4gICAgRlJBTUVXT1JLID0gJyR7RlJBTUVXT1JLfScsXHJcbiAgICBWRVJfRlJBTUVXT1JLID0gJyR7VkVSX0ZSQU1FV09SS30nLFxyXG4gICAgSkVOSVNfREFUQUJBU0UgPSAnJHtKRU5JU19EQVRBQkFTRX0nLFxyXG4gICAgVEFOR0dBTF9MSVZFID0gQ0FTVChOVUxMSUYoJyR7VEFOR0dBTF9MSVZFfScsICcnKSBBUyBEQVRFKSxcclxuICAgIFRBTkdHQUxfQUtISVJfVVBEQVRFID0gQ0FTVChOVUxMSUYoJyR7VEFOR0dBTF9BS0hJUl9VUERBVEV9JywgJycpIEFTIERBVEUpLFxyXG4gICAgVEFOR0dBTF9UVVRVUCA9IENBU1QoTlVMTElGKCcke1RBTkdHQUxfVFVUVVB9JywgJycpIEFTIERBVEUpLFxyXG4gICAgVEFOR0dBTF9ERVBMT1kgPSBDQVNUKE5VTExJRignJHtUQU5HR0FMX0RFUExPWX0nLCAnJykgQVMgREFURSlcclxuICAgIFdIRVJFIFBST0RVS19JRCA9ICR7SURfUFJPRFVLfTtgXHJcblxyXG4gICAgY29uc3QgcXVlcnkyID0gYFVQREFURSBwcm9kdWsgU0VUIFxyXG4gICAgTkFNQV9QUk9EVUsgPSAnJHtOQU1BX1BST0RVS30nLFxyXG4gICAgREVTS1JJUFNJX1BST0RVSyA9ICcke0RFU0tSSVBTSV9QUk9EVUt9JyBcclxuICAgIFdIRVJFIElEX1BST0RVSyA9ICR7SURfUFJPRFVLfTtgXHJcblxyXG4gICAgY29uc3QgcXVlcnkzID0gYFVQREFURSBzcGVjX3NlcnZlciBTRVRcclxuICAgIFdFQl9TRVJWRVJfSUQgPSAke1dFQl9TRVJWRVJfSUR9LFxyXG4gICAgSVBfU0VSVkVSID0gJyR7SVBfU0VSVkVSfScsXHJcbiAgICBDUFUgPSAnJHtDUFV9JyxcclxuICAgIFJBTSA9ICcke1JBTX0nLFxyXG4gICAgU1RPUkFHRSA9ICcke1NUT1JBR0V9J1xyXG4gICAgV0hFUkUgSURfU1BFQ19TRVJWRVIgPSAke1NFUlZFUn07XHJcbiAgICBgXHJcblxyXG4gICAgbGV0IHF1ZXJ5NCA9ICcnO1xyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBMRU5HVEhfQUNDT1VOVDsgaSsrKSB7XHJcbiAgICAgIHF1ZXJ5NCArPSBgVVBEQVRFIGFjY291bnQgU0VUXHJcbiAgICAgICAgSkVOSVNfQUtVTiA9ICcke0pFTklTX0FLVU5baV19JyxcclxuICAgICAgICBVU0VSTkFNRSA9ICcke1VTRVJOQU1FW2ldfScsXHJcbiAgICAgICAgUEFTUyA9ICcke1BBU1NbaV19JyxcclxuICAgICAgICBFWFBfREFURV9QQVNTV09SRCA9ICcke0VYUF9EQVRFX1BBU1NXT1JEW2ldfScsXHJcbiAgICAgICAgVEFOR0dBTF9VUERBVEUgPSAnJHtUQU5HR0FMX1VQREFURX0nXHJcbiAgICAgICAgV0hFUkUgSURfQUNDT1VOVCA9ICR7SURfQUNDT1VOVFtpXX07XFxuYDtcclxuICAgIH1cclxuXHJcblxyXG4gICAgLy8gY29uc29sZS5sb2coJ1JlY2VpdmVkIElEOicsIHF1ZXJ5KTtcclxuICAgIGNvbm4ucXVlcnkocXVlcnkxLCAoZXJyLCByZXN1bHRzKSA9PiB7XHJcbiAgICAgIGlmIChlcnIpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBleGVjdXRpbmcgcXVlcnkxOicsIGVycik7XHJcbiAgICAgICAgY29ubi5jbG9zZSgpO1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKCdRdWVyeTEgZXhlY3V0aW9uIGVycm9yJyk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBjb25uLnF1ZXJ5KHF1ZXJ5MiwgKGVyciwgcmVzdWx0cykgPT4ge1xyXG4gICAgICAgIGlmIChlcnIpIHtcclxuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGV4ZWN1dGluZyBxdWVyeTI6JywgZXJyKTtcclxuICAgICAgICAgIGNvbm4uY2xvc2UoKTtcclxuICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKCdRdWVyeTIgZXhlY3V0aW9uIGVycm9yJyk7XHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25uLnF1ZXJ5KHF1ZXJ5MywgKGVyciwgcmVzdWx0cykgPT4ge1xyXG4gICAgICAgICAgaWYgKGVycikge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBleGVjdXRpbmcgcXVlcnkzOicsIGVycik7XHJcbiAgICAgICAgICAgIGNvbm4uY2xvc2UoKTtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoJ1F1ZXJ5MyBleGVjdXRpb24gZXJyb3InKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIGNvbm4ucXVlcnkocXVlcnk0LCAoZXJyLCByZXN1bHRzKSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChlcnIpIHtcclxuICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBleGVjdXRpbmcgcXVlcnkzOicsIGVycik7XHJcbiAgICAgICAgICAgICAgY29ubi5jbG9zZSgpO1xyXG4gICAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKCdRdWVyeTMgZXhlY3V0aW9uIGVycm9yJyk7XHJcbiAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICByZXMuanNvbih7IHN1Y2Nlc3M6IHRydWUgfSk7XHJcbiAgICAgICAgICAgIGNvbm4uY2xvc2UoKTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG5cclxuICAgIC8vIGNvbm4ucXVlcnkocXVlcnkyLCAoZXJyLCByZXN1bHRzKSA9PiB7XHJcbiAgICAvLyAgIGlmIChlcnIpIHtcclxuICAgIC8vICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBleGVjdXRpbmcgcXVlcnk6JywgZXJyKTtcclxuICAgIC8vICAgICByZXMuc3RhdHVzKDUwMCkuc2VuZCgnUXVlcnkgZXhlY3V0aW9uIGVycm9yJywgZXJyKTtcclxuICAgIC8vICAgfSBlbHNlIHtcclxuICAgIC8vICAgICAvLyBjb25zb2xlLmxvZygnUXVlcnkgUmVzdWx0czonLCByZXN1bHRzKTtcclxuICAgIC8vICAgICByZXMuanNvbihyZXN1bHRzKTtcclxuICAgIC8vICAgfVxyXG5cclxuICAgIC8vICAgY29ubi5jbG9zZSgpO1xyXG4gICAgLy8gfSk7XHJcbiAgfSk7XHJcbn0pO1xyXG5cclxuXHJcblxyXG5cclxuXHJcbmFwcC5wb3N0KCcvbmV3LXBlbmVtcGF0YW4nLCAocmVxLCByZXMpID0+IHtcclxuICBzcWwub3Blbihjb25uZWN0aW9uU3RyaW5nLCAoZXJyLCBjb25uKSA9PiB7XHJcbiAgICBjb25zdCB7IE5FV19OQU1BX1BFTkVNUEFUQU4gfSA9IHJlcS5ib2R5O1xyXG4gICAgLy8gY29uc29sZS5sb2coJ1JlY2VpdmVkIE5FV19OQU1BX1BFTkVNUEFUQU46JywgTkVXX05BTUFfUEVORU1QQVRBTik7XHJcbiAgICBpZiAoZXJyKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIG9jY3VycmVkOicsIGVycik7XHJcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKCdEYXRhYmFzZSBjb25uZWN0aW9uIGVycm9yJyk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBxdWVyeSA9IGBcclxuICAgIElOU0VSVCBJTlRPIHBlbmVtcGF0YW4oTkFNQV9QRU5FTVBBVEFOKSBWQUxVRVMgKCcke05FV19OQU1BX1BFTkVNUEFUQU59Jyk7YDtcclxuICAgIGNvbnNvbGUubG9nKFwicXVlcnlcIiwgcXVlcnkpXHJcbiAgICBjb25uLnF1ZXJ5KHF1ZXJ5LCAoZXJyLCByZXN1bHRzKSA9PiB7XHJcbiAgICAgIGlmIChlcnIpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBleGVjdXRpbmcgcXVlcnk6JywgZXJyKTtcclxuICAgICAgICByZXMuc3RhdHVzKDUwMCkuc2VuZCgnUXVlcnkgZXhlY3V0aW9uIGVycm9yJywgZXJyKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZygnUXVlcnkgUmVzdWx0czonLCByZXN1bHRzKTtcclxuICAgICAgICByZXMuanNvbihyZXN1bHRzKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgY29ubi5jbG9zZSgpO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcbn0pOyBgXHJcbmBcclxuYXBwLnBvc3QoJy9uZXctYWtzZXMnLCAocmVxLCByZXMpID0+IHtcclxuICBzcWwub3Blbihjb25uZWN0aW9uU3RyaW5nLCAoZXJyLCBjb25uKSA9PiB7XHJcbiAgICBjb25zdCB7IE5FV19OQU1BX0FLU0VTIH0gPSByZXEuYm9keTtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdSZWNlaXZlZCBORVdfTkFNQV9BS1NFUzonLCBORVdfTkFNQV9BS1NFUyk7XHJcbiAgICBpZiAoZXJyKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIG9jY3VycmVkOicsIGVycik7XHJcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKCdEYXRhYmFzZSBjb25uZWN0aW9uIGVycm9yJyk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBxdWVyeSA9IGBcclxuICAgIElOU0VSVCBJTlRPIGFrc2VzKE5BTUFfQUtTRVMpIFZBTFVFUyAoJyR7TkVXX05BTUFfQUtTRVN9Jyk7YDtcclxuICAgIGNvbnNvbGUubG9nKFwicXVlcnlcIiwgcXVlcnkpXHJcbiAgICBjb25uLnF1ZXJ5KHF1ZXJ5LCAoZXJyLCByZXN1bHRzKSA9PiB7XHJcbiAgICAgIGlmIChlcnIpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBleGVjdXRpbmcgcXVlcnk6JywgZXJyKTtcclxuICAgICAgICByZXMuc3RhdHVzKDUwMCkuc2VuZCgnUXVlcnkgZXhlY3V0aW9uIGVycm9yJywgZXJyKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZygnUXVlcnkgUmVzdWx0czonLCByZXN1bHRzKTtcclxuICAgICAgICByZXMuanNvbihyZXN1bHRzKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgY29ubi5jbG9zZSgpO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcbn0pO1xyXG5cclxuYXBwLnBvc3QoJy9uZXctd2Vic2VydmVyJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgc3FsLm9wZW4oY29ubmVjdGlvblN0cmluZywgKGVyciwgY29ubikgPT4ge1xyXG4gICAgY29uc3QgeyBORVdfTkFNQV9XRUJfU0VSVkVSIH0gPSByZXEuYm9keTtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdSZWNlaXZlZCBORVdfTkFNQV9XRUJfU0VSVkVSOicsIE5FV19OQU1BX1dFQl9TRVJWRVIpO1xyXG4gICAgaWYgKGVycikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBvY2N1cnJlZDonLCBlcnIpO1xyXG4gICAgICByZXMuc3RhdHVzKDUwMCkuc2VuZCgnRGF0YWJhc2UgY29ubmVjdGlvbiBlcnJvcicpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgcXVlcnkgPSBgXHJcbiAgICBJTlNFUlQgSU5UTyB3ZWJfc2VydmVyKE5BTUFfV0VCX1NFUlZFUikgVkFMVUVTICgnJHtORVdfTkFNQV9XRUJfU0VSVkVSfScpO2A7XHJcbiAgICBjb25zb2xlLmxvZyhcInF1ZXJ5XCIsIHF1ZXJ5KVxyXG4gICAgY29ubi5xdWVyeShxdWVyeSwgKGVyciwgcmVzdWx0cykgPT4ge1xyXG4gICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZXhlY3V0aW5nIHF1ZXJ5OicsIGVycik7XHJcbiAgICAgICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoJ1F1ZXJ5IGV4ZWN1dGlvbiBlcnJvcicsIGVycik7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ1F1ZXJ5IFJlc3VsdHM6JywgcmVzdWx0cyk7XHJcbiAgICAgICAgcmVzLmpzb24ocmVzdWx0cyk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGNvbm4uY2xvc2UoKTtcclxuICAgIH0pO1xyXG4gIH0pO1xyXG59KTtcclxuXHJcbmFwcC5wb3N0KCcvbmV3LWRldmVsb3BlcicsIChyZXEsIHJlcykgPT4ge1xyXG4gIHNxbC5vcGVuKGNvbm5lY3Rpb25TdHJpbmcsIChlcnIsIGNvbm4pID0+IHtcclxuICAgIGNvbnN0IHsgTkVXX05BTUFfREVWRUxPUEVSIH0gPSByZXEuYm9keTtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdSZWNlaXZlZCBORVdfTkFNQV9ERVZFTE9QRVI6JywgTkVXX05BTUFfREVWRUxPUEVSKTtcclxuICAgIGlmIChlcnIpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignRXJyb3Igb2NjdXJyZWQ6JywgZXJyKTtcclxuICAgICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoJ0RhdGFiYXNlIGNvbm5lY3Rpb24gZXJyb3InKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHF1ZXJ5ID0gYFxyXG4gICAgSU5TRVJUIElOVE8gZGV2ZWxvcGVyKE5BTUFfREVWRUxPUEVSKSBWQUxVRVMgKCcke05FV19OQU1BX0RFVkVMT1BFUn0nKTtgO1xyXG4gICAgY29uc29sZS5sb2coXCJxdWVyeVwiLCBxdWVyeSlcclxuICAgIGNvbm4ucXVlcnkocXVlcnksIChlcnIsIHJlc3VsdHMpID0+IHtcclxuICAgICAgaWYgKGVycikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGV4ZWN1dGluZyBxdWVyeTonLCBlcnIpO1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKCdRdWVyeSBleGVjdXRpb24gZXJyb3InLCBlcnIpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKCdRdWVyeSBSZXN1bHRzOicsIHJlc3VsdHMpO1xyXG4gICAgICAgIHJlcy5qc29uKHJlc3VsdHMpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBjb25uLmNsb3NlKCk7XHJcbiAgICB9KTtcclxuICB9KTtcclxufSk7XHJcblxyXG5hcHAucG9zdCgnL25ldy1waWMnLCAocmVxLCByZXMpID0+IHtcclxuICBzcWwub3Blbihjb25uZWN0aW9uU3RyaW5nLCAoZXJyLCBjb25uKSA9PiB7XHJcbiAgICB2YXIgTkVXX05JUFBPU19QSUMgPSByZXEuYm9keS5ORVdfTklQUE9TX1BJQztcclxuICAgIHZhciBORVdfTkFNQV9QSUMgPSByZXEuYm9keS5ORVdfTkFNQV9QSUM7XHJcbiAgICB2YXIgTkVXX1RFTEVQT05fUElDID0gcmVxLmJvZHkuTkVXX1RFTEVQT05fUElDO1xyXG4gICAgdmFyIE5FV19VU0VSTkFNRV9QSUMgPSByZXEuYm9keS5ORVdfVVNFUk5BTUVfUElDO1xyXG4gICAgdmFyIE5FV19QQVNTX1BJQyA9IHJlcS5ib2R5Lk5FV19QQVNTX1BJQztcclxuICAgIGNvbnNvbGUubG9nKCdSZWNlaXZlZCBORVdfTkFNQV9QSUM6JywgTkVXX05BTUFfUElDKTtcclxuICAgIGlmIChlcnIpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignRXJyb3Igb2NjdXJyZWQ6JywgZXJyKTtcclxuICAgICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoJ0RhdGFiYXNlIGNvbm5lY3Rpb24gZXJyb3InKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHF1ZXJ5ID0gYFxyXG4gICAgSU5TRVJUIElOVE8ga2FyeWF3YW4oTklQUE9TLCBOQU1BLCBURUxFUE9OLCBVU0VSTkFNRSwgUEFTUykgXHJcbiAgICBWQUxVRVMgKCcke05FV19OSVBQT1NfUElDfScsICcke05FV19OQU1BX1BJQ30nLCAnJHtORVdfVEVMRVBPTl9QSUN9JywgJyR7TkVXX1VTRVJOQU1FX1BJQ30nLCAnJHtORVdfUEFTU19QSUN9Jyk7YDtcclxuICAgIGNvbnNvbGUubG9nKFwicXVlcnlcIiwgcXVlcnkpXHJcbiAgICBjb25uLnF1ZXJ5KHF1ZXJ5LCAoZXJyLCByZXN1bHRzKSA9PiB7XHJcbiAgICAgIGlmIChlcnIpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBleGVjdXRpbmcgcXVlcnk6JywgZXJyKTtcclxuICAgICAgICByZXMuc3RhdHVzKDUwMCkuc2VuZCgnUXVlcnkgZXhlY3V0aW9uIGVycm9yJywgZXJyKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZygnUXVlcnkgUmVzdWx0czonLCByZXN1bHRzKTtcclxuICAgICAgICByZXMuanNvbihyZXN1bHRzKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgY29ubi5jbG9zZSgpO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcbn0pO1xyXG5cclxuYXBwLnBvc3QoJy9uZXctc3RhdHVzJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgc3FsLm9wZW4oY29ubmVjdGlvblN0cmluZywgKGVyciwgY29ubikgPT4ge1xyXG4gICAgY29uc3QgeyBORVdfTkFNQV9TVEFUVVMgfSA9IHJlcS5ib2R5O1xyXG4gICAgLy8gY29uc29sZS5sb2coJ1JlY2VpdmVkIE5FV19OQU1BX1NUQVRVUzonLCBORVdfTkFNQV9TVEFUVVMpO1xyXG4gICAgaWYgKGVycikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBvY2N1cnJlZDonLCBlcnIpO1xyXG4gICAgICByZXMuc3RhdHVzKDUwMCkuc2VuZCgnRGF0YWJhc2UgY29ubmVjdGlvbiBlcnJvcicpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgcXVlcnkgPSBgXHJcbiAgICBJTlNFUlQgSU5UTyBzdGF0dXMoTkFNQV9TVEFUVVMpIFZBTFVFUyAoJyR7TkVXX05BTUFfU1RBVFVTfScpO2A7XHJcbiAgICBjb25zb2xlLmxvZyhcInF1ZXJ5XCIsIHF1ZXJ5KVxyXG4gICAgY29ubi5xdWVyeShxdWVyeSwgKGVyciwgcmVzdWx0cykgPT4ge1xyXG4gICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZXhlY3V0aW5nIHF1ZXJ5OicsIGVycik7XHJcbiAgICAgICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoJ1F1ZXJ5IGV4ZWN1dGlvbiBlcnJvcicsIGVycik7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ1F1ZXJ5IFJlc3VsdHM6JywgcmVzdWx0cyk7XHJcbiAgICAgICAgcmVzLmpzb24ocmVzdWx0cyk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGNvbm4uY2xvc2UoKTtcclxuICAgIH0pO1xyXG4gIH0pO1xyXG59KTtcclxuXHJcbmFwcC5wb3N0KCcvbmV3LXByb2R1aycsIChyZXEsIHJlcykgPT4ge1xyXG4gIHNxbC5vcGVuKGNvbm5lY3Rpb25TdHJpbmcsIChlcnIsIGNvbm4pID0+IHtcclxuICAgIGNvbnNvbGUubG9nKCdwcHBwJywgcmVxLmJvZHkpXHJcbiAgICAvLyBjb25zb2xlLmxvZygncHBwcCcsIHR5cGVvZiAoSURfUFJPRFVLKSlcclxuICAgIC8vIGNvbnNvbGUubG9nKCdwcHBwJywgdHlwZW9mIChOQU1BX1BST0RVSykpXHJcbiAgICAvLyBjb25zb2xlLmxvZygncHBwcCcsIHR5cGVvZiAoREVTS1JJUFNJX1BST0RVSykpXHJcblxyXG4gICAgLy8gdmFyIElEX1BST0RVSyA9IE51bWJlcihyZXEuYm9keS5JRF9QUk9EVUspOyBcclxuICAgIHZhciBOQU1BX1BST0RVSyA9IHJlcS5ib2R5Lk5BTUFfUFJPRFVLO1xyXG4gICAgdmFyIERFU0tSSVBTSV9QUk9EVUsgPSByZXEuYm9keS5ERVNLUklQU0lfUFJPRFVLO1xyXG4gICAgdmFyIFVSTCA9IEFycmF5LmlzQXJyYXkocmVxLmJvZHkuVVJMKSAmJiByZXEuYm9keS5VUkwubGVuZ3RoID09PSAwID8gbnVsbCA6IEpTT04uc3RyaW5naWZ5KHJlcS5ib2R5LlVSTCkucmVwbGFjZSgvXCIvZywgXCInXCIpO1xyXG4gICAgdmFyIElQX1NFUlZFUiA9IEFycmF5LmlzQXJyYXkocmVxLmJvZHkuSVBfU0VSVkVSKSAmJiByZXEuYm9keS5JUF9TRVJWRVIubGVuZ3RoID09PSAwID8gbnVsbCA6IEpTT04uc3RyaW5naWZ5KHJlcS5ib2R5LklQX1NFUlZFUikucmVwbGFjZSgvXCIvZywgXCInXCIpO1xyXG4gICAgdmFyIFBFTkVNUEFUQU4gPSBBcnJheS5pc0FycmF5KHJlcS5ib2R5LlBFTkVNUEFUQU4pICYmIHJlcS5ib2R5LlBFTkVNUEFUQU4ubGVuZ3RoID09PSAwID8gbnVsbCA6IE51bWJlcihyZXEuYm9keS5QRU5FTVBBVEFOKTtcclxuICAgIHZhciBBS1NFUyA9IEFycmF5LmlzQXJyYXkocmVxLmJvZHkuQUtTRVMpICYmIHJlcS5ib2R5LkFLU0VTLmxlbmd0aCA9PT0gMCA/IG51bGwgOiBOdW1iZXIocmVxLmJvZHkuQUtTRVMpO1xyXG4gICAgdmFyIENQVSA9IEFycmF5LmlzQXJyYXkocmVxLmJvZHkuQ1BVKSAmJiByZXEuYm9keS5DUFUubGVuZ3RoID09PSAwID8gbnVsbCA6IEpTT04uc3RyaW5naWZ5KHJlcS5ib2R5LkNQVSkucmVwbGFjZSgvXCIvZywgXCInXCIpO1xyXG4gICAgdmFyIFJBTSA9IEFycmF5LmlzQXJyYXkocmVxLmJvZHkuUkFNKSAmJiByZXEuYm9keS5SQU0ubGVuZ3RoID09PSAwID8gbnVsbCA6IEpTT04uc3RyaW5naWZ5KHJlcS5ib2R5LlJBTSkucmVwbGFjZSgvXCIvZywgXCInXCIpO1xyXG4gICAgdmFyIFNUT1JBR0UgPSBBcnJheS5pc0FycmF5KHJlcS5ib2R5LlNUT1JBR0UpICYmIHJlcS5ib2R5LlNUT1JBR0UubGVuZ3RoID09PSAwID8gbnVsbCA6IEpTT04uc3RyaW5naWZ5KHJlcS5ib2R5LlNUT1JBR0UpLnJlcGxhY2UoL1wiL2csIFwiJ1wiKTtcclxuICAgIHZhciBTRVJWRVIgPSBBcnJheS5pc0FycmF5KHJlcS5ib2R5LlNFUlZFUikgJiYgcmVxLmJvZHkuU0VSVkVSLmxlbmd0aCA9PT0gMCA/IG51bGwgOiBOdW1iZXIocmVxLmJvZHkuU0VSVkVSKTtcclxuICAgIHZhciBKRU5JU19EQVRBQkFTRSA9IEFycmF5LmlzQXJyYXkocmVxLmJvZHkuSkVOSVNfREFUQUJBU0UpICYmIHJlcS5ib2R5LkpFTklTX0RBVEFCQVNFLmxlbmd0aCA9PT0gMCA/IG51bGwgOiBKU09OLnN0cmluZ2lmeShyZXEuYm9keS5KRU5JU19EQVRBQkFTRSkucmVwbGFjZSgvXCIvZywgXCInXCIpO1xyXG4gICAgdmFyIEZSQU1FV09SSyA9IEFycmF5LmlzQXJyYXkocmVxLmJvZHkuRlJBTUVXT1JLKSAmJiByZXEuYm9keS5GUkFNRVdPUksubGVuZ3RoID09PSAwID8gbnVsbCA6IEpTT04uc3RyaW5naWZ5KHJlcS5ib2R5LkZSQU1FV09SSykucmVwbGFjZSgvXCIvZywgXCInXCIpO1xyXG4gICAgdmFyIFZFUl9GUkFNRVdPUksgPSBBcnJheS5pc0FycmF5KHJlcS5ib2R5LlZFUl9GUkFNRVdPUkspICYmIHJlcS5ib2R5LlZFUl9GUkFNRVdPUksubGVuZ3RoID09PSAwID8gbnVsbCA6IEpTT04uc3RyaW5naWZ5KHJlcS5ib2R5LlZFUl9GUkFNRVdPUkspLnJlcGxhY2UoL1wiL2csIFwiJ1wiKTtcclxuICAgIHZhciBXQUtUVV9PUEVSQVNJT05BTCA9IEFycmF5LmlzQXJyYXkocmVxLmJvZHkuV0FLVFVfT1BFUkFTSU9OQUwpICYmIHJlcS5ib2R5LldBS1RVX09QRVJBU0lPTkFMLmxlbmd0aCA9PT0gMCA/IG51bGwgOiBKU09OLnN0cmluZ2lmeShyZXEuYm9keS5XQUtUVV9PUEVSQVNJT05BTCkucmVwbGFjZSgvXCIvZywgXCInXCIpO1xyXG4gICAgdmFyIERFVkVMT1BFUiA9IEFycmF5LmlzQXJyYXkocmVxLmJvZHkuREVWRUxPUEVSKSAmJiByZXEuYm9keS5ERVZFTE9QRVIubGVuZ3RoID09PSAwID8gbnVsbCA6IE51bWJlcihyZXEuYm9keS5ERVZFTE9QRVIpO1xyXG4gICAgdmFyIEJVU0lORVNTX09XTkVSID0gQXJyYXkuaXNBcnJheShyZXEuYm9keS5CVVNJTkVTU19PV05FUikgJiYgcmVxLmJvZHkuQlVTSU5FU1NfT1dORVIubGVuZ3RoID09PSAwID8gbnVsbCA6IEpTT04uc3RyaW5naWZ5KHJlcS5ib2R5LkJVU0lORVNTX09XTkVSKS5yZXBsYWNlKC9cIi9nLCBcIidcIik7XHJcbiAgICB2YXIgUElDX05JUFBPUyA9IEFycmF5LmlzQXJyYXkocmVxLmJvZHkuUElDX05JUFBPUykgJiYgcmVxLmJvZHkuUElDX05JUFBPUy5sZW5ndGggPT09IDAgPyBudWxsIDogSlNPTi5zdHJpbmdpZnkocmVxLmJvZHkuUElDX05JUFBPUykucmVwbGFjZSgvXCIvZywgXCInXCIpO1xyXG4gICAgLy8gY29uc3QgeyBURUxFUE9OIH0gPSByZXEuYm9keS5URUxFUE9OO1xyXG4gICAgdmFyIFBPUlQgPSBBcnJheS5pc0FycmF5KHJlcS5ib2R5LlBPUlQpICYmIHJlcS5ib2R5LlBPUlQubGVuZ3RoID09PSAwID8gbnVsbCA6IHJlcS5ib2R5LlBPUlQ7XHJcbiAgICB2YXIgTkFNQV9TVEFUVVMgPSBOdW1iZXIocmVxLmJvZHkuTkFNQV9TVEFUVVMpO1xyXG4gICAgdmFyIEZMQUdfU1RBVFVTID0gTnVtYmVyKHJlcS5ib2R5LkZMQUdfU1RBVFVTKTtcclxuXHJcbiAgICB2YXIgV0VCX1NFUlZFUl9JRCA9IE51bWJlcihyZXEuYm9keS5XRUJfU0VSVkVSX0lEKVxyXG4gICAgdmFyIFRBTkdHQUxfTElWRSA9IEFycmF5LmlzQXJyYXkocmVxLmJvZHkuVEFOR0dBTF9MSVZFKSAmJiByZXEuYm9keS5UQU5HR0FMX0xJVkUubGVuZ3RoID09PSAwID8gbnVsbCA6IEpTT04uc3RyaW5naWZ5KHJlcS5ib2R5LlRBTkdHQUxfTElWRSkucmVwbGFjZSgvXCIvZywgXCInXCIpO1xyXG4gICAgdmFyIFRBTkdHQUxfREVQTE9ZID0gQXJyYXkuaXNBcnJheShyZXEuYm9keS5UQU5HR0FMX0RFUExPWSkgJiYgcmVxLmJvZHkuVEFOR0dBTF9ERVBMT1kubGVuZ3RoID09PSAwID8gbnVsbCA6IEpTT04uc3RyaW5naWZ5KHJlcS5ib2R5LlRBTkdHQUxfREVQTE9ZKS5yZXBsYWNlKC9cIi9nLCBcIidcIik7XHJcbiAgICB2YXIgVEFOR0dBTF9BS0hJUl9VUERBVEUgPSBBcnJheS5pc0FycmF5KHJlcS5ib2R5LlRBTkdHQUxfQUtISVJfVVBEQVRFKSAmJiByZXEuYm9keS5UQU5HR0FMX0FLSElSX1VQREFURS5sZW5ndGggPT09IDAgPyBudWxsIDogSlNPTi5zdHJpbmdpZnkocmVxLmJvZHkuVEFOR0dBTF9BS0hJUl9VUERBVEUpLnJlcGxhY2UoL1wiL2csIFwiJ1wiKTtcclxuICAgIHZhciBUQU5HR0FMX1RVVFVQID0gQXJyYXkuaXNBcnJheShyZXEuYm9keS5UQU5HR0FMX1RVVFVQKSAmJiByZXEuYm9keS5UQU5HR0FMX1RVVFVQLmxlbmd0aCA9PT0gMCA/IG51bGwgOiBKU09OLnN0cmluZ2lmeShyZXEuYm9keS5UQU5HR0FMX1RVVFVQKS5yZXBsYWNlKC9cIi9nLCBcIidcIik7XHJcblxyXG4gICAgdmFyIElEX0FDQ09VTlQgPSByZXEuYm9keS5JRF9BQ0NPVU5UO1xyXG4gICAgdmFyIEpFTklTX0FLVU4gPSByZXEuYm9keS5KRU5JU19BS1VOO1xyXG4gICAgdmFyIFVTRVJOQU1FID0gcmVxLmJvZHkuVVNFUk5BTUU7XHJcbiAgICB2YXIgVVNFUk5BTUVMZW5ndGggPSByZXEuYm9keS5VU0VSTkFNRTtcclxuICAgIHZhciBQQVNTID0gcmVxLmJvZHkuUEFTUztcclxuICAgIHZhciBFWFBfREFURV9QQVNTV09SRCA9IHJlcS5ib2R5LkVYUF9EQVRFX1BBU1NXT1JEO1xyXG4gICAgdmFyIExFTkdUSF9BQ0NPVU5UID0gTnVtYmVyKHJlcS5ib2R5LkxFTkdUSF9BQ0NPVU5UKTtcclxuICAgIHZhciBUQU5HR0FMX0NSRUFURSA9IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKS5zcGxpdCgnVCcpWzBdO1xyXG4gICAgLy8gY29uc29sZS5sb2coJ1JlY2VpdmVkIElEOicsIElEX0FDQ09VTlQpO1xyXG4gICAgLy8gY29uc29sZS5sb2coJ1JlY2VpdmVkIElEOicsIEpFTklTX0FLVU4pO1xyXG4gICAgLy8gY29uc29sZS5sb2coJ1JlY2VpdmVkIElEOicsIFVTRVJOQU1FKTtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdSZWNlaXZlZCBJRDonLCBQQVNTKTtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdSZWNlaXZlZCBJRDonLCB0eXBlb2YgKEVYUF9EQVRFX1BBU1NXT1JEWzBdKSk7XHJcbiAgICAvLyBjb25zb2xlLmxvZygnUmVjZWl2ZWQgSUQ6JywgdHlwZW9mIChUQU5HR0FMX0xJVkUpKTtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdSZWNlaXZlZCBJRDonLCBMRU5HVEhfQUNDT1VOVCk7XHJcbiAgICBpZiAoZXJyKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIG9jY3VycmVkOicsIGVycik7XHJcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKCdEYXRhYmFzZSBjb25uZWN0aW9uIGVycm9yJyk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBxdWVyeTEgPSBgSU5TRVJUIElOVE8gcHJvZHVrKEZMQUdfU1RBVFVTLCBOQU1BX1BST0RVSywgREVTS1JJUFNJX1BST0RVSylcclxuICAgIFZBTFVFUyAoMSwnJHtOQU1BX1BST0RVS30nLCcke0RFU0tSSVBTSV9QUk9EVUt9Jyk7YFxyXG5cclxuXHJcbiAgICBjb25zb2xlLmxvZygnUmVjZWl2ZWQgSUQ6JywgcXVlcnkxKTtcclxuICAgIGNvbm4ucXVlcnkocXVlcnkxLCAoZXJyLCByZXN1bHRzcTEpID0+IHtcclxuICAgICAgaWYgKGVycikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGV4ZWN1dGluZyBxdWVyeTE6JywgZXJyKTtcclxuICAgICAgICBjb25uLmNsb3NlKCk7XHJcbiAgICAgICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoJ1F1ZXJ5MSBleGVjdXRpb24gZXJyb3InKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGNvbnN0IHF1ZXJ5MiA9IGBJTlNFUlQgSU5UTyBzcGVjX3NlcnZlciAoV0VCX1NFUlZFUl9JRCwgSVBfU0VSVkVSLCBDUFUsIFJBTSwgU1RPUkFHRSlcclxuICAgICAgICBWQUxVRVMgKCR7U0VSVkVSfSwgJHtJUF9TRVJWRVJ9LCAke0NQVX0sICR7UkFNfSwgJHtTVE9SQUdFfSlgXHJcblxyXG4gICAgICBjb25zb2xlLmxvZygnUmVjZWl2ZWQgSUQyOicsIHF1ZXJ5Mik7XHJcbiAgICAgIGNvbm4ucXVlcnkocXVlcnkyLCAoZXJyLCByZXN1bHRzcTIpID0+IHtcclxuICAgICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBleGVjdXRpbmcgcXVlcnkyOicsIGVycik7XHJcbiAgICAgICAgICBjb25uLmNsb3NlKCk7XHJcbiAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuc2VuZCgnUXVlcnkyIGV4ZWN1dGlvbiBlcnJvcicpO1xyXG4gICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcblxyXG5cclxuICAgICAgICBjb25zdCBwcm9kdWtJZCA9IGBXSVRIIExhc3RQcm9kdWN0IEFTIChcclxuICAgICAgICBTRUxFQ1QgVE9QIDEgSURfUFJPRFVLXHJcbiAgICAgICAgRlJPTSBwcm9kdWtcclxuICAgICAgICBPUkRFUiBCWSBJRF9QUk9EVUsgREVTQ1xyXG4gICAgKSxcclxuICAgIExhc3RTcGVjU2VydmVyIEFTIChcclxuICAgICAgICBTRUxFQ1QgVE9QIDEgSURfU1BFQ19TRVJWRVJcclxuICAgICAgICBGUk9NIHNwZWNfc2VydmVyXHJcbiAgICAgICAgT1JERVIgQlkgSURfU1BFQ19TRVJWRVIgREVTQ1xyXG4gICAgKVxyXG4gICAgU0VMRUNUIFxyXG4gICAgICAgIChTRUxFQ1QgSURfUFJPRFVLIEZST00gTGFzdFByb2R1Y3QpIEFTIElEX1BST0RVSyxcclxuICAgICAgICAoU0VMRUNUIElEX1NQRUNfU0VSVkVSIEZST00gTGFzdFNwZWNTZXJ2ZXIpIEFTIElEX1NQRUNfU0VSVkVSO1xyXG4gICAgO1xyXG4gICAgICBgO1xyXG5cclxuICAgICAgICBjb25uLnF1ZXJ5KHByb2R1a0lkLCAoZXJyLCByZXN1bHRzcDEpID0+IHtcclxuICAgICAgICAgIGlmIChlcnIpIHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZXhlY3V0aW5nIHF1ZXJ5MjonLCBlcnIpO1xyXG4gICAgICAgICAgICBjb25uLmNsb3NlKCk7XHJcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKCdRdWVyeTIgZXhlY3V0aW9uIGVycm9yJyk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICBjb25zdCBwcm9kdWtJZCA9IHJlc3VsdHNwMVswXS5JRF9QUk9EVUs7XHJcbiAgICAgICAgICBjb25zdCBzcGVjSWQgPSByZXN1bHRzcDFbMF0uSURfU1BFQ19TRVJWRVI7XHJcblxyXG5cclxuXHJcblxyXG5cclxuICAgICAgICAgIGNvbnN0IHF1ZXJ5MyA9IGBJTlNFUlQgSU5UTyBwcm9kdWtfZGV0YWlsXHJcbiAgICAgIChQUk9EVUtfSUQsIFBJQ19OSVBQT1MsIFBFTkVNUEFUQU4sIEFLU0VTLCBERVZFTE9QRVIsIFNFUlZFUiwgQlVTSU5FU1NfT1dORVIsIFxyXG4gICAgICAgIFdBS1RVX09QRVJBU0lPTkFMLCBVUkwsIFBPUlQsIEZSQU1FV09SSywgVkVSX0ZSQU1FV09SSywgSkVOSVNfREFUQUJBU0UsIFxyXG4gICAgICAgIFRBTkdHQUxfTElWRSwgVEFOR0dBTF9BS0hJUl9VUERBVEUsIFRBTkdHQUxfVFVUVVAsIFRBTkdHQUxfREVQTE9ZKVxyXG4gICAgICBWQUxVRVMgKCR7cHJvZHVrSWR9LCR7UElDX05JUFBPU30sJHtQRU5FTVBBVEFOfSwke0FLU0VTfSwke0RFVkVMT1BFUn0sJHtzcGVjSWR9LCR7QlVTSU5FU1NfT1dORVJ9LFxyXG4gICAgICAke1dBS1RVX09QRVJBU0lPTkFMfSwke1VSTH0sJHtQT1JUfSwke0ZSQU1FV09SS30sJHtWRVJfRlJBTUVXT1JLfSwke0pFTklTX0RBVEFCQVNFfSwgXHJcbiAgICAgICR7VEFOR0dBTF9MSVZFfSwke1RBTkdHQUxfQUtISVJfVVBEQVRFfSwke1RBTkdHQUxfVFVUVVB9LCR7VEFOR0dBTF9ERVBMT1l9KTtgXHJcblxyXG4gICAgICAgICAgY29uc29sZS5sb2coJ1JlY2VpdmVkIElEMzonLCBxdWVyeTMpO1xyXG5cclxuICAgICAgICAgIGNvbm4ucXVlcnkocXVlcnkzLCAoZXJyLCByZXN1bHRzcTMpID0+IHtcclxuICAgICAgICAgICAgaWYgKGVycikge1xyXG4gICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGV4ZWN1dGluZyBxdWVyeTI6JywgZXJyKTtcclxuICAgICAgICAgICAgICBjb25uLmNsb3NlKCk7XHJcbiAgICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoJ1F1ZXJ5MiBleGVjdXRpb24gZXJyb3InKTtcclxuICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuXHJcblxyXG5cclxuXHJcblxyXG4gICAgICAgICAgICBjb25zdCBwcm9kdWtJZGQgPSBgU0VMRUNUIFRPUCAxIElEX1BST0RVS1xyXG4gICAgICAgICAgRlJPTSBwcm9kdWtcclxuICAgICAgICAgIE9SREVSIEJZIElEX1BST0RVSyBERVNDXHJcbiAgICAgIDtcclxuICAgICAgICBgO1xyXG5cclxuICAgICAgICAgICAgY29ubi5xdWVyeShwcm9kdWtJZGQsIChlcnIsIHJlc3VsdHNwMikgPT4ge1xyXG4gICAgICAgICAgICAgIGlmIChlcnIpIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGV4ZWN1dGluZyBxdWVyeTI6JywgZXJyKTtcclxuICAgICAgICAgICAgICAgIGNvbm4uY2xvc2UoKTtcclxuICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKCdRdWVyeTIgZXhlY3V0aW9uIGVycm9yJyk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICBjb25zdCBwcm9kdWtJZCA9IHJlc3VsdHNwMlswXS5JRF9QUk9EVUs7XHJcblxyXG4gICAgICAgICAgICAgIGxldCBxdWVyeTQgPSAnJ1xyXG4gICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgVVNFUk5BTUUubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIHF1ZXJ5NCArPSBgSU5TRVJUIElOVE8gYWNjb3VudChQUk9EVUtfSUQsIFVTRVJOQU1FLCBQQVNTLCBFWFBfREFURV9QQVNTV09SRCwgSkVOSVNfQUtVTiwgRkxBR19TVEFUVVMsIFRBTkdHQUxfQ1JFQVRFKVxyXG4gICAgICAgICAgICAgIFZBTFVFUygke3Byb2R1a0lkfSwgJyR7VVNFUk5BTUVbaV19JywgJyR7UEFTU1tpXX0nLCAnJHtFWFBfREFURV9QQVNTV09SRFtpXX0nLCAnJHtKRU5JU19BS1VOW2ldfScsIDEsICcke1RBTkdHQUxfQ1JFQVRFfScpYFxyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1JlY2VpdmVkIElENDonLCBxdWVyeTQpO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICBjb25uLnF1ZXJ5KHF1ZXJ5NCwgKGVyciwgcmVzdWx0c3E0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGV4ZWN1dGluZyBxdWVyeTI6JywgZXJyKTtcclxuICAgICAgICAgICAgICAgICAgY29ubi5jbG9zZSgpO1xyXG4gICAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuc2VuZCgnUXVlcnkyIGV4ZWN1dGlvbiBlcnJvcicpO1xyXG4gICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgcmVzLmpzb24oeyBzdWNjZXNzOiB0cnVlIH0pO1xyXG4gICAgICAgICAgICAgICAgY29ubi5jbG9zZSgpO1xyXG4gICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH0pO1xyXG59KTtcclxuXHJcbi8vIFN0YXJ0IFNlcnZlclxyXG5hcHAubGlzdGVuKHBvcnQsICgpID0+IHtcclxuICBjb25zb2xlLmxvZyhgU2VydmVyIHJ1bm5pbmcgb24gaHR0cDovL2xvY2FsaG9zdDoke3BvcnR9YCk7XHJcbn0pOyJdLCJtYXBwaW5ncyI6Ijs7OytDQUNBLHFKQUFBQSxtQkFBQSxZQUFBQSxvQkFBQSxXQUFBQyxDQUFBLFNBQUFDLENBQUEsRUFBQUQsQ0FBQSxPQUFBRSxDQUFBLEdBQUFDLE1BQUEsQ0FBQUMsU0FBQSxFQUFBQyxDQUFBLEdBQUFILENBQUEsQ0FBQUksY0FBQSxFQUFBQyxDQUFBLEdBQUFKLE1BQUEsQ0FBQUssY0FBQSxjQUFBUCxDQUFBLEVBQUFELENBQUEsRUFBQUUsQ0FBQSxJQUFBRCxDQUFBLENBQUFELENBQUEsSUFBQUUsQ0FBQSxDQUFBTyxLQUFBLEtBQUFDLENBQUEsd0JBQUFDLE1BQUEsR0FBQUEsTUFB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QyxDQUFDQyxJQUFJLENBQUMsd0JBQXdCLENBQUM7Z0JBQzlDO2NBQ0Y7Y0FFQSxJQUFNaUYsUUFBUSxHQUFHTSxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUNoRSxTQUFTO2NBRXZDLElBQUlxQyxNQUFNLEdBQUcsRUFBRTtjQUNmLEtBQUssSUFBSTdNLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBRzJJLFFBQVEsQ0FBQ3ZFLE1BQU0sRUFBRXBFLENBQUMsRUFBRSxFQUFFO2dCQUN4QzZNLE1BQU0sd0lBQUExRCxNQUFBLENBQ0MrRSxRQUFRLFNBQUEvRSxNQUFBLENBQU1SLFFBQVEsQ0FBQzNJLENBQUMsQ0FBQyxVQUFBbUosTUFBQSxDQUFPUCxJQUFJLENBQUM1SSxDQUFDLENBQUMsVUFBQW1KLE1BQUEsQ0FBT2lELGlCQUFpQixDQUFDcE0sQ0FBQyxDQUFDLFVBQUFtSixNQUFBLENBQU9nRCxVQUFVLENBQUNuTSxDQUFDLENBQUMsYUFBQW1KLE1BQUEsQ0FBVTRFLGNBQWMsT0FBSTtnQkFDekh0RyxPQUFPLENBQUM4QyxHQUFHLENBQUMsZUFBZSxFQUFFc0MsTUFBTSxDQUFDO2NBQ3RDO2NBQ0E5RCxJQUFJLENBQUNHLEtBQUssQ0FBQzJELE1BQU0sRUFBRSxVQUFDL0QsR0FBRyxFQUFFMkYsU0FBUyxFQUFLO2dCQUNyQyxJQUFJM0YsR0FBRyxFQUFFO2tCQUNQckIsT0FBTyxDQUFDQyxLQUFLLENBQUMseUJBQXlCLEVBQUVvQixHQUFHLENBQUM7a0JBQzdDQyxJQUFJLENBQUNhLEtBQUssQ0FBQyxDQUFDO2tCQUNacEIsR0FBRyxDQUFDUSxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNDLElBQUksQ0FBQyx3QkFBd0IsQ0FBQztrQkFDOUM7Z0JBQ0Y7Z0JBRUFULEdBQUcsQ0FBQzNCLElBQUksQ0FBQztrQkFBRXFELE9BQU8sRUFBRTtnQkFBSyxDQUFDLENBQUM7Z0JBQzNCbkIsSUFBSSxDQUFDYSxLQUFLLENBQUMsQ0FBQztjQUNkLENBQUMsQ0FBQztZQUNKLENBQUMsQ0FBQztVQUNKLENBQUMsQ0FBQztRQUNKLENBQUMsQ0FBQztNQUNKLENBQUMsQ0FBQztJQUNKLENBQUMsQ0FBQztFQUNKLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQzs7QUFFRjtBQUNBcEQsR0FBRyxDQUFDa0ksTUFBTSxDQUFDakksSUFBSSxFQUFFLFlBQU07RUFDckJnQixPQUFPLENBQUM4QyxHQUFHLHVDQUFBcEIsTUFBQSxDQUF1QzFDLElBQUksQ0FBRSxDQUFDO0FBQzNELENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","express","require","bcrypt","jwt","sql","cors","app","port","md5","connectionString","use","json","jwtkey","saltRounds","hashPassword","_ref","_callee","password","hashedPassword","_callee$","_context","hash","t0","console","error","_x","comparePassword","_ref2","_callee2","plainPassword","match","_callee2$","_context2","compare","_x2","_x3","post","req","res","_req$body","body","USERNAME","PASS","open","err","conn","status","send","query","concat","_ref3","_callee3","results","payload","options","token","_callee3$","_context3","close","userId","ID","username","expiresIn","sign","success","_x4","_x5","get","id","log","ID_PRODUK","Number","NAMA_PRODUK","DESKRIPSI_PRODUK","URL","IP_SERVER","PENEMPATAN","AKSES","CPU","RAM","STORAGE","SERVER","JENIS_DATABASE","FRAMEWORK","VER_FRAMEWORK","WAKTU_OPERASIONAL","DEVELOPER","BUSINESS_OWNER","PIC_NIPPOS","PORT","NAMA_STATUS","WEB_SERVER_ID","TANGGAL_LIVE","TANGGAL_DEPLOY","TANGGAL_AKHIR_UPDATE","TANGGAL_TUTUP","ID_ACCOUNT","JENIS_AKUN","EXP_DATE_PASSWORD","LENGTH_ACCOUNT","TANGGAL_UPDATE","Date","toISOString","split","query1","query2","query3","query4","NEW_NAMA_PENEMPATAN","NEW_NAMA_AKSES","NEW_NAMA_WEB_SERVER","NEW_NAMA_DEVELOPER","NEW_NIPPOS_PIC","NEW_NAMA_PIC","NEW_TELEPON_PIC","NEW_USERNAME_PIC","NEW_PASS_PIC","NEW_NAMA_STATUS","Array","isArray","JSON","stringify","replace","FLAG_STATUS","USERNAMELength","TANGGAL_CREATE","resultsq1","resultsq2","produkId","resultsp1","specId","ID_SPEC_SERVER","resultsq3","produkIdd","resultsp2","resultsq4","listen"],"sourceRoot":"D:\\Source MT XXVII\\BOOTCAMP\\ENTERPRISE\\ENTERPRISE-BACKEND\\","sources":["index.js"],"sourcesContent":["// import express from \"express\";\r\n// import bodyParser from \"body-parser\";\r\n// import cors from \"cors\";\r\n// const port = process.env.PORT || 3000;\r\n// const app = express();\r\n// app.use(bodyParser.json());\r\n// app.use(bodyParser.urlencoded({ extended: true }));\r\n// app.use(cors());\r\n// app.get(\"/*\", (req, res) => {\r\n//     res.status(200).json({ message: \"Hello-world\" });\r\n// });\r\n// app.listen(port, () => {\r\n//     console.log('Server-running on port 3000');\r\n// });\r\n\r\n\r\nconst express = require('express');\r\nconst bcrypt = require('bcrypt');\r\nconst jwt = require('jsonwebtoken');\r\nconst sql = require('msnodesqlv8');\r\nconst cors = require('cors');\r\nconst app = express();\r\nconst port = 5000;\r\nconst md5 = require('md5');\r\n\r\nconst connectionString = `Driver={ODBC Driver 17 for SQL Server};Server=40005-MP1PWS22;Database=enterprise;Trusted_Connection=yes;`;\r\n\r\n// sql.open(connectionString, (err, conn) => {\r\n//   if (err) {\r\n//     console.error('Error occurred:', err);\r\n//     return;\r\n//   }\r\n\r\n//   const query = 'SELECT * FROM produk'; // Replace with your table name\r\n\r\n//   conn.query(query, (err, results) => {\r\n//     if (err) {\r\n//       console.error('Error executing query:', err);\r\n//     } else {\r\n//       console.log(results);\r\n//     }\r\n\r\n//     conn.close();\r\n//   });\r\n// });\r\n\r\n// Middleware\r\napp.use(cors());\r\napp.use(express.json());\r\n\r\nconst jwtkey= \"secret\";\r\n\r\nconst saltRounds = 12;\r\n\r\n// Fungsi untuk meng-hash password\r\nconst hashPassword = async (password) => {\r\n  try {\r\n    const hashedPassword = await bcrypt.hash(password, saltRounds);\r\n    return hashedPassword;\r\n  } catch (error) {\r\n    console.error('Error hashing password:', error);\r\n    throw new Error('Error hashing password');\r\n  }\r\n};\r\n\r\nconst comparePassword = async (plainPassword, hashedPassword) => {\r\n  try {\r\n    const match = await bcrypt.compare(plainPassword, hashedPassword);\r\n    return match;\r\n  } catch (error) {\r\n    console.error('Error comparing passwords:', error);\r\n    throw new Error('Error comparing passwords');\r\n  }\r\n};\r\n\r\n\r\n// API Endpoint\r\napp.post('/login-sim',(req, res) => {\r\n  const { USERNAME, PASS } = req.body;\r\n\r\n  sql.open(connectionString, (err, conn) => {\r\n    if (err) {\r\n      console.error('Error occurred:', err);\r\n      res.status(500).send('Database connection error');\r\n      return;\r\n    }\r\n\r\n    const query = `SELECT * FROM karyawan WHERE USERNAME = '${USERNAME}';`;\r\n\r\n    conn.query(query, async (err, results) => {\r\n      if (err) {\r\n        console.error('Error executing query:', err);\r\n        conn.close();\r\n        res.status(500).send('Query execution error');\r\n        return;\r\n      }\r\n\r\n      if (results.length === 0) {\r\n        conn.close();\r\n        res.status(401).send('Invalid username or password');\r\n        return;\r\n      }\r\n\r\n      const hashedPassword = results[0].PASS; // Password yang ter-hash dari database\r\n\r\n      try {\r\n        const match = await bcrypt.compare(PASS, hashedPassword);\r\n        if (match) {\r\n          const payload = {\r\n            userId: results[0].ID,\r\n            username: results[0].USERNAME\r\n          };\r\n\r\n          const options = {\r\n            expiresIn: '1h' // Token berlaku selama 1 jam\r\n          };\r\n\r\n          const token = jwt.sign(payload, jwtkey, options);\r\n\r\n          res.json({\r\n            success: true,\r\n            token: token\r\n          });\r\n        } else {\r\n          res.status(401).send('Invalid username or password');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error comparing passwords:', error);\r\n        res.status(500).send('Error comparing passwords');\r\n      }\r\n\r\n      conn.close();\r\n    });\r\n  });\r\n});\r\n\r\n\r\napp.get('/main-table', (req, res) => {\r\n  sql.open(connectionString, (err, conn) => {\r\n    if (err) {\r\n      console.error('Error occurred:', err);\r\n      res.status(500).send('Database connection error');\r\n      return;\r\n    }\r\n\r\n    const query = `\r\n    SELECT produk.ID_PRODUK, \r\n    produk.NAMA_PRODUK, \r\n    produk_detail.URL, \r\n    spec_server.IP_SERVER, \r\n    karyawan.NAMA, \r\n    status.NAMA_STATUS \r\n    FROM produk \r\n    INNER JOIN produk_detail ON produk.ID_PRODUK = produk_detail.PRODUK_ID \r\n    INNER JOIN spec_server ON produk_detail.SERVER = spec_server.ID_SPEC_SERVER \r\n    INNER JOIN karyawan ON produk_detail.PIC_NIPPOS = karyawan.NIPPOS \r\n    INNER JOIN status ON produk.FLAG_STATUS = status.ID_STATUS`;\r\n\r\n    conn.query(query, (err, results) => {\r\n      if (err) {\r\n        console.error('Error executing query:', err);\r\n        res.status(500).send('Query execution error', err);\r\n      } else {\r\n        res.json(results);\r\n      }\r\n\r\n      conn.close();\r\n    });\r\n  });\r\n});\r\n\r\napp.get('/penempatan-cloud', (req, res) => {\r\n  sql.open(connectionString, (err, conn) => {\r\n    if (err) {\r\n      console.error('Error occurred:', err);\r\n      res.status(500).send('Database connection error');\r\n      return;\r\n    }\r\n\r\n    const query = `\r\n    SELECT penempatan.NAMA_PENEMPATAN AS penempatan, \r\n    COUNT(produk.NAMA_PRODUK) AS total \r\n    FROM penempatan \r\n    LEFT JOIN produk_detail ON penempatan.ID_PENEMPATAN = produk_detail.PENEMPATAN \r\n    LEFT JOIN produk ON produk.ID_PRODUK = produk_detail.PRODUK_ID \r\n    WHERE penempatan.NAMA_PENEMPATAN = 'Cloud' \r\n    GROUP BY penempatan.NAMA_PENEMPATAN;`;\r\n\r\n    conn.query(query, (err, results) => {\r\n      if (err) {\r\n        console.error('Error executing query:', err);\r\n        res.status(500).send('Query execution error', err);\r\n      } else {\r\n        res.json(results);\r\n      }\r\n\r\n      conn.close();\r\n    });\r\n  });\r\n});\r\n\r\napp.get('/penempatan-onprem', (req, res) => {\r\n  sql.open(connectionString, (err, conn) => {\r\n    if (err) {\r\n      console.error('Error occurred:', err);\r\n      res.status(500).send('Database connection error');\r\n      return;\r\n    }\r\n\r\n    const query = `\r\n    SELECT penempatan.NAMA_PENEMPATAN AS penempatan, \r\n    COUNT(produk.NAMA_PRODUK) AS total \r\n    FROM penempatan \r\n    LEFT JOIN produk_detail ON penempatan.ID_PENEMPATAN = produk_detail.PENEMPATAN \r\n    LEFT JOIN produk ON produk.ID_PRODUK = produk_detail.PRODUK_ID \r\n    WHERE penempatan.NAMA_PENEMPATAN = 'On-Premise' \r\n    GROUP BY penempatan.NAMA_PENEMPATAN;`;\r\n\r\n    conn.query(query, (err, results) => {\r\n      if (err) {\r\n        console.error('Error executing query:', err);\r\n        res.status(500).send('Query execution error', err);\r\n      } else {\r\n        res.json(results);\r\n      }\r\n\r\n      conn.close();\r\n    });\r\n  });\r\n});\r\n\r\napp.get('/status-aktif', (req, res) => {\r\n  sql.open(connectionString, (err, conn) => {\r\n    if (err) {\r\n      console.error('Error occurred:', err);\r\n      res.status(500).send('Database connection error');\r\n      return;\r\n    }\r\n\r\n    const query = `\r\n    SELECT status.NAMA_STATUS AS status, \r\n    COUNT(produk.NAMA_PRODUK) AS total \r\n    FROM status \r\n    LEFT JOIN produk ON produk.FLAG_STATUS = status.ID_STATUS \r\n    WHERE status.NAMA_STATUS = 'Aktif' \r\n    GROUP BY status.NAMA_STATUS;`;\r\n\r\n    conn.query(query, (err, results) => {\r\n      if (err) {\r\n        console.error('Error executing query:', err);\r\n        res.status(500).send('Query execution error', err);\r\n      } else {\r\n        res.json(results);\r\n      }\r\n\r\n      conn.close();\r\n    });\r\n  });\r\n});\r\n\r\napp.get('/status-nonaktif', (req, res) => {\r\n  sql.open(connectionString, (err, conn) => {\r\n    if (err) {\r\n      console.error('Error occurred:', err);\r\n      res.status(500).send('Database connection error');\r\n      return;\r\n    }\r\n\r\n    const query = `\r\n    SELECT status.NAMA_STATUS AS status, \r\n    COUNT(produk.NAMA_PRODUK) AS total \r\n    FROM status \r\n    LEFT JOIN produk ON produk.FLAG_STATUS = status.ID_STATUS \r\n    WHERE status.NAMA_STATUS = 'Non-Aktif' \r\n    GROUP BY status.NAMA_STATUS;`;\r\n\r\n    conn.query(query, (err, results) => {\r\n      if (err) {\r\n        console.error('Error executing query:', err);\r\n        res.status(500).send('Query execution error', err);\r\n      } else {\r\n        res.json(results);\r\n      }\r\n\r\n      conn.close();\r\n    });\r\n  });\r\n});\r\n\r\napp.get('/total', (req, res) => {\r\n  sql.open(connectionString, (err, conn) => {\r\n    if (err) {\r\n      console.error('Error occurred:', err);\r\n      res.status(500).send('Database connection error');\r\n      return;\r\n    }\r\n\r\n    const query = `SELECT COUNT(NAMA_PRODUK) AS total FROM produk;`;\r\n    conn.query(query, (err, results) => {\r\n      if (err) {\r\n        console.error('Error executing query:', err);\r\n        res.status(500).send('Query execution error', err);\r\n      } else {\r\n        res.json(results);\r\n      }\r\n\r\n      conn.close();\r\n    });\r\n  });\r\n});\r\n\r\napp.get('/produk-masuk', (req, res) => {\r\n  sql.open(connectionString, (err, conn) => {\r\n    if (err) {\r\n      console.error('Error occurred:', err);\r\n      res.status(500).send('Database connection error');\r\n      return;\r\n    }\r\n\r\n    const query = `\r\n    SELECT COUNT(produk.NAMA_PRODUK) AS total \r\n    FROM produk \r\n    LEFT JOIN produk_detail ON produk.ID_PRODUK = produk_detail.PRODUK_ID \r\n    WHERE DATEPART(MONTH, produk_detail.TANGGAL_DEPLOY) = DATEPART(MONTH, GETDATE()) \r\n    AND DATEPART(YEAR, produk_detail.TANGGAL_DEPLOY) = DATEPART(YEAR, GETDATE());`;\r\n\r\n    conn.query(query, (err, results) => {\r\n      if (err) {\r\n        console.error('Error executing query:', err);\r\n        res.status(500).send('Query execution error', err);\r\n      } else {\r\n        res.json(results);\r\n      }\r\n\r\n      conn.close();\r\n    });\r\n  });\r\n});\r\n\r\napp.get('/jenis-database', (req, res) => {\r\n  sql.open(connectionString, (err, conn) => {\r\n    if (err) {\r\n      console.error('Error occurred:', err);\r\n      res.status(500).send('Database connection error');\r\n      return;\r\n    }\r\n\r\n    const query = `\r\n    SELECT produk_detail.JENIS_DATABASE AS db, \r\nCOUNT(produk.NAMA_PRODUK) AS total \r\nFROM produk_detail  \r\nLEFT JOIN produk ON produk.ID_PRODUK = produk_detail.PRODUK_ID\r\nGROUP BY produk_detail.JENIS_DATABASE;`;\r\n\r\n    conn.query(query, (err, results) => {\r\n      if (err) {\r\n        console.error('Error executing query:', err);\r\n        res.status(500).send('Query execution error', err);\r\n      } else {\r\n        res.json(results);\r\n      }\r\n\r\n      conn.close();\r\n    });\r\n  });\r\n});\r\n\r\napp.get('/pilih-penempatan', (req, res) => {\r\n  sql.open(connectionString, (err, conn) => {\r\n    if (err) {\r\n      console.error('Error occurred:', err);\r\n      res.status(500).send('Database connection error');\r\n      return;\r\n    }\r\n\r\n    const query = `SELECT * FROM penempatan`;\r\n    conn.query(query, (err, results) => {\r\n      if (err) {\r\n        console.error('Error executing query:', err);\r\n        res.status(500).send('Query execution error', err);\r\n      } else {\r\n        res.json(results);\r\n      }\r\n\r\n      conn.close();\r\n    });\r\n  });\r\n});\r\n\r\napp.get('/pilih-karyawan', (req, res) => {\r\n  sql.open(connectionString, (err, conn) => {\r\n    if (err) {\r\n      console.error('Error occurred:', err);\r\n      res.status(500).send('Database connection error');\r\n      return;\r\n    }\r\n\r\n    const query = `SELECT * FROM karyawan`;\r\n    conn.query(query, (err, results) => {\r\n      if (err) {\r\n        console.error('Error executing query:', err);\r\n        res.status(500).send('Query execution error', err);\r\n      } else {\r\n        res.json(results);\r\n      }\r\n\r\n      conn.close();\r\n    });\r\n  });\r\n});\r\n\r\napp.get('/pilih-akses', (req, res) => {\r\n  sql.open(connectionString, (err, conn) => {\r\n    if (err) {\r\n      console.error('Error occurred:', err);\r\n      res.status(500).send('Database connection error');\r\n      return;\r\n    }\r\n\r\n    const query = `SELECT * FROM akses`;\r\n    conn.query(query, (err, results) => {\r\n      if (err) {\r\n        console.error('Error executing query:', err);\r\n        res.status(500).send('Query execution error', err);\r\n      } else {\r\n        res.json(results);\r\n      }\r\n\r\n      conn.close();\r\n    });\r\n  });\r\n});\r\n\r\napp.get('/pilih-developer', (req, res) => {\r\n  sql.open(connectionString, (err, conn) => {\r\n    if (err) {\r\n      console.error('Error occurred:', err);\r\n      res.status(500).send('Database connection error');\r\n      return;\r\n    }\r\n\r\n    const query = `SELECT * FROM developer`;\r\n    conn.query(query, (err, results) => {\r\n      if (err) {\r\n        console.error('Error executing query:', err);\r\n        res.status(500).send('Query execution error', err);\r\n      } else {\r\n        res.json(results);\r\n      }\r\n\r\n      conn.close();\r\n    });\r\n  });\r\n});\r\n\r\napp.get('/pilih-status', (req, res) => {\r\n  sql.open(connectionString, (err, conn) => {\r\n    if (err) {\r\n      console.error('Error occurred:', err);\r\n      res.status(500).send('Database connection error');\r\n      return;\r\n    }\r\n\r\n    const query = `SELECT * FROM status`;\r\n    conn.query(query, (err, results) => {\r\n      if (err) {\r\n        console.error('Error executing query:', err);\r\n        res.status(500).send('Query execution error', err);\r\n      } else {\r\n        res.json(results);\r\n      }\r\n\r\n      conn.close();\r\n    });\r\n  });\r\n});\r\n\r\napp.get('/pilih-server', (req, res) => {\r\n  sql.open(connectionString, (err, conn) => {\r\n    if (err) {\r\n      console.error('Error occurred:', err);\r\n      res.status(500).send('Database connection error');\r\n      return;\r\n    }\r\n\r\n    const query = `SELECT * FROM web_server`;\r\n    conn.query(query, (err, results) => {\r\n      if (err) {\r\n        console.error('Error executing query:', err);\r\n        res.status(500).send('Query execution error', err);\r\n      } else {\r\n        res.json(results);\r\n      }\r\n\r\n      conn.close();\r\n    });\r\n  });\r\n});\r\n\r\n\r\n\r\n\r\n\r\napp.post('/full-detail', (req, res) => {\r\n  sql.open(connectionString, (err, conn) => {\r\n    const { id } = req.body; // Mengambil id dari objek req.body\r\n    // console.log('Received ID:', id);\r\n    if (err) {\r\n      console.error('Error occurred:', err);\r\n      res.status(500).send('Database connection error');\r\n      return;\r\n    }\r\n\r\n    const query = `\r\n    SELECT produk.ID_PRODUK, \r\n    produk.NAMA_PRODUK, \r\n    produk.DESKRIPSI_PRODUK, \r\n    produk.FLAG_STATUS,\r\n\r\n    akses.NAMA_AKSES, \r\n    akses.ID_AKSES,\r\n\r\n    developer.ID_DEVELOPER,\r\n    developer.NAMA_DEVELOPER, \r\n    \r\n    karyawan.NAMA, \r\n    karyawan.TELEPON, \r\n    karyawan.NIPPOS,\r\n    karyawan.USERNAME,\r\n    karyawan.PASS,\r\n\r\n    penempatan.NAMA_PENEMPATAN, \r\n    penempatan.ID_PENEMPATAN,\r\n\r\n    status.NAMA_STATUS, \r\n    status.ID_STATUS,\r\n\r\n    produk_detail.ID_PRODUK_DETAIL,\r\n    produk_detail.PRODUK_ID,\r\n    produk_detail.PENEMPATAN,\r\n    produk_detail.PIC_NIPPOS, \r\n    produk_detail.AKSES,\r\n    produk_detail.DEVELOPER,\r\n    produk_detail.SERVER,\r\n    produk_detail.BUSINESS_OWNER, \r\n    produk_detail.WAKTU_OPERASIONAL, \r\n    produk_detail.URL, \r\n    produk_detail.PORT, \r\n    produk_detail.FRAMEWORK, \r\n    produk_detail.VER_FRAMEWORK, \r\n    produk_detail.JENIS_DATABASE, \r\n    produk_detail.TANGGAL_LIVE, \r\n    produk_detail.TANGGAL_AKHIR_UPDATE, \r\n    produk_detail.TANGGAL_TUTUP, \r\n    produk_detail.TANGGAL_DEPLOY, \r\n    produk_detail.BA_DEPLOY, \r\n    produk_detail.REQ_DEPLOY, \r\n\r\n    spec_server.ID_SPEC_SERVER,\r\n    spec_server.WEB_SERVER_ID,\r\n    spec_server.IP_SERVER, \r\n    spec_server.CPU, \r\n    spec_server.RAM, \r\n    spec_server.STORAGE, \r\n\r\n    web_server.ID_WEB_SERVER,\r\n    web_server.NAMA_WEB_SERVER \r\n\r\n    FROM produk_detail \r\n    INNER JOIN produk ON produk.ID_PRODUK = produk_detail.PRODUK_ID \r\n    INNER JOIN status ON produk.FLAG_STATUS = status.ID_STATUS \r\n    INNER JOIN akses ON produk_detail.AKSES = akses.ID_AKSES \r\n    INNER JOIN developer ON produk_detail.DEVELOPER = developer.ID_DEVELOPER \r\n    INNER JOIN karyawan ON karyawan.NIPPOS = produk_detail.PIC_NIPPOS \r\n    INNER JOIN penempatan ON produk_detail.PENEMPATAN = penempatan.ID_PENEMPATAN \r\n    INNER JOIN spec_server ON produk_detail.SERVER = spec_server.ID_SPEC_SERVER \r\n    INNER JOIN web_server ON spec_server.WEB_SERVER_ID = web_server.ID_WEB_SERVER \r\n    WHERE produk.ID_PRODUK = ${id};`;\r\n\r\n    // console.log('Received ID:', query);\r\n    conn.query(query, (err, results) => {\r\n      if (err) {\r\n        console.error('Error executing query:', err);\r\n        res.status(500).send('Query execution error', err);\r\n      } else {\r\n        // console.log('Query Results:', results);\r\n        res.json(results);\r\n      }\r\n\r\n      conn.close();\r\n    });\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n  // const { id } = req.body; // Mengambil id dari objek req.body\r\n  // console.log('Received ID:', id);\r\n  // if (!id) {\r\n  //   return res.status(400).send('ID is required');\r\n  // }\r\n\r\n  // sql.open(connectionString, (err, conn) => {\r\n  //   if (err) {\r\n  //     console.error('Error occurred:', err);\r\n  //     res.status(500).send('Database connection error');\r\n  //     return;\r\n  //   }\r\n\r\n  //   const query = `SELECT produk.NAMA_PRODUK, produk.DESKRIPSI_PRODUK, account.USERNAME, account.PASS, account.TANGGAL_CREATE, account.TANGGAL_UPDATE, account.EXP_DATE_PASSWORD, account.JENIS_AKUN, akses.NAMA_AKSES, developer.NAMA_DEVELOPER, karyawan.NAMA, karyawan.TELEPON, penempatan.NAMA_PENEMPATAN, status.NAMA_STATUS, produk_detail.PIC_NIPPOS, produk_detail.BUSINESS_OWNER, produk_detail.WAKTU_OPERASIONAL, produk_detail.URL, produk_detail.PORT, produk_detail.FRAMEWORK, produk_detail.VER_FRAMEWORK, produk_detail.JENIS_DATABASE, produk_detail.TANGGAL_LIVE, produk_detail.TANGGAL_AKHIR_UPDATE, produk_detail.TANGGAL_TUTUP, produk_detail.TANGGAL_DEPLOY, produk_detail.BA_DEPLOY, produk_detail.REQ_DEPLOY, spec_server.IP_SERVER, spec_server.CPU, spec_server.RAM, spec_server.STORAGE, web_server.NAMA_WEB_SERVER FROM produk_detail INNER JOIN produk ON produk.ID_PRODUK = produk_detail.PRODUK_ID INNER JOIN status ON produk.FLAG_STATUS = status.ID_STATUS INNER JOIN account ON produk.ID_PRODUK = account.PRODUK_ID INNER JOIN akses ON produk_detail.AKSES = akses.ID_AKSES INNER JOIN developer ON produk_detail.DEVELOPER = developer.ID_DEVELOPER INNER JOIN karyawan ON karyawan.NIPPOS = produk_detail.PIC_NIPPOS INNER JOIN penempatan ON produk_detail.PENEMPATAN = penempatan.ID_PENEMPATAN INNER JOIN spec_server ON produk_detail.SERVER = spec_server.ID_SPEC_SERVER INNER JOIN web_server ON spec_server.WEB_SERVER_ID = web_server.ID_WEB_SERVER WHERE produk_detail.ID_PRODUK_DETAIL = ${id};`;\r\n  //   console.log('Received ID:', query);\r\n  //   conn.query(query, [id], (err, results) => {\r\n  //     if (err) {\r\n  //       console.error('Error executing query:', err);\r\n  //       res.status(500).send('Query execution error', err);\r\n  //     } else {\r\n  //       res.json(results);\r\n  //     }\r\n\r\n  //     conn.close();\r\n  // });\r\n  // });\r\n});\r\n\r\napp.post('/full-account', (req, res) => {\r\n  sql.open(connectionString, (err, conn) => {\r\n    const { id } = req.body; // Mengambil id dari objek req.body\r\n    // console.log('Received ID:', id);\r\n    if (err) {\r\n      console.error('Error occurred:', err);\r\n      res.status(500).send('Database connection error');\r\n      return;\r\n    }\r\n\r\n    const query = `\r\n    SELECT account.ID_ACCOUNT, \r\n    account.USERNAME, \r\n    account.PASS, \r\n    account.EXP_DATE_PASSWORD, \r\n    account.JENIS_AKUN FROM account \r\n    WHERE account.PRODUK_ID = ${id};`;\r\n    // console.log('Received ID:', query);\r\n    conn.query(query, (err, results) => {\r\n      if (err) {\r\n        console.error('Error executing query:', err);\r\n        res.status(500).send('Query execution error', err);\r\n      } else {\r\n        // console.log('Query Results:', results);\r\n        res.json(results);\r\n      }\r\n\r\n      conn.close();\r\n    });\r\n  });\r\n});\r\n\r\napp.post('/update-all', (req, res) => {\r\n  sql.open(connectionString, (err, conn) => {\r\n    console.log('pppp', req.body)\r\n    var ID_PRODUK = Number(req.body.ID_PRODUK); // Mengambil id dari objek req.body\r\n    var NAMA_PRODUK = req.body.NAMA_PRODUK;\r\n    var DESKRIPSI_PRODUK = req.body.DESKRIPSI_PRODUK;\r\n    console.log('pppp', typeof (ID_PRODUK))\r\n    console.log('pppp', typeof (NAMA_PRODUK))\r\n    console.log('pppp', typeof (DESKRIPSI_PRODUK))\r\n    var URL = req.body.URL;\r\n    var IP_SERVER = req.body.IP_SERVER;\r\n    var PENEMPATAN = Number(req.body.PENEMPATAN);\r\n    var AKSES = Number(req.body.AKSES);\r\n    var CPU = req.body.CPU;\r\n    var RAM = req.body.RAM;\r\n    var STORAGE = req.body.STORAGE;\r\n    var SERVER = Number(req.body.SERVER);\r\n    var JENIS_DATABASE = req.body.JENIS_DATABASE;\r\n    var FRAMEWORK = req.body.FRAMEWORK;\r\n    var VER_FRAMEWORK = req.body.VER_FRAMEWORK;\r\n    var WAKTU_OPERASIONAL = req.body.WAKTU_OPERASIONAL;\r\n    var DEVELOPER = req.body.DEVELOPER;\r\n    var BUSINESS_OWNER = req.body.BUSINESS_OWNER;\r\n    var PIC_NIPPOS = req.body.PIC_NIPPOS;\r\n    // const { TELEPON } = req.body.TELEPON;\r\n    var PORT = req.body.PORT;\r\n    var NAMA_STATUS = Number(req.body.NAMA_STATUS);\r\n\r\n    var WEB_SERVER_ID = Number(req.body.WEB_SERVER_ID)\r\n    var TANGGAL_LIVE = req.body.TANGGAL_LIVE;\r\n    var TANGGAL_DEPLOY = req.body.TANGGAL_DEPLOY;\r\n    var TANGGAL_AKHIR_UPDATE = req.body.TANGGAL_AKHIR_UPDATE;\r\n    var TANGGAL_TUTUP = req.body.TANGGAL_TUTUP;\r\n\r\n    var ID_ACCOUNT = req.body.ID_ACCOUNT;\r\n    var JENIS_AKUN = req.body.JENIS_AKUN;\r\n    var USERNAME = req.body.USERNAME;\r\n    var PASS = req.body.PASS;\r\n    var EXP_DATE_PASSWORD = req.body.EXP_DATE_PASSWORD;\r\n    var LENGTH_ACCOUNT = Number(req.body.LENGTH_ACCOUNT)\r\n    var TANGGAL_UPDATE = new Date().toISOString().split('T')[0];\r\n    console.log('Received ID:', ID_ACCOUNT);\r\n    console.log('Received ID:', JENIS_AKUN);\r\n    console.log('Received ID:', USERNAME);\r\n    console.log('Received ID:', PASS);\r\n    console.log('Received ID:', typeof (EXP_DATE_PASSWORD[0]));\r\n    console.log('Received ID:', typeof (TANGGAL_LIVE));\r\n    console.log('Received ID:', LENGTH_ACCOUNT);\r\n    if (err) {\r\n      console.error('Error occurred:', err);\r\n      res.status(500).send('Database connection error');\r\n      return;\r\n    }\r\n\r\n    const query1 = `UPDATE produk_detail SET\r\n    PIC_NIPPOS = '${PIC_NIPPOS}',\r\n    PENEMPATAN = ${PENEMPATAN},\r\n    AKSES = ${AKSES},\r\n    DEVELOPER = ${DEVELOPER},\r\n    SERVER = ${SERVER},\r\n    BUSINESS_OWNER = '${BUSINESS_OWNER}',\r\n    WAKTU_OPERASIONAL = '${WAKTU_OPERASIONAL}',\r\n    URL = '${URL}',\r\n    PORT = '${PORT}',\r\n    FRAMEWORK = '${FRAMEWORK}',\r\n    VER_FRAMEWORK = '${VER_FRAMEWORK}',\r\n    JENIS_DATABASE = '${JENIS_DATABASE}',\r\n    TANGGAL_LIVE = CAST(NULLIF('${TANGGAL_LIVE}', '') AS DATE),\r\n    TANGGAL_AKHIR_UPDATE = CAST(NULLIF('${TANGGAL_AKHIR_UPDATE}', '') AS DATE),\r\n    TANGGAL_TUTUP = CAST(NULLIF('${TANGGAL_TUTUP}', '') AS DATE),\r\n    TANGGAL_DEPLOY = CAST(NULLIF('${TANGGAL_DEPLOY}', '') AS DATE)\r\n    WHERE PRODUK_ID = ${ID_PRODUK};`\r\n\r\n    const query2 = `UPDATE produk SET \r\n    NAMA_PRODUK = '${NAMA_PRODUK}',\r\n    DESKRIPSI_PRODUK = '${DESKRIPSI_PRODUK}' \r\n    WHERE ID_PRODUK = ${ID_PRODUK};`\r\n\r\n    const query3 = `UPDATE spec_server SET\r\n    WEB_SERVER_ID = ${WEB_SERVER_ID},\r\n    IP_SERVER = '${IP_SERVER}',\r\n    CPU = '${CPU}',\r\n    RAM = '${RAM}',\r\n    STORAGE = '${STORAGE}'\r\n    WHERE ID_SPEC_SERVER = ${SERVER};\r\n    `\r\n\r\n    let query4 = '';\r\n    for (let i = 0; i < LENGTH_ACCOUNT; i++) {\r\n      query4 += `UPDATE account SET\r\n        JENIS_AKUN = '${JENIS_AKUN[i]}',\r\n        USERNAME = '${USERNAME[i]}',\r\n        PASS = '${PASS[i]}',\r\n        EXP_DATE_PASSWORD = '${EXP_DATE_PASSWORD[i]}',\r\n        TANGGAL_UPDATE = '${TANGGAL_UPDATE}'\r\n        WHERE ID_ACCOUNT = ${ID_ACCOUNT[i]};\\n`;\r\n    }\r\n\r\n\r\n    // console.log('Received ID:', query);\r\n    conn.query(query1, (err, results) => {\r\n      if (err) {\r\n        console.error('Error executing query1:', err);\r\n        conn.close();\r\n        res.status(500).send('Query1 execution error');\r\n        return;\r\n      }\r\n\r\n      conn.query(query2, (err, results) => {\r\n        if (err) {\r\n          console.error('Error executing query2:', err);\r\n          conn.close();\r\n          res.status(500).send('Query2 execution error');\r\n          return;\r\n        }\r\n\r\n        conn.query(query3, (err, results) => {\r\n          if (err) {\r\n            console.error('Error executing query3:', err);\r\n            conn.close();\r\n            res.status(500).send('Query3 execution error');\r\n            return;\r\n          }\r\n\r\n          conn.query(query4, (err, results) => {\r\n            if (err) {\r\n              console.error('Error executing query3:', err);\r\n              conn.close();\r\n              res.status(500).send('Query3 execution error');\r\n              return;\r\n            }\r\n\r\n            res.json({ success: true });\r\n            conn.close();\r\n          });\r\n        });\r\n      });\r\n    });\r\n\r\n    // conn.query(query2, (err, results) => {\r\n    //   if (err) {\r\n    //     console.error('Error executing query:', err);\r\n    //     res.status(500).send('Query execution error', err);\r\n    //   } else {\r\n    //     // console.log('Query Results:', results);\r\n    //     res.json(results);\r\n    //   }\r\n\r\n    //   conn.close();\r\n    // });\r\n  });\r\n});\r\n\r\n\r\n\r\n\r\n\r\napp.post('/new-penempatan', (req, res) => {\r\n  sql.open(connectionString, (err, conn) => {\r\n    const { NEW_NAMA_PENEMPATAN } = req.body;\r\n    // console.log('Received NEW_NAMA_PENEMPATAN:', NEW_NAMA_PENEMPATAN);\r\n    if (err) {\r\n      console.error('Error occurred:', err);\r\n      res.status(500).send('Database connection error');\r\n      return;\r\n    }\r\n\r\n    const query = `\r\n    INSERT INTO penempatan(NAMA_PENEMPATAN) VALUES ('${NEW_NAMA_PENEMPATAN}');`;\r\n    console.log(\"query\", query)\r\n    conn.query(query, (err, results) => {\r\n      if (err) {\r\n        console.error('Error executing query:', err);\r\n        res.status(500).send('Query execution error', err);\r\n      } else {\r\n        // console.log('Query Results:', results);\r\n        res.json(results);\r\n      }\r\n\r\n      conn.close();\r\n    });\r\n  });\r\n}); `\r\n`\r\napp.post('/new-akses', (req, res) => {\r\n  sql.open(connectionString, (err, conn) => {\r\n    const { NEW_NAMA_AKSES } = req.body;\r\n    // console.log('Received NEW_NAMA_AKSES:', NEW_NAMA_AKSES);\r\n    if (err) {\r\n      console.error('Error occurred:', err);\r\n      res.status(500).send('Database connection error');\r\n      return;\r\n    }\r\n\r\n    const query = `\r\n    INSERT INTO akses(NAMA_AKSES) VALUES ('${NEW_NAMA_AKSES}');`;\r\n    console.log(\"query\", query)\r\n    conn.query(query, (err, results) => {\r\n      if (err) {\r\n        console.error('Error executing query:', err);\r\n        res.status(500).send('Query execution error', err);\r\n      } else {\r\n        // console.log('Query Results:', results);\r\n        res.json(results);\r\n      }\r\n\r\n      conn.close();\r\n    });\r\n  });\r\n});\r\n\r\napp.post('/new-webserver', (req, res) => {\r\n  sql.open(connectionString, (err, conn) => {\r\n    const { NEW_NAMA_WEB_SERVER } = req.body;\r\n    // console.log('Received NEW_NAMA_WEB_SERVER:', NEW_NAMA_WEB_SERVER);\r\n    if (err) {\r\n      console.error('Error occurred:', err);\r\n      res.status(500).send('Database connection error');\r\n      return;\r\n    }\r\n\r\n    const query = `\r\n    INSERT INTO web_server(NAMA_WEB_SERVER) VALUES ('${NEW_NAMA_WEB_SERVER}');`;\r\n    console.log(\"query\", query)\r\n    conn.query(query, (err, results) => {\r\n      if (err) {\r\n        console.error('Error executing query:', err);\r\n        res.status(500).send('Query execution error', err);\r\n      } else {\r\n        // console.log('Query Results:', results);\r\n        res.json(results);\r\n      }\r\n\r\n      conn.close();\r\n    });\r\n  });\r\n});\r\n\r\napp.post('/new-developer', (req, res) => {\r\n  sql.open(connectionString, (err, conn) => {\r\n    const { NEW_NAMA_DEVELOPER } = req.body;\r\n    // console.log('Received NEW_NAMA_DEVELOPER:', NEW_NAMA_DEVELOPER);\r\n    if (err) {\r\n      console.error('Error occurred:', err);\r\n      res.status(500).send('Database connection error');\r\n      return;\r\n    }\r\n\r\n    const query = `\r\n    INSERT INTO developer(NAMA_DEVELOPER) VALUES ('${NEW_NAMA_DEVELOPER}');`;\r\n    console.log(\"query\", query)\r\n    conn.query(query, (err, results) => {\r\n      if (err) {\r\n        console.error('Error executing query:', err);\r\n        res.status(500).send('Query execution error', err);\r\n      } else {\r\n        // console.log('Query Results:', results);\r\n        res.json(results);\r\n      }\r\n\r\n      conn.close();\r\n    });\r\n  });\r\n});\r\n\r\napp.post('/new-pic', (req, res) => {\r\n  sql.open(connectionString, (err, conn) => {\r\n    var NEW_NIPPOS_PIC = req.body.NEW_NIPPOS_PIC;\r\n    var NEW_NAMA_PIC = req.body.NEW_NAMA_PIC;\r\n    var NEW_TELEPON_PIC = req.body.NEW_TELEPON_PIC;\r\n    var NEW_USERNAME_PIC = req.body.NEW_USERNAME_PIC;\r\n    var NEW_PASS_PIC = req.body.NEW_PASS_PIC;\r\n    console.log('Received NEW_NAMA_PIC:', NEW_NAMA_PIC);\r\n    if (err) {\r\n      console.error('Error occurred:', err);\r\n      res.status(500).send('Database connection error');\r\n      return;\r\n    }\r\n\r\n    const query = `\r\n    INSERT INTO karyawan(NIPPOS, NAMA, TELEPON, USERNAME, PASS) \r\n    VALUES ('${NEW_NIPPOS_PIC}', '${NEW_NAMA_PIC}', '${NEW_TELEPON_PIC}', '${NEW_USERNAME_PIC}', '${NEW_PASS_PIC}');`;\r\n    console.log(\"query\", query)\r\n    conn.query(query, (err, results) => {\r\n      if (err) {\r\n        console.error('Error executing query:', err);\r\n        res.status(500).send('Query execution error', err);\r\n      } else {\r\n        // console.log('Query Results:', results);\r\n        res.json(results);\r\n      }\r\n\r\n      conn.close();\r\n    });\r\n  });\r\n});\r\n\r\napp.post('/new-status', (req, res) => {\r\n  sql.open(connectionString, (err, conn) => {\r\n    const { NEW_NAMA_STATUS } = req.body;\r\n    // console.log('Received NEW_NAMA_STATUS:', NEW_NAMA_STATUS);\r\n    if (err) {\r\n      console.error('Error occurred:', err);\r\n      res.status(500).send('Database connection error');\r\n      return;\r\n    }\r\n\r\n    const query = `\r\n    INSERT INTO status(NAMA_STATUS) VALUES ('${NEW_NAMA_STATUS}');`;\r\n    console.log(\"query\", query)\r\n    conn.query(query, (err, results) => {\r\n      if (err) {\r\n        console.error('Error executing query:', err);\r\n        res.status(500).send('Query execution error', err);\r\n      } else {\r\n        // console.log('Query Results:', results);\r\n        res.json(results);\r\n      }\r\n\r\n      conn.close();\r\n    });\r\n  });\r\n});\r\n\r\napp.post('/new-produk', (req, res) => {\r\n  sql.open(connectionString, (err, conn) => {\r\n    console.log('pppp', req.body)\r\n    // console.log('pppp', typeof (ID_PRODUK))\r\n    // console.log('pppp', typeof (NAMA_PRODUK))\r\n    // console.log('pppp', typeof (DESKRIPSI_PRODUK))\r\n\r\n    // var ID_PRODUK = Number(req.body.ID_PRODUK); \r\n    var NAMA_PRODUK = req.body.NAMA_PRODUK;\r\n    var DESKRIPSI_PRODUK = req.body.DESKRIPSI_PRODUK;\r\n    var URL = Array.isArray(req.body.URL) && req.body.URL.length === 0 ? null : JSON.stringify(req.body.URL).replace(/\"/g, \"'\");\r\n    var IP_SERVER = Array.isArray(req.body.IP_SERVER) && req.body.IP_SERVER.length === 0 ? null : JSON.stringify(req.body.IP_SERVER).replace(/\"/g, \"'\");\r\n    var PENEMPATAN = Array.isArray(req.body.PENEMPATAN) && req.body.PENEMPATAN.length === 0 ? null : Number(req.body.PENEMPATAN);\r\n    var AKSES = Array.isArray(req.body.AKSES) && req.body.AKSES.length === 0 ? null : Number(req.body.AKSES);\r\n    var CPU = Array.isArray(req.body.CPU) && req.body.CPU.length === 0 ? null : JSON.stringify(req.body.CPU).replace(/\"/g, \"'\");\r\n    var RAM = Array.isArray(req.body.RAM) && req.body.RAM.length === 0 ? null : JSON.stringify(req.body.RAM).replace(/\"/g, \"'\");\r\n    var STORAGE = Array.isArray(req.body.STORAGE) && req.body.STORAGE.length === 0 ? null : JSON.stringify(req.body.STORAGE).replace(/\"/g, \"'\");\r\n    var SERVER = Array.isArray(req.body.SERVER) && req.body.SERVER.length === 0 ? null : Number(req.body.SERVER);\r\n    var JENIS_DATABASE = Array.isArray(req.body.JENIS_DATABASE) && req.body.JENIS_DATABASE.length === 0 ? null : JSON.stringify(req.body.JENIS_DATABASE).replace(/\"/g, \"'\");\r\n    var FRAMEWORK = Array.isArray(req.body.FRAMEWORK) && req.body.FRAMEWORK.length === 0 ? null : JSON.stringify(req.body.FRAMEWORK).replace(/\"/g, \"'\");\r\n    var VER_FRAMEWORK = Array.isArray(req.body.VER_FRAMEWORK) && req.body.VER_FRAMEWORK.length === 0 ? null : JSON.stringify(req.body.VER_FRAMEWORK).replace(/\"/g, \"'\");\r\n    var WAKTU_OPERASIONAL = Array.isArray(req.body.WAKTU_OPERASIONAL) && req.body.WAKTU_OPERASIONAL.length === 0 ? null : JSON.stringify(req.body.WAKTU_OPERASIONAL).replace(/\"/g, \"'\");\r\n    var DEVELOPER = Array.isArray(req.body.DEVELOPER) && req.body.DEVELOPER.length === 0 ? null : Number(req.body.DEVELOPER);\r\n    var BUSINESS_OWNER = Array.isArray(req.body.BUSINESS_OWNER) && req.body.BUSINESS_OWNER.length === 0 ? null : JSON.stringify(req.body.BUSINESS_OWNER).replace(/\"/g, \"'\");\r\n    var PIC_NIPPOS = Array.isArray(req.body.PIC_NIPPOS) && req.body.PIC_NIPPOS.length === 0 ? null : JSON.stringify(req.body.PIC_NIPPOS).replace(/\"/g, \"'\");\r\n    // const { TELEPON } = req.body.TELEPON;\r\n    var PORT = Array.isArray(req.body.PORT) && req.body.PORT.length === 0 ? null : req.body.PORT;\r\n    var NAMA_STATUS = Number(req.body.NAMA_STATUS);\r\n    var FLAG_STATUS = Number(req.body.FLAG_STATUS);\r\n\r\n    var WEB_SERVER_ID = Number(req.body.WEB_SERVER_ID)\r\n    var TANGGAL_LIVE = Array.isArray(req.body.TANGGAL_LIVE) && req.body.TANGGAL_LIVE.length === 0 ? null : JSON.stringify(req.body.TANGGAL_LIVE).replace(/\"/g, \"'\");\r\n    var TANGGAL_DEPLOY = Array.isArray(req.body.TANGGAL_DEPLOY) && req.body.TANGGAL_DEPLOY.length === 0 ? null : JSON.stringify(req.body.TANGGAL_DEPLOY).replace(/\"/g, \"'\");\r\n    var TANGGAL_AKHIR_UPDATE = Array.isArray(req.body.TANGGAL_AKHIR_UPDATE) && req.body.TANGGAL_AKHIR_UPDATE.length === 0 ? null : JSON.stringify(req.body.TANGGAL_AKHIR_UPDATE).replace(/\"/g, \"'\");\r\n    var TANGGAL_TUTUP = Array.isArray(req.body.TANGGAL_TUTUP) && req.body.TANGGAL_TUTUP.length === 0 ? null : JSON.stringify(req.body.TANGGAL_TUTUP).replace(/\"/g, \"'\");\r\n\r\n    var ID_ACCOUNT = req.body.ID_ACCOUNT;\r\n    var JENIS_AKUN = req.body.JENIS_AKUN;\r\n    var USERNAME = req.body.USERNAME;\r\n    var USERNAMELength = req.body.USERNAME;\r\n    var PASS = req.body.PASS;\r\n    var EXP_DATE_PASSWORD = req.body.EXP_DATE_PASSWORD;\r\n    var LENGTH_ACCOUNT = Number(req.body.LENGTH_ACCOUNT);\r\n    var TANGGAL_CREATE = new Date().toISOString().split('T')[0];\r\n    // console.log('Received ID:', ID_ACCOUNT);\r\n    // console.log('Received ID:', JENIS_AKUN);\r\n    // console.log('Received ID:', USERNAME);\r\n    // console.log('Received ID:', PASS);\r\n    // console.log('Received ID:', typeof (EXP_DATE_PASSWORD[0]));\r\n    // console.log('Received ID:', typeof (TANGGAL_LIVE));\r\n    // console.log('Received ID:', LENGTH_ACCOUNT);\r\n    if (err) {\r\n      console.error('Error occurred:', err);\r\n      res.status(500).send('Database connection error');\r\n      return;\r\n    }\r\n\r\n    const query1 = `INSERT INTO produk(FLAG_STATUS, NAMA_PRODUK, DESKRIPSI_PRODUK)\r\n    VALUES (1,'${NAMA_PRODUK}','${DESKRIPSI_PRODUK}');`\r\n\r\n\r\n    console.log('Received ID:', query1);\r\n    conn.query(query1, (err, resultsq1) => {\r\n      if (err) {\r\n        console.error('Error executing query1:', err);\r\n        conn.close();\r\n        res.status(500).send('Query1 execution error');\r\n        return;\r\n      }\r\n\r\n      const query2 = `INSERT INTO spec_server (WEB_SERVER_ID, IP_SERVER, CPU, RAM, STORAGE)\r\n        VALUES (${SERVER}, ${IP_SERVER}, ${CPU}, ${RAM}, ${STORAGE})`\r\n\r\n      console.log('Received ID2:', query2);\r\n      conn.query(query2, (err, resultsq2) => {\r\n        if (err) {\r\n          console.error('Error executing query2:', err);\r\n          conn.close();\r\n          res.status(500).send('Query2 execution error');\r\n          return;\r\n        }\r\n\r\n\r\n\r\n        const produkId = `WITH LastProduct AS (\r\n        SELECT TOP 1 ID_PRODUK\r\n        FROM produk\r\n        ORDER BY ID_PRODUK DESC\r\n    ),\r\n    LastSpecServer AS (\r\n        SELECT TOP 1 ID_SPEC_SERVER\r\n        FROM spec_server\r\n        ORDER BY ID_SPEC_SERVER DESC\r\n    )\r\n    SELECT \r\n        (SELECT ID_PRODUK FROM LastProduct) AS ID_PRODUK,\r\n        (SELECT ID_SPEC_SERVER FROM LastSpecServer) AS ID_SPEC_SERVER;\r\n    ;\r\n      `;\r\n\r\n        conn.query(produkId, (err, resultsp1) => {\r\n          if (err) {\r\n            console.error('Error executing query2:', err);\r\n            conn.close();\r\n            res.status(500).send('Query2 execution error');\r\n            return;\r\n          }\r\n\r\n          const produkId = resultsp1[0].ID_PRODUK;\r\n          const specId = resultsp1[0].ID_SPEC_SERVER;\r\n\r\n\r\n\r\n\r\n\r\n          const query3 = `INSERT INTO produk_detail\r\n      (PRODUK_ID, PIC_NIPPOS, PENEMPATAN, AKSES, DEVELOPER, SERVER, BUSINESS_OWNER, \r\n        WAKTU_OPERASIONAL, URL, PORT, FRAMEWORK, VER_FRAMEWORK, JENIS_DATABASE, \r\n        TANGGAL_LIVE, TANGGAL_AKHIR_UPDATE, TANGGAL_TUTUP, TANGGAL_DEPLOY)\r\n      VALUES (${produkId},${PIC_NIPPOS},${PENEMPATAN},${AKSES},${DEVELOPER},${specId},${BUSINESS_OWNER},\r\n      ${WAKTU_OPERASIONAL},${URL},${PORT},${FRAMEWORK},${VER_FRAMEWORK},${JENIS_DATABASE}, \r\n      ${TANGGAL_LIVE},${TANGGAL_AKHIR_UPDATE},${TANGGAL_TUTUP},${TANGGAL_DEPLOY});`\r\n\r\n          console.log('Received ID3:', query3);\r\n\r\n          conn.query(query3, (err, resultsq3) => {\r\n            if (err) {\r\n              console.error('Error executing query2:', err);\r\n              conn.close();\r\n              res.status(500).send('Query2 execution error');\r\n              return;\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n            const produkIdd = `SELECT TOP 1 ID_PRODUK\r\n          FROM produk\r\n          ORDER BY ID_PRODUK DESC\r\n      ;\r\n        `;\r\n\r\n            conn.query(produkIdd, (err, resultsp2) => {\r\n              if (err) {\r\n                console.error('Error executing query2:', err);\r\n                conn.close();\r\n                res.status(500).send('Query2 execution error');\r\n                return;\r\n              }\r\n\r\n              const produkId = resultsp2[0].ID_PRODUK;\r\n\r\n              let query4 = ''\r\n              for (let i = 0; i < USERNAME.length; i++) {\r\n                query4 += `INSERT INTO account(PRODUK_ID, USERNAME, PASS, EXP_DATE_PASSWORD, JENIS_AKUN, FLAG_STATUS, TANGGAL_CREATE)\r\n              VALUES(${produkId}, '${USERNAME[i]}', '${PASS[i]}', '${EXP_DATE_PASSWORD[i]}', '${JENIS_AKUN[i]}', 1, '${TANGGAL_CREATE}')`\r\n                console.log('Received ID4:', query4);\r\n              }\r\n              conn.query(query4, (err, resultsq4) => {\r\n                if (err) {\r\n                  console.error('Error executing query2:', err);\r\n                  conn.close();\r\n                  res.status(500).send('Query2 execution error');\r\n                  return;\r\n                }\r\n\r\n                res.json({ success: true });\r\n                conn.close();\r\n              });\r\n            });\r\n          });\r\n        });\r\n      });\r\n    });\r\n  });\r\n});\r\n\r\n// Start Server\r\napp.listen(port, () => {\r\n  console.log(`Server running on http://localhost:${port}`);\r\n});"],"mappings":"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","ignoreList":[]}},"mtime":1724140489852}}